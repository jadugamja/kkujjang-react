{"version":3,"file":"static/js/107.fa681de8.chunk.js","mappings":"uRAgBA,MAAMA,EAAqBA,EAAGC,OAAMC,iBAClC,MAAMC,GAAmBC,EAAAA,EAAAA,IAAkBC,EAAAA,IACrCC,GAAkBC,EAAAA,EAAAA,IAAeC,EAAAA,KAChCC,IAAWC,EAAAA,EAAAA,GAAW,CAAC,eACvBC,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,KAC1BC,EAAUC,IAAeF,EAAAA,EAAAA,UAAS,IAClCG,EAAaC,IAAkBJ,EAAAA,EAAAA,UAAS,KACxCK,EAAeC,IAAoBN,EAAAA,EAAAA,UAAS,KAC5CO,EAAYC,IAAiBR,EAAAA,EAAAA,WAAS,IACtCS,EAAWC,IAAgBV,EAAAA,EAAAA,UAAS,CACzCW,OAAQ,MACRC,IAAM,qBAAoBX,IAC1BY,QAAS,CACPC,UAAWlB,EAAQkB,cAGjB,SAAEC,EAAQ,QAAEC,EAAO,MAAEC,EAAK,UAAEC,IAAcC,EAAAA,EAAAA,GAASV,GAAW,GAqDpE,OAnDAW,EAAAA,EAAAA,YAAU,KACU,OAAdX,GACFS,GACF,GACC,CAACT,KAEJW,EAAAA,EAAAA,YAAU,KACgB,OAApB3B,GACFiB,EAAa,IACRjB,EACHmB,IAAM,qBAAoBX,KAE9B,GACC,CAACR,KAEJ2B,EAAAA,EAAAA,YAAU,KACS,OAAbL,GACFX,EAA4C,IAA7BW,EAASM,OAAOC,SAAiB,EAAIP,EAASM,OAAOC,UACpEvB,EAAQgB,EAASM,OAAOE,MACxBzB,GAAM0B,SAASC,IACbnC,GAAkBoC,IAAQ,IAAWA,EAAU,CAACD,EAAKE,IAAKF,EAAKG,YAAY,MAG7ExB,EAAe,GACfL,EAAQ,IACV,GACC,CAACgB,KAGJK,EAAAA,EAAAA,YAAU,KACR,GAAqB,IAAjBtB,GAAM+B,OACR,OAGF,IAAIC,EAEFA,EADoB,KAAlBzB,EACa,SAAQJ,cAAqBI,IAE7B,SAAQJ,IAGrBM,IACFuB,GAAe,eAGjBpB,EAAa,IACRD,EACHG,IAAM,eAAckB,KACpB,GACD,CAAC7B,EAAUI,EAAeE,KAG3BwB,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SACY,SAAT7C,GACC2C,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEC,EAAAA,EAAAA,MAACC,EAAAA,GAAG,CAAAF,SAAA,EACFC,EAAAA,EAAAA,MAACE,EAAa,CAACC,IAAI,UAASJ,SAAA,EAC1BF,EAAAA,EAAAA,KAACO,EAAAA,EAAe,CAACC,MAAM,UACvBL,EAAAA,EAAAA,MAACM,EAAK,CAAAP,SAAA,EACJF,EAAAA,EAAAA,KAAA,SACE3C,KAAK,WACLqD,QAASlC,EACTmC,SAAWC,GAAMnC,EAAcmC,EAAEC,OAAOH,WACxC,gCAGJV,EAAAA,EAAAA,KAACc,EAAgB,CAACC,UAAU,OAAOC,YAAY,OAAMd,UACnDF,EAAAA,EAAAA,KAACiB,EAAAA,EAAS,CAACC,WAAW,qBAAM3C,iBAAkBA,UAGlDyB,EAAAA,EAAAA,KAACmB,EAAAA,EAAc,CACbC,QAAQ,EACRZ,MAAM,OACNzC,KAAMA,EACNT,WAAYA,KAEd0C,EAAAA,EAAAA,KAACqB,EAAAA,EAAU,CACTnD,SAAUA,EACVC,YAAaA,EACbC,YAAaA,UAKnB+B,EAAAA,EAAAA,MAACC,EAAAA,GAAG,CAAC/C,KAAMA,EAAK6C,SAAA,EACdF,EAAAA,EAAAA,KAACO,EAAAA,EAAe,CAAClD,KAAMA,EAAMmD,MAAM,UACnCR,EAAAA,EAAAA,KAACmB,EAAAA,EAAc,CACbC,QAAQ,EACRZ,MAAM,OACNzC,KAAMA,EACNT,WAAYA,QAIjB,EAIPF,EAAmBkE,UAAY,CAC7BjE,KAAMkE,IAAAA,OACNjE,WAAYiE,IAAAA,MAGd,MAAMlB,GAAgBmB,EAAAA,EAAAA,IAAOC,EAAAA,EAAS;;EAIhCX,EAAmBU,EAAAA,GAAOE,GAAI;gBACpB,EAAGX,eAAgBA;kBACjB,EAAGC,iBAAkBA;EAGjCP,EAAQe,EAAAA,GAAOG,KAAM;;;EAK3B,G,6HC9IA,MAAMV,EAAYA,EAAGC,aAAY3C,uBAC/B,MAAMqD,GAAaC,EAAAA,EAAAA,UAEbC,EAAelB,IACnBA,EAAEmB,iBAEGC,EAAAA,GAAuBC,KAAKL,EAAWM,QAAQC,SAEpD5D,EAAiBqD,EAAWM,QAAQC,OACpCP,EAAWM,QAAQC,MAAQvB,EAAEC,OAAOsB,MAAK,EAG3C,OACEhC,EAAAA,EAAAA,MAACiC,EAAkB,CAACC,IAAI,SAASC,MAAOpB,EAAWhB,SAAA,EACjDF,EAAAA,EAAAA,KAACuC,EAAe,CAAClF,KAAK,OAAOmF,UAAQ,EAACL,MAAOjB,KAC7ClB,EAAAA,EAAAA,KAACyC,EAAkB,CACjBpF,KAAK,OACLiF,MAAOpB,EACPwB,YAAY,kCACZC,UAAY/B,IACI,UAAVA,EAAEgC,KAAiBd,EAAYlB,EAAE,EAEvCiC,IAAKjB,KAEP5B,EAAAA,EAAAA,KAAC8C,EAAY,CAACC,QAAUnC,GAAMkB,EAAYlB,GAAGV,UAC3CF,EAAAA,EAAAA,KAACgD,EAAU,CAACC,KAAMC,EAAAA,UAED,EAIzBjC,EAAUK,UAAY,CACpBJ,WAAYK,IAAAA,OACZhD,iBAAkBgD,IAAAA,MAGpB,MAAMa,GAAqBZ,EAAAA,EAAAA,IAAOC,EAAAA,EAAS;sBACrB,EAAG0B,WAAYA,EAAMC,OAAOC;;;YAGrCC,GAAUA,EAAMC,QAAU;EAGjCC,EAAmBhC,EAAAA,GAAOiC,KAAM;;;eAGvB,EAAGN,WAAYA,EAAMO,SAASC;EAGvCpB,GAAkBf,EAAAA,EAAAA,IAAOgC,EAAkB;WACtC,EAAGrB,WAAuB,uBAAVA,EAAkB,UAAY;;4BAE7B,EAAGgB,WAAYA,EAAMC,OAAOC;;;;;EAOlDZ,GAAqBjB,EAAAA,EAAAA,IAAOgC,EAAkB;;;WAGzC,EAAGlB,WAAuB,uBAAVA,EAAkB,UAAY;;;;;EAOnDQ,EAAetB,EAAAA,GAAOoC,MAAO;;;;;EAO7BZ,GAAaxB,EAAAA,EAAAA,IAAOqC,EAAAA,EAAiB;;EAI3C,G,0KCnFA,MAAMC,EAAuBA,EAAG/F,OAAMgG,gBACpC,MAAOC,EAAiBC,IAAsBhG,EAAAA,EAAAA,WAAUF,GAAM8B,UAM9D,OAJAR,EAAAA,EAAAA,YAAU,KACR0E,GAAW,GACV,CAACC,KAGF7D,EAAAA,EAAAA,MAAC+D,EAAa,CAAAhE,SAAA,EACZF,EAAAA,EAAAA,KAACmE,EAAY,CAAAjE,UACXF,EAAAA,EAAAA,KAACoE,EAAS,CAAAlE,SAAC,uCAEbF,EAAAA,EAAAA,KAACqE,EAAK,CAAAnE,UACJC,EAAAA,EAAAA,MAACmE,EAAK,CAAApE,SAAA,EACJC,EAAAA,EAAAA,MAACoE,EAAE,CAAArE,SAAA,EACDF,EAAAA,EAAAA,KAACwE,EAAO,CAAAtE,SAAC,wBACTF,EAAAA,EAAAA,KAACyE,EAAS,CAAAvE,SAAEnC,GAAM2G,eAEpBvE,EAAAA,EAAAA,MAACoE,EAAE,CAAArE,SAAA,EACDF,EAAAA,EAAAA,KAACwE,EAAO,CAAAtE,SAAC,wBACTF,EAAAA,EAAAA,KAACyE,EAAS,CAAAvE,SAAEnC,GAAM4G,UAEpBxE,EAAAA,EAAAA,MAACoE,EAAE,CAAArE,SAAA,EACDF,EAAAA,EAAAA,KAACwE,EAAO,CAAAtE,SAAC,kBACTF,EAAAA,EAAAA,KAACyE,EAAS,CAAAvE,SAAEnC,GAAM6G,YAEpBzE,EAAAA,EAAAA,MAACoE,EAAE,CAAArE,SAAA,EACDF,EAAAA,EAAAA,KAACwE,EAAO,CAAAtE,SAAC,kBACTF,EAAAA,EAAAA,KAACyE,EAAS,CAAAvE,SAAEnC,GAAM8G,cAEpB1E,EAAAA,EAAAA,MAACoE,EAAE,CAAArE,SAAA,EACDF,EAAAA,EAAAA,KAACwE,EAAO,CAAAtE,SAAC,kDACTF,EAAAA,EAAAA,KAACyE,EAAS,CAAAvE,UACRF,EAAAA,EAAAA,KAAC8E,EAAAA,EAAmB,CAClBC,UAAWhH,GAAM8B,SACjBmF,YAAaf,SAIlBlG,GAAM8B,WACLG,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UAOEC,EAAAA,EAAAA,MAACoE,EAAE,CAAArE,SAAA,EACDF,EAAAA,EAAAA,KAACwE,EAAO,CAAAtE,SAAC,6CACTF,EAAAA,EAAAA,KAACyE,EAAS,CAAAvE,SAAEnC,GAAMkH,2BAMd,EAIpBnB,EAAqBxC,UAAY,CAC/BvD,KAAMwD,IAAAA,OACNwC,UAAWxC,IAAAA,MAGb,MAAM2C,EAAgB1C,EAAAA,GAAOE,GAAI;;EAI3ByC,EAAe3C,EAAAA,GAAOE,GAAI;;EAI1B0C,EAAY5C,EAAAA,GAAO0D,IAAK;;eAEf,EAAG/B,WAAYA,EAAMO,SAASyB;;EAIhCd,EAAQ7C,EAAAA,GAAO4D,KAAM;;;;EAMrBd,EAAQ9C,EAAAA,GAAO6D,KAAM,GAErBd,GAAK/C,EAAAA,EAAAA,IAAOC,EAAAA,GAAS6D,MAAM,CAAEC,GAAI,KAAMlD,IAAK,UAAY;;;;;;;EASxDmC,GAAUhD,EAAAA,EAAAA,IAAOC,EAAAA,GAAS6D,MAAM,CAAEC,GAAI,KAAMlD,IAAK,UAAY;;;;;eAK3D,EAAGc,WAAYA,EAAMO,SAAS8B;;EAIhCf,GAAYjD,EAAAA,EAAAA,IAAOC,EAAAA,GAAS6D,MAAM,CAAEC,GAAI,MAAQ;;;;eAI9C,EAAGpC,WAAYA,EAAMO,SAAS8B;EAG7C,I,0CCtGA,MAsEA,EAtEuBC,KACrB,MAAOC,EAAyBC,IAA8BC,EAAAA,EAAAA,IAC5DC,EAAAA,IAEKC,EAAQC,IAAaH,EAAAA,EAAAA,IAAeI,EAAAA,KACpCnI,IAAWC,EAAAA,EAAAA,GAAW,CAAC,eACvBmI,EAAUC,IAAejI,EAAAA,EAAAA,UAAS,OAClCS,EAAWC,IAAgBV,EAAAA,EAAAA,UAAS,OACrC,SAAEe,EAAQ,MAAEE,EAAK,QAAED,EAAO,UAAEE,IAAcC,EAAAA,EAAAA,GAASV,GAAW,IAEpEW,EAAAA,EAAAA,YAAU,KACO,OAAXyG,EACFH,EAA2B,IAE3BA,EAA2B,GAC3BhH,EAAa,CACXC,OAAQ,MACRC,IAAM,SAAQiH,IACdhH,QAAS,CACPC,UAAWlB,EAAQkB,aAGzB,GACC,KAEHM,EAAAA,EAAAA,YAAU,KACU,OAAdX,GACFS,GACF,GACC,CAACT,KAEJW,EAAAA,EAAAA,YAAU,KACS,OAAbL,GACFkH,EAAYlH,EAASM,OACvB,GACC,CAACN,KAEJK,EAAAA,EAAAA,YAAU,KACS,OAAb4G,GACFN,EAA2B,EAC7B,GACC,CAACM,IAUJ,OACEjG,EAAAA,EAAAA,KAACmG,EAAAA,GAAc,CAAC7F,IAAI,SAAS+B,IAAI,SAAQnC,UACvCC,EAAAA,EAAAA,MAACiG,EAAAA,GAAW,CAACC,MAAM,QAAQC,IAAI,MAAKpG,SAAA,EAClCF,EAAAA,EAAAA,KAACuG,EAAAA,EAAM,CAAClJ,KAAK,kBACb2C,EAAAA,EAAAA,KAACwG,EAAAA,GAAI,CAACnJ,KAAK,QAAQiD,IAAI,UAASJ,UAC9BC,EAAAA,EAAAA,MAACsG,EAAAA,EAAW,CAACnG,IAAI,UAASJ,SAAA,EACxBF,EAAAA,EAAAA,KAAC5C,EAAAA,EAAkB,CAACE,WAdVsC,IAClBjB,EAAa,CACXC,OAAQ,MACRC,IAAM,SAAQe,IACdd,QAAS,CAAEC,UAAWlB,EAAQkB,YAC9B,IAUmC,IAA5B2G,IACC1F,EAAAA,EAAAA,KAACI,EAAAA,GAAG,CAAAF,UACFF,EAAAA,EAAAA,KAAC8D,EAAoB,CAAC/F,KAAMkI,EAAUlC,UAAW5E,eAM5C,C,kCC9Ed,MAAM0G,GAA+Ba,E,QAAAA,IAAK,CAC/C9D,IAAK,+BACL+D,QAAS,G","sources":["components/Web/Admin/UserManagementList.jsx","components/Web/Shared/Board/SearchBar.jsx","components/Web/Admin/UserManagementDetail.jsx","pages/Web/Admin/UserManagement.jsx","recoil/displayState.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { useRecoilValue, useSetRecoilState } from \"recoil\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nimport ManagementTitle from \"./ManagementTitle\";\r\nimport ManagementList from \"./ManagementList\";\r\nimport SearchBar from \"../Shared/Board/SearchBar\";\r\nimport Pagination from \"../Shared/Board/Pagination\";\r\nimport { FlexBox } from \"@/styles/FlexStyle\";\r\nimport { Box } from \"../../Game/Shared/Layout\";\r\nimport { isActiveAccountState } from \"@/recoil/userState\";\r\nimport { remoteApiConfigState } from \"@/recoil/boardState\";\r\nimport useAxios from \"@/hooks/useAxios\";\r\n\r\nconst UserManagementList = ({ type, onSideOpen }) => {\r\n  const setAccountStates = useSetRecoilState(isActiveAccountState);\r\n  const remoteApiConfig = useRecoilValue(remoteApiConfigState);\r\n  const [cookies] = useCookies([\"sessionId\"]);\r\n  const [data, setData] = useState([]);\r\n  const [currPage, setCurrPage] = useState(1);\r\n  const [lastPageIdx, setLastPageIdx] = useState(30);\r\n  const [searchKeyword, setSearchKeyword] = useState(\"\");\r\n  const [showBanned, setShowBanned] = useState(false);\r\n  const [apiConfig, setApiConfig] = useState({\r\n    method: \"get\",\r\n    url: `/user/search?page=${currPage}`,\r\n    headers: {\r\n      sessionId: cookies.sessionId\r\n    }\r\n  });\r\n  const { response, loading, error, fetchData } = useAxios(apiConfig, false);\r\n\r\n  useEffect(() => {\r\n    if (apiConfig !== null) {\r\n      fetchData();\r\n    }\r\n  }, [apiConfig]);\r\n\r\n  useEffect(() => {\r\n    if (remoteApiConfig !== null) {\r\n      setApiConfig({\r\n        ...remoteApiConfig,\r\n        url: `/user/search?page=${currPage}`\r\n      });\r\n    }\r\n  }, [remoteApiConfig]);\r\n\r\n  useEffect(() => {\r\n    if (response !== null) {\r\n      setLastPageIdx(response.result.lastPage === 0 ? 1 : response.result.lastPage);\r\n      setData(response.result.list);\r\n      data?.forEach((user) => {\r\n        setAccountStates((oldState) => ({ ...oldState, [user.id]: user.isBanned }));\r\n      });\r\n    } else {\r\n      setLastPageIdx(1);\r\n      setData([]);\r\n    }\r\n  }, [response]);\r\n\r\n  // 페이지 변경, 검색, 밴 여부 체크박스 클릭 시\r\n  useEffect(() => {\r\n    if (data?.length === 0) {\r\n      return;\r\n    }\r\n\r\n    let queryString;\r\n    if (searchKeyword !== \"\") {\r\n      queryString = `?page=${currPage}&nickname=${searchKeyword}`;\r\n    } else {\r\n      queryString = `?page=${currPage}`;\r\n    }\r\n\r\n    if (showBanned) {\r\n      queryString += \"&isBanned=1\";\r\n    }\r\n\r\n    setApiConfig({\r\n      ...apiConfig,\r\n      url: `/user/search${queryString}`\r\n    });\r\n  }, [currPage, searchKeyword, showBanned]);\r\n\r\n  return (\r\n    <>\r\n      {type !== \"home\" ? (\r\n        <>\r\n          <Box>\r\n            <HeaderWrapper row=\"between\">\r\n              <ManagementTitle title=\"user\" />\r\n              <Label>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={showBanned}\r\n                  onChange={(e) => setShowBanned(e.target.checked)}\r\n                />\r\n                밴 사용자\r\n              </Label>\r\n              <SearchBarWrapper marginTop=\"14px\" marginRight=\"10px\">\r\n                <SearchBar searchType=\"닉네임\" setSearchKeyword={setSearchKeyword} />\r\n              </SearchBarWrapper>\r\n            </HeaderWrapper>\r\n            <ManagementList\r\n              isHome={false}\r\n              title=\"user\"\r\n              data={data}\r\n              onSideOpen={onSideOpen}\r\n            />\r\n            <Pagination\r\n              currPage={currPage}\r\n              setCurrPage={setCurrPage}\r\n              lastPageIdx={lastPageIdx}\r\n            />\r\n          </Box>\r\n        </>\r\n      ) : (\r\n        <Box type={type}>\r\n          <ManagementTitle type={type} title=\"user\" />\r\n          <ManagementList\r\n            isHome={true}\r\n            title=\"user\"\r\n            data={data}\r\n            onSideOpen={onSideOpen}\r\n          />\r\n        </Box>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nUserManagementList.propTypes = {\r\n  type: PropTypes.string,\r\n  onSideOpen: PropTypes.func\r\n};\r\n\r\nconst HeaderWrapper = styled(FlexBox)`\r\n  padding-bottom: 14px;\r\n`;\r\n\r\nconst SearchBarWrapper = styled.div`\r\n  margin-top: ${({ marginTop }) => marginTop};\r\n  margin-right: ${({ marginRight }) => marginRight};\r\n`;\r\n\r\nconst Label = styled.label`\r\n  margin-left: 1.125rem;\r\n  padding-top: 2.25rem;\r\n`;\r\n\r\nexport default UserManagementList;\r\n","import { useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport { FlexBox } from \"@/styles/FlexStyle\";\r\nimport { faMagnifyingGlass } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { POST_SEARCH_WORD_REGEX } from \"../../../../services/regexp\";\r\n\r\nconst SearchBar = ({ searchType, setSearchKeyword }) => {\r\n  const keywordRef = useRef();\r\n\r\n  const sendKeyword = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!POST_SEARCH_WORD_REGEX.test(keywordRef.current.value)) return;\r\n\r\n    setSearchKeyword(keywordRef.current.value);\r\n    keywordRef.current.value = e.target.value;\r\n  };\r\n\r\n  return (\r\n    <SearchInputWrapper col=\"center\" field={searchType}>\r\n      <SearchTypeInput type=\"text\" readOnly value={searchType} />\r\n      <SearchKeywordInput\r\n        type=\"text\"\r\n        field={searchType}\r\n        placeholder=\"검색어 입력\"\r\n        onKeyDown={(e) => {\r\n          if (e.key === \"Enter\") sendKeyword(e);\r\n        }}\r\n        ref={keywordRef}\r\n      />\r\n      <SearchButton onClick={(e) => sendKeyword(e)}>\r\n        <SearchIcon icon={faMagnifyingGlass} />\r\n      </SearchButton>\r\n    </SearchInputWrapper>\r\n  );\r\n};\r\n\r\nSearchBar.propTypes = {\r\n  searchType: PropTypes.string,\r\n  setSearchKeyword: PropTypes.func\r\n};\r\n\r\nconst SearchInputWrapper = styled(FlexBox)`\r\n  border: 2px solid ${({ theme }) => theme.colors.gray200};\r\n  border-radius: 10px;\r\n  width: 18.5rem;\r\n  height: ${(props) => props.height || \"3.2rem\"};\r\n`;\r\n\r\nconst TransparentInput = styled.input`\r\n  border: 0;\r\n  background-color: transparent;\r\n  font-size: ${({ theme }) => theme.fontSize.xxxs};\r\n`;\r\n\r\nconst SearchTypeInput = styled(TransparentInput)`\r\n  width: ${({ value }) => (value === \"닉네임\" ? \"5.25rem\" : \"4.2rem\")};\r\n  padding: 0 16px;\r\n  border-right: 2px solid ${({ theme }) => theme.colors.gray200};\r\n\r\n  &:hover {\r\n    cursor: default;\r\n  }\r\n`;\r\n\r\nconst SearchKeywordInput = styled(TransparentInput)`\r\n  flex: 1;\r\n  margin: 0 10px;\r\n  width: ${({ field }) => (field === \"닉네임\" ? \"9.25rem\" : \"70%\")};\r\n\r\n  &::placeholder {\r\n    color: #a7a7a7;\r\n  }\r\n`;\r\n\r\nconst SearchButton = styled.button`\r\n  background-color: transparent;\r\n  width: 22px;\r\n  margin-right: 15px;\r\n  padding: 0;\r\n`;\r\n\r\nconst SearchIcon = styled(FontAwesomeIcon)`\r\n  font-size: 19px;\r\n`;\r\n\r\nexport default SearchBar;\r\n","import { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { FlexBox } from \"@/styles/FlexStyle\";\r\nimport ProfileActiveToggle from \"../../Game/Shared/ProfileActiveToggle\";\r\n\r\nconst UserManagementDetail = ({ data, fetchUser }) => {\r\n  const [isActiveAccount, setIsActiveAccount] = useState(!data?.isBanned);\r\n\r\n  useEffect(() => {\r\n    fetchUser();\r\n  }, [isActiveAccount]);\r\n\r\n  return (\r\n    <DetailWrapper>\r\n      <TitleWrapper>\r\n        <TitleText>사용자 정보</TitleText>\r\n      </TitleWrapper>\r\n      <Table>\r\n        <Tbody>\r\n          <Tr>\r\n            <TdLabel>닉네임</TdLabel>\r\n            <TdContent>{data?.nickname}</TdContent>\r\n          </Tr>\r\n          <Tr>\r\n            <TdLabel>경험치</TdLabel>\r\n            <TdContent>{data?.exp}</TdContent>\r\n          </Tr>\r\n          <Tr>\r\n            <TdLabel>레벨</TdLabel>\r\n            <TdContent>{data?.level}</TdContent>\r\n          </Tr>\r\n          <Tr>\r\n            <TdLabel>승률</TdLabel>\r\n            <TdContent>{data?.winRate}</TdContent>\r\n          </Tr>\r\n          <Tr>\r\n            <TdLabel>계정 활성화 여부</TdLabel>\r\n            <TdContent>\r\n              <ProfileActiveToggle\r\n                isActive={!data?.isBanned}\r\n                setIsActive={setIsActiveAccount}\r\n              />\r\n            </TdContent>\r\n          </Tr>\r\n          {data?.isBanned && (\r\n            <>\r\n              {/*\r\n              <Tr>\r\n                <TdLabel>- 비활성화 기간</TdLabel>\r\n                <TdContent>{data?.bannedDays}</TdContent>\r\n              </Tr> \r\n              */}\r\n              <Tr>\r\n                <TdLabel>- 비활성화 사유</TdLabel>\r\n                <TdContent>{data?.bannedReason}</TdContent>\r\n              </Tr>\r\n            </>\r\n          )}\r\n        </Tbody>\r\n      </Table>\r\n    </DetailWrapper>\r\n  );\r\n};\r\n\r\nUserManagementDetail.propTypes = {\r\n  data: PropTypes.object,\r\n  fetchUser: PropTypes.func\r\n};\r\n\r\nconst DetailWrapper = styled.div`\r\n  margin: 16px 14px;\r\n`;\r\n\r\nconst TitleWrapper = styled.div`\r\n  padding: 20px 0 10px;\r\n`;\r\n\r\nconst TitleText = styled.span`\r\n  font-family: \"Open Sans\";\r\n  font-size: ${({ theme }) => theme.fontSize.l};\r\n  font-weight: 700;\r\n`;\r\n\r\nexport const Table = styled.table`\r\n  width: 100%;\r\n  max-width: 100%;\r\n  margin: 1rem 0;\r\n`;\r\n\r\nexport const Tbody = styled.tbody``;\r\n\r\nexport const Tr = styled(FlexBox).attrs({ as: \"tr\", col: \"center\" })`\r\n  padding: 0 10px;\r\n  border-top: 1px solid #c2c2c2;\r\n\r\n  &:last-child {\r\n    border-bottom: 1px solid #c2c2c2;\r\n  }\r\n`;\r\n\r\nexport const TdLabel = styled(FlexBox).attrs({ as: \"td\", col: \"center\" })`\r\n  width: 9.5rem;\r\n  height: 4.5rem;\r\n  flex-shrink: 0;\r\n  border-right: 1px solid #c2c2c2;\r\n  font-size: ${({ theme }) => theme.fontSize.xxs};\r\n  font-weight: 700;\r\n`;\r\n\r\nexport const TdContent = styled(FlexBox).attrs({ as: \"td\" })`\r\n  height: 100%;\r\n  padding-left: 15px;\r\n  flex-grow: 1;\r\n  font-size: ${({ theme }) => theme.fontSize.xxs};\r\n`;\r\n\r\nexport default UserManagementDetail;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { isActiveSideContentTypeState } from \"@/recoil/displayState\";\r\nimport { itemIdState } from \"@/recoil/boardState\";\r\nimport UserManagementList from \"@/components/Web/Admin/UserManagementList\";\r\nimport UserManagementDetail from \"@/components/Web/Admin/UserManagementDetail\";\r\nimport Header from \"@/components/Web/Shared/Layout/Header\";\r\nimport { Box } from \"@/components/Game/Shared/Layout\";\r\nimport { FlexBox as ListWrapper } from \"@/styles/FlexStyle\";\r\nimport { ContentWrapper, WideContent, Main } from \"@/styles/CommonStyle\";\r\nimport useAxios from \"@/hooks/useAxios\";\r\n\r\nconst UserManagement = () => {\r\n  const [isActiveSideContentType, setIsActiveSideContentType] = useRecoilState(\r\n    isActiveSideContentTypeState\r\n  );\r\n  const [itemId, setItemId] = useRecoilState(itemIdState);\r\n  const [cookies] = useCookies([\"sessionId\"]);\r\n  const [userData, setUserData] = useState(null);\r\n  const [apiConfig, setApiConfig] = useState(null);\r\n  const { response, error, loading, fetchData } = useAxios(apiConfig, false);\r\n\r\n  useEffect(() => {\r\n    if (itemId === null) {\r\n      setIsActiveSideContentType(0);\r\n    } else {\r\n      setIsActiveSideContentType(1);\r\n      setApiConfig({\r\n        method: \"get\",\r\n        url: `/user/${itemId}`,\r\n        headers: {\r\n          sessionId: cookies.sessionId\r\n        }\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (apiConfig !== null) {\r\n      fetchData();\r\n    }\r\n  }, [apiConfig]);\r\n\r\n  useEffect(() => {\r\n    if (response !== null) {\r\n      setUserData(response.result);\r\n    }\r\n  }, [response]);\r\n\r\n  useEffect(() => {\r\n    if (userData !== null) {\r\n      setIsActiveSideContentType(1);\r\n    }\r\n  }, [userData]);\r\n\r\n  const onSideOpen = (id) => {\r\n    setApiConfig({\r\n      method: \"get\",\r\n      url: `/user/${id}`,\r\n      headers: { sessionId: cookies.sessionId }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <ContentWrapper row=\"center\" col=\"center\">\r\n      <WideContent width=\"82rem\" dir=\"col\">\r\n        <Header type=\"admin-detail\" />\r\n        <Main type=\"admin\" row=\"between\">\r\n          <ListWrapper row=\"between\">\r\n            <UserManagementList onSideOpen={onSideOpen} />\r\n            {isActiveSideContentType === 1 && (\r\n              <Box>\r\n                <UserManagementDetail data={userData} fetchUser={fetchData} />\r\n              </Box>\r\n            )}\r\n          </ListWrapper>\r\n        </Main>\r\n      </WideContent>\r\n    </ContentWrapper>\r\n  );\r\n};\r\n\r\nexport default UserManagement;\r\n","import { atom } from \"recoil\";\r\n\r\n// 0: not active, 1: Detail, 2: Create\r\nexport const isActiveSideContentTypeState = atom({\r\n  key: \"isActiveSideContentTypeState\",\r\n  default: 0\r\n});\r\n"],"names":["UserManagementList","type","onSideOpen","setAccountStates","useSetRecoilState","isActiveAccountState","remoteApiConfig","useRecoilValue","remoteApiConfigState","cookies","useCookies","data","setData","useState","currPage","setCurrPage","lastPageIdx","setLastPageIdx","searchKeyword","setSearchKeyword","showBanned","setShowBanned","apiConfig","setApiConfig","method","url","headers","sessionId","response","loading","error","fetchData","useAxios","useEffect","result","lastPage","list","forEach","user","oldState","id","isBanned","length","queryString","_jsx","_Fragment","children","_jsxs","Box","HeaderWrapper","row","ManagementTitle","title","Label","checked","onChange","e","target","SearchBarWrapper","marginTop","marginRight","SearchBar","searchType","ManagementList","isHome","Pagination","propTypes","PropTypes","styled","FlexBox","div","label","keywordRef","useRef","sendKeyword","preventDefault","POST_SEARCH_WORD_REGEX","test","current","value","SearchInputWrapper","col","field","SearchTypeInput","readOnly","SearchKeywordInput","placeholder","onKeyDown","key","ref","SearchButton","onClick","SearchIcon","icon","faMagnifyingGlass","theme","colors","gray200","props","height","TransparentInput","input","fontSize","xxxs","button","FontAwesomeIcon","UserManagementDetail","fetchUser","isActiveAccount","setIsActiveAccount","DetailWrapper","TitleWrapper","TitleText","Table","Tbody","Tr","TdLabel","TdContent","nickname","exp","level","winRate","ProfileActiveToggle","isActive","setIsActive","bannedReason","span","l","table","tbody","attrs","as","xxs","UserManagement","isActiveSideContentType","setIsActiveSideContentType","useRecoilState","isActiveSideContentTypeState","itemId","setItemId","itemIdState","userData","setUserData","ContentWrapper","WideContent","width","dir","Header","Main","ListWrapper","atom","default"],"sourceRoot":""}