{"version":3,"file":"static/js/126.28784c47.chunk.js","mappings":"qQAgBA,MAAMA,GAA0BC,EAAAA,EAAAA,IAAOC,EAAAA,EAAS;WACpCC,GAAUA,EAAMC,OAAS;YACxBD,GAAUA,EAAME,QAAU;gBACtBF,GAAUA,EAAMG,WAAa;mBAC1BH,GAAUA,EAAMI,cAAgB;iBAClCJ,GAAUA,EAAMK,YAAc;kBAC7BL,GAAUA,EAAMM,aAAe;EAG5CC,EAAaT,EAAAA,GAAOU,CAAE;WAChBR,GAAUA,EAAMS,OAAS;;eAErBT,GAAUA,EAAMU,UAAY;iBAC1BV,GAAUA,EAAMW,YAAc;;EAI1CC,EAAUd,EAAAA,GAAOe,KAAM;eACd,EAAGC,WAAYA,EAAMJ,SAASK;;WAElC,EAAGD,WAAYA,EAAME,OAAOC;iBACrBjB,GAAUA,EAAMK,YAAc;EAG1Ca,EAASpB,EAAAA,GAAOU,CAAE;;;kBAGLR,GAAUA,EAAMM,aAAe;EAG5Ca,EAAarB,EAAAA,GAAOsB,MAAO;;;sBAGX,EAAGN,WAAYA,EAAME,OAAOK;;;;iBAIhCrB,GAAUA,EAAMK,YAAc;EAuIhD,EAnImBiB,KAEjB,MAAOC,EAAaC,IAAkBC,EAAAA,EAAAA,WAAS,IACxCC,EAAQC,IAAaF,EAAAA,EAAAA,UAAS,KAE9BG,EAAiBC,IAAsBJ,EAAAA,EAAAA,WAAS,IAChDK,EAAeC,IAAoBN,EAAAA,EAAAA,WAAS,IAE5CO,EAAWC,IAAgBR,EAAAA,EAAAA,UAAS,OACrC,SAAES,EAAQ,MAAEC,EAAK,QAAEC,EAAO,UAAEC,IAAcC,EAAAA,EAAAA,GAASN,GAAW,GAG9DO,GAAWC,EAAAA,EAAAA,OAGVC,IAAWC,EAAAA,EAAAA,GAAW,CAAC,eAE9BC,EAAAA,EAAAA,YAAU,KACU,OAAdX,GACFK,GACF,GACC,CAACL,KAEJW,EAAAA,EAAAA,YAAU,KACS,OAAbT,EACEF,GAAWY,IAAIC,WAAW,mBAC5BrB,GAAe,GACfG,EAAUO,EAASY,SAGjBd,GAAWY,IAAIC,WAAW,kBAC5BhB,GAAmB,EAEvB,GACC,CAACK,EAAUC,IAGd,MAWMY,EAAgBC,IAEpBf,EAAa,CACXgB,OAAQ,OACRL,IAAK,gBACLM,QAAS,CAAEC,UAAWV,EAAQU,WAC9BC,KAAM,CACJC,MAAOL,IAET,EAcEM,EAAkBA,KACC,GAAnB1B,GACFC,GAAmB,GACnB0B,OAAOC,SAASC,UACU,GAAjB3B,GACTC,GAAiB,EACnB,EAGF,OACE2B,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,CAEG9B,IACC+B,EAAAA,EAAAA,KAACC,EAAAA,EAAQ,CAACC,QAAST,EAAiBU,UAAWjC,EAAkBkC,WAAW,EAAKL,SAAC,sFAMnFhC,IACCiC,EAAAA,EAAAA,KAACC,EAAAA,EAAQ,CACPC,QAAST,EACTU,UAAWnC,EACXoC,WAAW,EAAKL,SACjB,iFAKHF,EAAAA,EAAAA,MAAC7D,EAAuB,CAACqE,IAAI,MAAKN,SAAA,EAChCC,EAAAA,EAAAA,KAACM,EAAAA,EAAS,CAACC,KAAK,SAASjE,UAAU,MAAMC,aAAa,QACrDmB,GACCmC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EAEEC,EAAAA,EAAAA,KAACtD,EAAU,CAAAqD,SAAC,0HACZF,EAAAA,EAAAA,MAAC7D,EAAuB,CAACwE,IAAI,UAAUpE,MAAM,QAAQE,UAAU,OAAMyD,SAAA,EACnEC,EAAAA,EAAAA,KAACjD,EAAO,CAACP,WAAW,OAAMuD,SAAC,wBAC3BC,EAAAA,EAAAA,KAAC3C,EAAM,CAACZ,YAAY,OAAMsD,SAAElC,QAE9BgC,EAAAA,EAAAA,MAAC7D,EAAuB,CAACM,UAAU,OAAMyD,SAAA,EACvCC,EAAAA,EAAAA,KAACS,EAAAA,EAAM,CAACF,KAAK,aAAaG,QAAQ,qBAAMR,QAlD5BS,KACtBjC,EAAU,gBAAe,KAkDfsB,EAAAA,EAAAA,KAAC1C,EAAU,CAACd,WAAW,OAAO0D,QA9CjBU,KACvBlC,EAAU,uBAAsB,EA6CkCqB,SAAC,iDAM7DF,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EAEEC,EAAAA,EAAAA,KAACtD,EAAU,CAAAqD,SAAC,qKAGZC,EAAAA,EAAAA,KAACa,EAAAA,EAAe,CAACC,qBAtFGC,CAAC1C,EAAUc,KACtB,OAAbd,EAEFa,EAAaC,GAGbjB,GAAiB,EACnB,YAmFG,E,aCxKP,MAAM8C,GAA0B/E,EAAAA,EAAAA,IAAOC,EAAAA,EAAS;WACpCC,GAAUA,EAAMC,OAAS;YACxBD,GAAUA,EAAME,QAAU;;gBAEtBF,GAAUA,EAAMG,WAAa;mBAC1BH,GAAUA,EAAMI,cAAgB;iBAClCJ,GAAUA,EAAMK,YAAc;kBAC7BL,GAAUA,EAAMM,aAAe;EAG5CwE,EAAahF,EAAAA,GAAOU,CAAE;WAChBR,GAAUA,EAAMS,OAAS;;eAErBT,GAAUA,EAAMU,UAAY;iBAC1BV,GAAUA,EAAMW,YAAc;EA0HhD,EAtHmBoE,KAEjB,MAAMC,GAAQC,EAAAA,EAAAA,QAAO,KAIdnD,EAAeC,IAAoBN,EAAAA,EAAAA,WAAS,IAC5CG,EAAiBC,IAAsBJ,EAAAA,EAAAA,WAAS,IAEhDO,EAAWC,IAAgBR,EAAAA,EAAAA,UAAS,OACrC,SAAES,EAAQ,MAAEC,EAAK,QAAEC,EAAO,UAAEC,IAAcC,EAAAA,EAAAA,GAASN,GAAW,GAG9DO,GAAWC,EAAAA,EAAAA,OAGVC,EAASyC,IAAaxC,EAAAA,EAAAA,GAAW,CAAC,YAAa,0BAEtDC,EAAAA,EAAAA,YAAU,KACU,OAAdX,GACFK,GACF,GACC,CAACL,KAEJW,EAAAA,EAAAA,YAAU,KACS,OAAbT,EACEF,GAAWY,IAAIC,WAAW,mBAC5BqC,EAAU,uBAAwBhD,EAASiD,sBAC3C5C,EAAU,sBAGRP,GAAWY,IAAIC,WAAW,kBAC5BhB,GAAmB,EAEvB,GACC,CAACK,EAAUC,IAGd,MAYMiD,EAAgBpC,IACpB,MAAMqC,EAAKL,EAAMM,QAAQC,MACT,mBAEHC,KAAKH,GAIhBpD,EAAa,CACXgB,OAAQ,OACRL,IAAK,gBACLM,QAAS,CAAEC,UAAWV,EAAQU,WAC9BC,KAAM,CACJqC,SAAUJ,EACVhC,MAAOL,KATXnB,GAAmB,EAYrB,EAIIyB,EAAkBA,KACC,GAAnB1B,GACFC,GAAmB,GACnB0B,OAAOC,SAASC,UACU,GAAjB3B,GACTC,GAAiB,EACnB,EAGF,OACE2B,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,CAEG9B,IACC+B,EAAAA,EAAAA,KAACC,EAAAA,EAAQ,CAACC,QAAST,EAAiBU,UAAWjC,EAAkBkC,WAAW,EAAKL,SAAC,sFAMnFhC,IACCiC,EAAAA,EAAAA,KAACC,EAAAA,EAAQ,CACPC,QAAST,EACTU,UAAWnC,EACXoC,WAAW,EAAKL,SACjB,iFAKHF,EAAAA,EAAAA,MAACmB,EAAuB,CAACX,IAAI,MAAKN,SAAA,EAChCC,EAAAA,EAAAA,KAACM,EAAAA,EAAS,CAACC,KAAK,SAASjE,UAAU,MAAMC,aAAa,SACtDyD,EAAAA,EAAAA,KAACiB,EAAU,CAAAlB,SAAC,qKAKZC,EAAAA,EAAAA,KAACgB,EAAuB,CAACX,IAAI,MAAM9D,aAAa,OAAMwD,UACpDC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,UAAU,EAAMC,KAAK,KAAKC,SAAUb,OAIlDnB,EAAAA,EAAAA,KAACa,EAAAA,EAAe,CAACC,qBA1EOC,CAAC1C,EAAUc,KACtB,OAAbd,EAEFkD,EAAapC,IAGbjB,GAAiB,GACjB+D,eACF,SAoEG,EClHP,EArBaC,KACX,MAAMvC,GAAWwC,EAAAA,EAAAA,MAGX5B,EAFQ,IAAI6B,gBAAgBzC,EAAS0C,QAExBC,IAAI,QAEvB,OACEtC,EAAAA,EAAAA,KAAAF,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,MAAC0C,EAAAA,GAAc,CAAC/B,IAAI,SAASgC,IAAI,SAAQzC,SAAA,EACvCC,EAAAA,EAAAA,KAACyC,EAAAA,EAAM,CAAClC,KAAK,SACbP,EAAAA,EAAAA,KAAC0C,EAAAA,GAAa,CAAA3C,UACZF,EAAAA,EAAAA,MAAC3D,EAAAA,EAAO,CAACyG,GAAG,OAAOvG,MAAM,OAAOwG,OAAO,mBAAkB7C,SAAA,CAC7C,OAATQ,IAAiBP,EAAAA,EAAAA,KAACvC,EAAU,IACnB,OAAT8C,IAAiBP,EAAAA,EAAAA,KAACkB,EAAU,aAIlC,C,+GC3BA,MAAM2B,EAASC,EAAAA,EAAU;;;EAKnBC,EAAQD,EAAAA,EAAU;;;;EAYlBE,GALS/G,EAAAA,GAAOgH,GAAI;;EAKRhH,EAAAA,GAAOgH,GAAI;;;;;;;GAUvBV,GAAiBtG,EAAAA,EAAAA,IAAOC,EAAAA,EAAS;eAC/B2G;EAIFK,GAAcjH,EAAAA,EAAAA,IAAOC,EAAAA,EAAS;WAC/BC,GAAUA,EAAMC,OAAS;;EAKxBsG,GAAgBzG,EAAAA,EAAAA,IAAOC,EAAAA,EAAS;;YAEhCC,GAAUA,EAAME,QAAU;EAI1B8G,EAAOlH,EAAAA,GAAOmH,IAAK;;gBAEhB,EAAG7C,UACN,QAATA,EAAiB,QAAmB,UAATA,EAAmB,SAAW;EAGhD8C,GAAMpH,EAAAA,EAAAA,IAAOC,EAAAA,EAAS;;;;;sBAKb,EAAGoH,UAASrG,WAAYqG,GAAWrG,EAAME,OAAOoG;GAI1CtH,EAAAA,EAAAA,IAAOC,EAAAA,EAAS;gBAC3BC,GAAUA,EAAMC,OAASoH;gBACzBrH,GAAUA,EAAMsH,OAASD","sources":["components/Web/Member/FindidForm.jsx","components/Web/Member/FindpwForm.jsx","pages/Web/Member/Find.jsx","styles/CommonStyle.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport styled from \"styled-components\";\r\nimport { FlexBox } from \"@/styles/FlexStyle\";\r\n\r\n// ===== hooks import =====\r\nimport useAxios from \"@/hooks/useAxios\";\r\n\r\n// ===== components import =====\r\nimport FormTitle from \"@/components/Web/Shared/Form/FormTitle\";\r\nimport PhoneNumberAuth from \"@/components/Web/Shared/Form/PhoneNumberAuth\";\r\nimport Button from \"@/components/Web/Shared/Buttons/Button\";\r\nimport WebModal from \"@/components/Web/Shared/Modal/WebModal\";\r\n\r\n// ===== style ======\r\nconst FindidFormFlexContainer = styled(FlexBox)`\r\n  width: ${(props) => props.width || \"100%\"};\r\n  height: ${(props) => props.height || \"fit-content\"};\r\n  margin-top: ${(props) => props.marginTop || null};\r\n  margin-bottom: ${(props) => props.marginBottom || null};\r\n  margin-left: ${(props) => props.marginLeft || null};\r\n  margin-right: ${(props) => props.marginRight || null};\r\n`;\r\n\r\nconst FindidText = styled.p`\r\n  color: ${(props) => props.color || \"#5E5C65\"};\r\n  font-family: \"Noto Sans KR\";\r\n  font-size: ${(props) => props.fontSize || \"19px\"};\r\n  font-weight: ${(props) => props.fontWeight || \"200\"};\r\n  margin-bottom: 36px;\r\n`;\r\n\r\nconst IdLabel = styled.label`\r\n  font-size: ${({ theme }) => theme.fontSize.xxs};\r\n  font-weight: 700;\r\n  color: ${({ theme }) => theme.colors.gray600};\r\n  margin-left: ${(props) => props.marginLeft || null};\r\n`;\r\n\r\nconst IdText = styled.p`\r\n  font-weight: 700;\r\n  margin: 0;\r\n  margin-right: ${(props) => props.marginRight || null};\r\n`;\r\n\r\nconst FindButton = styled.button`\r\n  width: 15rem;\r\n  height: 4.688rem;\r\n  background-color: ${({ theme }) => theme.colors.gray100};\r\n  color: #434343;\r\n  font-size: 28px;\r\n  font-weight: 700;\r\n  margin-left: ${(props) => props.marginLeft || null};\r\n`;\r\n\r\n// ===== component ======\r\nconst FindidForm = () => {\r\n  // === state ===\r\n  const [hasUserInfo, setHasUserInfo] = useState(false); // 아이디 조회 state\r\n  const [userId, setUserId] = useState(\"\"); // 아이디 출력 state\r\n  // (modal 관련)\r\n  const [findidModalOpen, setFindidModalOpen] = useState(false); // 아이디 조회 실패 시 출력되는 아이디 조회 실패 알림 modal state\r\n  const [authModalOpen, setAuthModalOpen] = useState(false); // 인증번호 불일치 시 출력되는 인증번호 불일치 알림 modal state\r\n  // (api 관련)\r\n  const [apiConfig, setApiConfig] = useState(null);\r\n  const { response, error, loading, fetchData } = useAxios(apiConfig, false);\r\n\r\n  // === navigate ===\r\n  const navigate = useNavigate();\r\n\r\n  // === cookie ===\r\n  const [cookies] = useCookies([\"smsAuthId\"]);\r\n\r\n  useEffect(() => {\r\n    if (apiConfig !== null) {\r\n      fetchData();\r\n    }\r\n  }, [apiConfig]);\r\n\r\n  useEffect(() => {\r\n    if (response !== null) {\r\n      if (apiConfig?.url.startsWith(\"/user/find/id\")) {\r\n        setHasUserInfo(true);\r\n        setUserId(response.result);\r\n      }\r\n    } else {\r\n      if (apiConfig?.url.startsWith(\"/user/find/id\")) {\r\n        setFindidModalOpen(true);\r\n      }\r\n    }\r\n  }, [response, error]);\r\n\r\n  // 전화번호 인증\r\n  const handlePhoneNumberAuth = (response, phoneNumber) => {\r\n    if (response !== null) {\r\n      // 성공 시, 아이디 조회 함수 호출\r\n      handleFindid(phoneNumber);\r\n    } else {\r\n      // 경고 모달 출력\r\n      setAuthModalOpen(true);\r\n    }\r\n  };\r\n\r\n  // 아이디 조회\r\n  const handleFindid = (phoneNumber) => {\r\n    // 아이디 조회 API 코드\r\n    setApiConfig({\r\n      method: \"post\",\r\n      url: \"/user/find/id\",\r\n      headers: { smsAuthId: cookies.smsAuthId },\r\n      data: {\r\n        phone: phoneNumber\r\n      }\r\n    });\r\n  };\r\n\r\n  // 로그인 페이지로 이동\r\n  const handleMoveLogin = () => {\r\n    navigate(`/member/login`);\r\n  };\r\n\r\n  // 비밀번호 찾기 페이지로 이동\r\n  const handleMoveFindpw = () => {\r\n    navigate(`/member/find?type=pw`);\r\n  };\r\n\r\n  // modal event\r\n  const handleModalOpen = () => {\r\n    if (findidModalOpen == true) {\r\n      setFindidModalOpen(false);\r\n      window.location.reload();\r\n    } else if (authModalOpen == true) {\r\n      setAuthModalOpen(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* 인증 실패 modal */}\r\n      {authModalOpen && (\r\n        <WebModal onClick={handleModalOpen} setIsOpen={setAuthModalOpen} hasButton={true}>\r\n          인증번호가 일치하지 않습니다.\r\n        </WebModal>\r\n      )}\r\n\r\n      {/* 아이디 찾기 실패 modal */}\r\n      {findidModalOpen && (\r\n        <WebModal\r\n          onClick={handleModalOpen}\r\n          setIsOpen={setFindidModalOpen}\r\n          hasButton={true}\r\n        >\r\n          아이디가 존재하지 않습니다.\r\n        </WebModal>\r\n      )}\r\n\r\n      <FindidFormFlexContainer dir=\"col\">\r\n        <FormTitle type=\"findid\" marginTop=\"0px\" marginBottom=\"0px\" />\r\n        {hasUserInfo ? (\r\n          <>\r\n            {/* 아이디 찾기 성공 시, 결과 출력부 */}\r\n            <FindidText>다음 정보로 가입된 아이디가 총 1개 있습니다.</FindidText>\r\n            <FindidFormFlexContainer row=\"between\" width=\"30rem\" marginTop=\"50px\">\r\n              <IdLabel marginLeft=\"20px\">아이디</IdLabel>\r\n              <IdText marginRight=\"20px\">{userId}</IdText>\r\n            </FindidFormFlexContainer>\r\n            <FindidFormFlexContainer marginTop=\"50px\">\r\n              <Button type=\"smallBrown\" message=\"로그인\" onClick={handleMoveLogin} />\r\n              <FindButton marginLeft=\"15px\" onClick={handleMoveFindpw}>\r\n                비밀번호 찾기\r\n              </FindButton>\r\n            </FindidFormFlexContainer>\r\n          </>\r\n        ) : (\r\n          <>\r\n            {/* 전화번호 인증 */}\r\n            <FindidText>\r\n              회원 가입 시 등록하신 휴대전화 번호로 인증을 진행해 주세요.\r\n            </FindidText>\r\n            <PhoneNumberAuth onVerificationResult={handlePhoneNumberAuth} />\r\n          </>\r\n        )}\r\n      </FindidFormFlexContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FindidForm;\r\n","import React, { useRef, useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport styled from \"styled-components\";\r\nimport { FlexBox } from \"@/styles/FlexStyle\";\r\n\r\n// ===== hooks import =====\r\nimport useAxios from \"@/hooks/useAxios\";\r\n\r\n// ===== components import =====\r\nimport FormTitle from \"@/components/Web/Shared/Form/FormTitle\";\r\nimport InputField from \"@/components/Web/Shared/Form/InputField\";\r\nimport PhoneNumberAuth from \"@/components/Web/Shared/Form/PhoneNumberAuth\";\r\nimport WebModal from \"@/components/Web/Shared/Modal/WebModal\";\r\n\r\n// ===== style ======\r\nconst FindpwFormFlexContainer = styled(FlexBox)`\r\n  width: ${(props) => props.width || \"100%\"};\r\n  height: ${(props) => props.height || \"fit-content\"};\r\n\r\n  margin-top: ${(props) => props.marginTop || null};\r\n  margin-bottom: ${(props) => props.marginBottom || null};\r\n  margin-left: ${(props) => props.marginLeft || null};\r\n  margin-right: ${(props) => props.marginRight || null};\r\n`;\r\n\r\nconst FindpwText = styled.p`\r\n  color: ${(props) => props.color || \"#5E5C65\"};\r\n  font-family: \"Noto Sans KR\";\r\n  font-size: ${(props) => props.fontSize || \"19px\"};\r\n  font-weight: ${(props) => props.fontWeight || \"200\"};\r\n`;\r\n\r\n// ===== component ======\r\nconst FindpwForm = () => {\r\n  // === ref ===\r\n  const idRef = useRef(\"\"); // 아이디\r\n\r\n  // === state ===\r\n  // (modal 관련)\r\n  const [authModalOpen, setAuthModalOpen] = useState(false); // 인증번호 불일치 시 출력되는 인증번호 불일치 알림 modal state\r\n  const [findidModalOpen, setFindidModalOpen] = useState(false); // 아이디 조회 실패 시 출력되는 아이디 조회 실패 알림 modal state\r\n  // (api 관련)\r\n  const [apiConfig, setApiConfig] = useState(null);\r\n  const { response, error, loading, fetchData } = useAxios(apiConfig, false);\r\n\r\n  // === navigate ===\r\n  const navigate = useNavigate();\r\n\r\n  // === cookie ===\r\n  const [cookies, setCookie] = useCookies([\"smsAuthId\", \"passwordChangeAuthId\"]);\r\n\r\n  useEffect(() => {\r\n    if (apiConfig !== null) {\r\n      fetchData();\r\n    }\r\n  }, [apiConfig]);\r\n\r\n  useEffect(() => {\r\n    if (response !== null) {\r\n      if (apiConfig?.url.startsWith(\"/user/find/pw\")) {\r\n        setCookie(\"passwordChangeAuthId\", response.passwordChangeAuthId);\r\n        navigate(`/member/change-pw`);\r\n      }\r\n    } else {\r\n      if (apiConfig?.url.startsWith(\"/user/find/pw\")) {\r\n        setFindidModalOpen(true);\r\n      }\r\n    }\r\n  }, [response, error]);\r\n\r\n  // 인증번호 검증\r\n  const handlePhoneNumberAuth = (response, phoneNumber) => {\r\n    if (response !== null) {\r\n      // 성공 시, 비밀번호 찾기 함수 호출\r\n      handleFindpw(phoneNumber);\r\n    } else {\r\n      // 경고 모달 출력\r\n      setAuthModalOpen(true);\r\n      handleReload();\r\n    }\r\n  };\r\n\r\n  // 비밀번호 찾기\r\n  const handleFindpw = (phoneNumber) => {\r\n    const id = idRef.current.value;\r\n    const idRegex = /^[a-z0-9]{7,30}$/;\r\n\r\n    if (!idRegex.test(id)) {\r\n      setFindidModalOpen(true);\r\n    } else {\r\n      // 비밀번호 찾기 계정 존재 검증 API 코드\r\n      setApiConfig({\r\n        method: \"post\",\r\n        url: \"/user/find/pw\",\r\n        headers: { smsAuthId: cookies.smsAuthId },\r\n        data: {\r\n          username: id,\r\n          phone: phoneNumber\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  // modal event\r\n  const handleModalOpen = () => {\r\n    if (findidModalOpen == true) {\r\n      setFindidModalOpen(false);\r\n      window.location.reload();\r\n    } else if (authModalOpen == true) {\r\n      setAuthModalOpen(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* 인증 실패 modal */}\r\n      {authModalOpen && (\r\n        <WebModal onClick={handleModalOpen} setIsOpen={setAuthModalOpen} hasButton={true}>\r\n          인증번호가 일치하지 않습니다.\r\n        </WebModal>\r\n      )}\r\n\r\n      {/* 아이디 찾기 실패 modal */}\r\n      {findidModalOpen && (\r\n        <WebModal\r\n          onClick={handleModalOpen}\r\n          setIsOpen={setFindidModalOpen}\r\n          hasButton={true}\r\n        >\r\n          아이디가 존재하지 않습니다.\r\n        </WebModal>\r\n      )}\r\n\r\n      <FindpwFormFlexContainer dir=\"col\">\r\n        <FormTitle type=\"findpw\" marginTop=\"0px\" marginBottom=\"0px\"></FormTitle>\r\n        <FindpwText>\r\n          회원 가입 시 등록하신 휴대전화 번호로 인증을 진행해 주세요.\r\n        </FindpwText>\r\n\r\n        {/* 아이디 input */}\r\n        <FindpwFormFlexContainer dir=\"col\" marginBottom=\"15px\">\r\n          <InputField hasLabel={true} name=\"id\" inputRef={idRef} />\r\n        </FindpwFormFlexContainer>\r\n\r\n        {/* 전화번호 인증 */}\r\n        <PhoneNumberAuth onVerificationResult={handlePhoneNumberAuth} />\r\n      </FindpwFormFlexContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FindpwForm;\r\n","import React from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\n// ===== style import =====\r\nimport { FlexBox } from \"@/styles/FlexStyle\";\r\nimport { ContentWrapper, NarrowContent } from \"@/styles/CommonStyle\";\r\n\r\n// ===== components import =====\r\nimport Header from \"@/components/Web/Shared/Layout/Header\";\r\nimport FindidForm from \"@/components/Web/Member/FindidForm\";\r\nimport FindpwForm from \"@/components/Web/Member/FindpwForm\";\r\n\r\n// ===== component =====\r\nconst Find = () => {\r\n  const location = useLocation();\r\n  const query = new URLSearchParams(location.search);\r\n\r\n  const type = query.get(\"type\");\r\n\r\n  return (\r\n    <>\r\n      <ContentWrapper row=\"center\" col=\"center\">\r\n        <Header type=\"big\" />\r\n        <NarrowContent>\r\n          <FlexBox as=\"main\" width=\"100%\" margin=\"15.5rem 0 3.5rem\">\r\n            {type === \"id\" && <FindidForm />}\r\n            {type === \"pw\" && <FindpwForm />}\r\n          </FlexBox>\r\n        </NarrowContent>\r\n      </ContentWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Find;\r\n","import styled, { keyframes } from \"styled-components\";\r\nimport { FlexBox } from \"./FlexStyle\";\r\n\r\nexport const fadeIn = keyframes`\r\n  from { opacity: 0;}\r\n  to {opacity: 1;}\r\n`;\r\n\r\nexport const blink = keyframes`\r\n  50% {\r\n      opacity: 0;\r\n  }\r\n`;\r\n\r\n// 숨겨진 요소\r\nexport const Hidden = styled.div`\r\n  display: none;\r\n`;\r\n\r\n// 웹 페이지 그라데이션 영역\r\nexport const Gradation = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 42.25rem;\r\n  background-image: linear-gradient(#dbe1ed, #ffffff00);\r\n  z-index: -1;\r\n`;\r\n\r\n// 콘텐츠 영역 감싸는 태그\r\nexport const ContentWrapper = styled(FlexBox)`\r\n  animation: ${fadeIn} 0.5s ease-in-out;\r\n`;\r\n\r\n// 넓은 콘텐츠 영역 (width: 1200px)\r\nexport const WideContent = styled(FlexBox)`\r\n  width: ${(props) => props.width || \"75rem\"};\r\n  height: 100vh;\r\n`;\r\n\r\n// 좁은 콘텐츠 영역 (width: 652px)\r\nexport const NarrowContent = styled(FlexBox)`\r\n  width: 36.75rem; // 기존 40.75rem\r\n  height: ${(props) => props.height || \"fit-content\"};\r\n`;\r\n\r\n// 페이지의 핵심 콘텐츠\r\nexport const Main = styled.main`\r\n  width: 100%;\r\n  margin-top: ${({ type }) =>\r\n    type === \"big\" ? \"10rem\" : type !== \"admin\" ? \"7.5rem\" : \"6.5rem\"};\r\n`;\r\n\r\nexport const Box = styled(FlexBox)`\r\n  width: 100%;\r\n  max-width: 100%;\r\n  height: 43.25rem;\r\n  padding: 10px;\r\n  background-color: ${({ bgColor, theme }) => bgColor || theme.colors.content};\r\n`;\r\n\r\n// 작은 요소들을 감싸는 요소\r\nexport const SmallWrapper = styled(FlexBox)`\r\n  flex-basis: ${(props) => props.width || auto};\r\n  align-self: ${(props) => props.align || auto};\r\n`;\r\n"],"names":["FindidFormFlexContainer","styled","FlexBox","props","width","height","marginTop","marginBottom","marginLeft","marginRight","FindidText","p","color","fontSize","fontWeight","IdLabel","label","theme","xxs","colors","gray600","IdText","FindButton","button","gray100","FindidForm","hasUserInfo","setHasUserInfo","useState","userId","setUserId","findidModalOpen","setFindidModalOpen","authModalOpen","setAuthModalOpen","apiConfig","setApiConfig","response","error","loading","fetchData","useAxios","navigate","useNavigate","cookies","useCookies","useEffect","url","startsWith","result","handleFindid","phoneNumber","method","headers","smsAuthId","data","phone","handleModalOpen","window","location","reload","_jsxs","_Fragment","children","_jsx","WebModal","onClick","setIsOpen","hasButton","dir","FormTitle","type","row","Button","message","handleMoveLogin","handleMoveFindpw","PhoneNumberAuth","onVerificationResult","handlePhoneNumberAuth","FindpwFormFlexContainer","FindpwText","FindpwForm","idRef","useRef","setCookie","passwordChangeAuthId","handleFindpw","id","current","value","test","username","InputField","hasLabel","name","inputRef","handleReload","Find","useLocation","URLSearchParams","search","get","ContentWrapper","col","Header","NarrowContent","as","margin","fadeIn","keyframes","blink","Gradation","div","WideContent","Main","main","Box","bgColor","content","auto","align"],"sourceRoot":""}