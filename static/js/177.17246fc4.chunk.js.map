{"version":3,"file":"static/js/177.17246fc4.chunk.js","mappings":"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","sources":["components/Web/Shared/Form/FormTitle.jsx","components/Web/Shared/Form/InputField.jsx","components/Web/Shared/Form/InputFieldStyle.jsx","components/Web/Shared/Form/ValidationMessageStyle.jsx","components/Web/Shared/Form/ValidationMessage.jsx","components/Web/Member/LoginForm.jsx","pages/Web/Member/Login.jsx","styles/CommonStyle.jsx","services/user.js"],"sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n// ===== style ======\r\nconst FormTitleWrapper = styled.div`\r\n  width: ${(props) => props.width || \"fit-content\"};\r\n  height: ${(props) => props.height || \"fit-content\"};\r\n`;\r\n\r\nconst FormTitleText = styled.p`\r\n  color: ${(props) => props.color || \"#828282\"};\r\n  font-family: \"Gugi\";\r\n  font-size: ${(props) => props.fontSize || \"32px\"};\r\n  font-weight: ${(props) => props.fontWeight || \"500\"};\r\n  margin: ${(props) => props.margin || \"30px 0 20px\"};\r\n`;\r\n\r\n// ===== component ======\r\nconst FormTitle = ({ type, marginTop, marginBottom }) => {\r\n  const getFormTitle = () => {\r\n    switch (type) {\r\n      case \"signup\":\r\n        return \"회원가입\";\r\n      case \"login\":\r\n        return \"로그인\";\r\n      case \"findid\":\r\n        return \"아이디 찾기\";\r\n      case \"findpw\":\r\n        return \"비밀번호 찾기\";\r\n      case \"changepw\":\r\n        return \"비밀번호 변경\";\r\n      case \"withdrawal\":\r\n        return \"회원 탈퇴\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormTitleWrapper>\r\n      <FormTitleText marginTop={marginTop} marginBottom={marginBottom}>\r\n        {getFormTitle()}\r\n      </FormTitleText>\r\n    </FormTitleWrapper>\r\n  );\r\n};\r\n\r\nFormTitle.propTypes = {\r\n  type: PropTypes.string,\r\n  marginTop: PropTypes.string,\r\n  marginBottom: PropTypes.string\r\n};\r\n\r\nexport default FormTitle;\r\n","import React, { useState, forwardRef, useImperativeHandle, useRef } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n// import { useIdValidation, usePasswordValidation } from \"@/hooks/useValidation\";\r\n\r\n// ===== style import =====\r\nimport { Label, Input } from \"./InputFieldStyle\";\r\n\r\n// const InputField = forwardRef(({ hasLabel, isLoginForm, width, name, onChange }, ref) => {\r\nconst InputField = (props) => {\r\n  const { hasLabel, isLoginForm, isDataForm, name, inputRef, disabled, onBlur } = props;\r\n\r\n  const handleUpdateValue = (e) => {\r\n    const value = e.target.value;\r\n    inputRef.current.value = value;\r\n  };\r\n\r\n  // === placeholder setting ===\r\n  const idPlaceholder =\r\n    isLoginForm && name === \"id\"\r\n      ? \"아이디를 입력하세요\"\r\n      : isDataForm && name === \"id\"\r\n        ? \"7~30자의 영문 소문자, 숫자만 입력 가능\"\r\n        : \"아이디 입력\";\r\n  const passwordPlaceholder =\r\n    isLoginForm && name === \"password\"\r\n      ? \"비밀번호를 입력하세요\"\r\n      : isDataForm && name === \"password\"\r\n        ? \"7~30자의 영문 대/소문자, 숫자 필수, 특수문자 사용 가능\"\r\n        : \"비밀번호 입력\";\r\n  const confirmPasswordPlaceholder = \"비밀번호 확인\";\r\n\r\n  return (\r\n    <>\r\n      {hasLabel && (\r\n        <Label>\r\n          {name === \"id\"\r\n            ? \"아이디\"\r\n            : name === \"password\"\r\n              ? \"비밀번호\"\r\n              : name === \"confirmPassword\"\r\n                ? \"비밀번호 확인\"\r\n                : null}\r\n        </Label>\r\n      )}\r\n      <Input\r\n        ref={inputRef}\r\n        type={\r\n          name === \"id\"\r\n            ? \"text\"\r\n            : name === \"password\"\r\n              ? \"password\"\r\n              : name === \"confirmPassword\"\r\n                ? \"password\"\r\n                : null\r\n        }\r\n        name={name}\r\n        placeholder={\r\n          name === \"id\"\r\n            ? idPlaceholder\r\n            : name === \"password\"\r\n              ? passwordPlaceholder\r\n              : name === \"confirmPassword\"\r\n                ? confirmPasswordPlaceholder\r\n                : null\r\n        }\r\n        onChange={handleUpdateValue}\r\n        disabled={disabled}\r\n        onBlur={onBlur}\r\n        minLength={7}\r\n        maxLength={30}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nInputField.propTypes = {\r\n  hasLabel: PropTypes.bool,\r\n  isLoginForm: PropTypes.bool,\r\n  isDataForm: PropTypes.bool,\r\n  disabled: PropTypes.bool,\r\n  name: PropTypes.string,\r\n  inputRef: PropTypes.object,\r\n  onBlur: PropTypes.func\r\n};\r\n\r\nexport default InputField;\r\n","import styled from \"styled-components\";\r\nimport { FlexBox } from \"@/styles/FlexStyle\";\r\n\r\n// 입력칸의 제목 역할\r\nexport const Label = styled.label`\r\n  font-size: 19px;\r\n  font-weight: 700;\r\n  color: ${({ theme }) => theme.colors.gray600};\r\n`;\r\n\r\n// 입력칸\r\n// type이 text, password, email인 경우에만 스타일 적용\r\nexport const Input = styled.input.attrs((props) => ({\r\n  type: props.type\r\n}))`\r\n  ${({ type, theme }) =>\r\n    (type === \"text\" || type === \"password\" || type === \"email\") &&\r\n    `\r\n    width: 100%;\r\n    height: 3.8rem;\r\n    margin-top: 8px;\r\n    padding: 10px 18px;\r\n    background-color: #fff;\r\n    border: 1px solid #ccc;\r\n    color: ${theme.colors.text.sub};\r\n    font-size: 19px;\r\n    font-weight: 400;\r\n  `}\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const ValidationMessageWrapper = styled.div`\r\n  width: ${(props) => props.width || \"fit-content\"};\r\n  height: ${(props) => props.height || \"fit-content\"};\r\n`;\r\n\r\nexport const ValidationMessageP = styled.p`\r\n  font-size: ${({ fontSize }) => fontSize || \"16px\"};\r\n  font-weight: ${({ fontWeight }) => fontWeight};\r\n  color: ${({ color, theme }) => (color ? color : theme.colors.error)};\r\n  margin: ${({ margin }) => margin || \"0 3px\"};\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { ValidationMessageWrapper, ValidationMessageP } from \"./ValidationMessageStyle\";\r\n\r\nconst ValidationMessage = ({ message, fontSize, fontWeight, color, margin }) => {\r\n  return (\r\n    <ValidationMessageWrapper>\r\n      <ValidationMessageP\r\n        fontSize={fontSize}\r\n        fontWeight={fontWeight}\r\n        color={color}\r\n        margin={margin}\r\n      >\r\n        {message}\r\n      </ValidationMessageP>\r\n    </ValidationMessageWrapper>\r\n  );\r\n};\r\n\r\nValidationMessage.propTypes = {\r\n  message: PropTypes.string,\r\n  fontSize: PropTypes.string,\r\n  fontWeight: PropTypes.string,\r\n  color: PropTypes.string,\r\n  margin: PropTypes.string\r\n};\r\n\r\nexport default ValidationMessage;\r\n","import React, { useRef, useEffect, useState, useCallback } from \"react\";\r\nimport { useSetRecoilState } from \"recoil\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FlexBox } from \"@/styles/FlexStyle\";\r\nimport { KAKAO_LOGIN_LINK } from \"@/services/const\";\r\n\r\n// ===== hooks import =====\r\nimport useAxios from \"@/hooks/useAxios\";\r\n\r\n// ===== components & image import =====\r\nimport { userInfoState } from \"@/recoil/userState\";\r\nimport KakaoIcon from \"@/assets/images/kakao.png\";\r\nimport FormTitle from \"@/components/Web/Shared/Form/FormTitle\";\r\nimport InputField from \"@/components/Web/Shared/Form/InputField\";\r\nimport Button from \"@/components/Web/Shared/Buttons/Button\";\r\nimport ValidationMessage from \"@/components/Web/Shared/Form/ValidationMessage\";\r\nimport { getCurrentUserInfo } from \"../../../services/user\";\r\n\r\n// ===== component ======\r\nconst LoginForm = () => {\r\n  // === ref ===\r\n  const idRef = useRef(\"\"); // 아이디\r\n  const passwordRef = useRef(\"\"); // 비밀번호\r\n  const isDataFetched = useRef(false);\r\n\r\n  // === state ===\r\n  const setUser = useSetRecoilState(userInfoState);\r\n  const [loginError, setLoginError] = useState(\"\"); // error state\r\n  // const [username, setUsername] = useState(null);\r\n  // (api 관련)\r\n  const [apiConfig, setApiConfig] = useState(null);\r\n  const { response, error, loading, fetchData } = useAxios(apiConfig, false);\r\n\r\n  // === navigate ===\r\n  const navigate = useNavigate();\r\n\r\n  // === cookie ===\r\n  const [cookies, setCookie] = useCookies([\"sessionId\"]);\r\n\r\n  useEffect(() => {\r\n    if (apiConfig !== null) {\r\n      fetchData();\r\n    }\r\n  }, [apiConfig]);\r\n\r\n  useEffect(() => {\r\n    if (response !== null) {\r\n      setLoginError(\"\");\r\n      const userRole = response.authorityLevel === 100 ? \"admin\" : \"member\";\r\n      const expires = new Date();\r\n      expires.setTime(expires.getTime() + 7200 * 1000);\r\n      setCookie(\"sessionId\", response.sessionId, { path: \"/\", expires });\r\n      setCookie(\"userRole\", userRole, { path: \"/\", expires });\r\n\r\n      if (!isDataFetched.current) getUserInfo();\r\n      navigate(\"/\");\r\n    } else {\r\n      setLoginError(error);\r\n    }\r\n  }, [response, error]);\r\n\r\n  const handleLogin = () => {\r\n    const id = idRef.current.value;\r\n    const password = passwordRef.current.value;\r\n\r\n    const idRegex = /^[a-z0-9]{7,30}$/;\r\n    const pwRegex = /^(?=.*[a-zA-Z])(?=.*\\d)[\\x00-\\x7F]{7,30}$/;\r\n\r\n    if (!idRegex.test(id) || !pwRegex.test(password)) {\r\n      setLoginError(\"아이디 또는 비밀번호를 잘못 입력했습니다.\");\r\n      return;\r\n    } else {\r\n      setLoginError(\"\");\r\n      // setUsername(id);\r\n      // 로그인 API 코드\r\n      setApiConfig({\r\n        method: \"post\",\r\n        url: \"/user/signin\",\r\n        data: {\r\n          username: id,\r\n          password: password\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  // 카카오 로그인\r\n  const handleKakaoLogin = () => {\r\n    window.location.href = KAKAO_LOGIN_LINK;\r\n  };\r\n\r\n  const getUserInfo = useCallback(async () => {\r\n    const userInfo = await getCurrentUserInfo();\r\n\r\n    if (userInfo !== null) {\r\n      setCookie(\"userId\", userInfo.nickname.split(\"#\")[1], { path: \"/\" });\r\n      const updatedUserInfo = {\r\n        // username: username,\r\n        role: cookies.userRole,\r\n        ...userInfo\r\n      };\r\n      setUser(updatedUserInfo);\r\n      isDataFetched.current = true;\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <p>Loading...</p>\r\n      ) : (\r\n        <>\r\n          <LoginFormFlexContainer dir=\"col\" marginTop=\"4rem\">\r\n            <FormTitle type=\"login\"></FormTitle>\r\n\r\n            {/* 아이디 input */}\r\n            <LoginFormFlexContainer marginBottom=\"12px\">\r\n              <InputField name=\"id\" isLoginForm={true} inputRef={idRef}></InputField>\r\n            </LoginFormFlexContainer>\r\n\r\n            {/* 비밀번호 input */}\r\n            <LoginFormFlexContainer marginBottom=\"12px\">\r\n              <InputField\r\n                name=\"password\"\r\n                isLoginForm={true}\r\n                inputRef={passwordRef}\r\n              ></InputField>\r\n            </LoginFormFlexContainer>\r\n\r\n            {/* 경고 문구 */}\r\n            {loginError && <ValidationMessage message={loginError} />}\r\n\r\n            {/* 로그인 button */}\r\n            <LoginFormFlexContainer marginTop=\"18px\" marginBottom=\"6px\">\r\n              <Button type=\"bigBrown\" message=\"로그인\" onClick={handleLogin}></Button>\r\n            </LoginFormFlexContainer>\r\n\r\n            {/* Link button */}\r\n            <LoginFormFlexContainer row=\"between\" marginBottom=\"20px\">\r\n              <LoginFormFlexContainer width=\"fit-content\">\r\n                <Link to=\"/member/find?type=id\">\r\n                  <LinkSpan marginRight=\"24px\">아이디 찾기</LinkSpan>\r\n                </Link>\r\n                <Link to=\"/member/find?type=pw\">\r\n                  <LinkSpan>비밀번호 찾기</LinkSpan>\r\n                </Link>\r\n              </LoginFormFlexContainer>\r\n              <Link to=\"/member/join\">\r\n                <LinkSpan color=\"#413014\">회원가입</LinkSpan>\r\n              </Link>\r\n            </LoginFormFlexContainer>\r\n\r\n            {/* 카카오 로그인 button */}\r\n            <KakaoLoginButton onClick={handleKakaoLogin}>\r\n              <LoginFormFlexContainer col=\"center\">\r\n                <KakaoIconImage src={KakaoIcon} />\r\n                <LinkSpan color=\"#413014\" fontSize=\"20px\" fontWeight=\"700\">\r\n                  카카오 계정으로 로그인하기\r\n                </LinkSpan>\r\n              </LoginFormFlexContainer>\r\n            </KakaoLoginButton>\r\n          </LoginFormFlexContainer>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\n// ===== style ======\r\nconst LoginFormFlexContainer = styled(FlexBox)`\r\n  height: ${(props) => props.height || \"fit-content\"};\r\n  margin-top: ${(props) => props.marginTop || null};\r\n  margin-bottom: ${(props) => props.marginBottom || null};\r\n  margin-left: ${(props) => props.marginLeft || null};\r\n  margin-right: ${(props) => props.marginRight || null};\r\n`;\r\n\r\nconst KakaoLoginButton = styled.button`\r\n  height: 4.3rem;\r\n  background-color: ${({ theme }) => theme.colors.kakao};\r\n  color: #413014;\r\n`;\r\n\r\nconst LinkSpan = styled.span`\r\n  color: ${(props) => props.color || \"#929292\"};\r\n  font-size: ${(props) => props.fontSize || \"19px\"};\r\n  font-weight: ${(props) => props.fontWeight || \"600\"};\r\n  margin-top: ${(props) => props.marginTop || null};\r\n  margin-bottom: ${(props) => props.marginBottom || null};\r\n  margin-left: ${(props) => props.marginLeft || null};\r\n  margin-right: ${(props) => props.marginRight || null};\r\n`;\r\n\r\nconst KakaoIconImage = styled.img`\r\n  width: ${(props) => props.width || \"24px\"};\r\n  height: ${(props) => props.height || \"24px\"};\r\n  margin-left: 14px;\r\n  margin-right: 10px;\r\n`;\r\n\r\nexport default LoginForm;\r\n","import React from \"react\";\r\n\r\n// ===== style import =====\r\nimport { FlexBox } from \"@/styles/FlexStyle\";\r\nimport { Main } from \"@/styles/CommonStyle\";\r\n\r\n// ===== components import =====\r\nimport Header from \"@/components/Web/Shared/Layout/Header\";\r\nimport LoginForm from \"@/components/Web/Member/LoginForm\";\r\n\r\n// ===== component =====\r\nconst Login = () => {\r\n  return (\r\n    <>\r\n      <FlexBox row=\"center\" col=\"center\">\r\n        <Header type=\"big\" />\r\n        <FlexBox width=\"28.75rem\" height=\"fit-content\">\r\n          <Main>\r\n            <LoginForm />\r\n          </Main>\r\n        </FlexBox>\r\n      </FlexBox>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import styled, { keyframes } from \"styled-components\";\r\nimport { FlexBox } from \"./FlexStyle\";\r\n\r\nexport const fadeIn = keyframes`\r\n  from { opacity: 0;}\r\n  to {opacity: 1;}\r\n`;\r\n\r\nexport const blink = keyframes`\r\n  50% {\r\n      opacity: 0;\r\n  }\r\n`;\r\n\r\n// 숨겨진 요소\r\nexport const Hidden = styled.div`\r\n  display: none;\r\n`;\r\n\r\n// 웹 페이지 그라데이션 영역\r\nexport const Gradation = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 42.25rem;\r\n  background-image: linear-gradient(#dbe1ed, #ffffff00);\r\n  z-index: -1;\r\n`;\r\n\r\n// 콘텐츠 영역 감싸는 태그\r\nexport const ContentWrapper = styled(FlexBox)`\r\n  animation: ${fadeIn} 0.5s ease-in-out;\r\n`;\r\n\r\n// 넓은 콘텐츠 영역 (width: 1200px)\r\nexport const WideContent = styled(FlexBox)`\r\n  width: ${(props) => props.width || \"75rem\"};\r\n  height: 100vh;\r\n`;\r\n\r\n// 좁은 콘텐츠 영역 (width: 652px)\r\nexport const NarrowContent = styled(FlexBox)`\r\n  width: 36.75rem; // 기존 40.75rem\r\n  height: ${(props) => props.height || \"fit-content\"};\r\n`;\r\n\r\n// 페이지의 핵심 콘텐츠\r\nexport const Main = styled.main`\r\n  width: 100%;\r\n  margin-top: ${({ type }) =>\r\n    type === \"big\" ? \"10rem\" : type !== \"admin\" ? \"7.5rem\" : \"6.5rem\"};\r\n`;\r\n\r\nexport const Box = styled(FlexBox)`\r\n  width: 100%;\r\n  max-width: 100%;\r\n  height: 43.25rem;\r\n  padding: 10px;\r\n  background-color: ${({ bgColor, theme }) => bgColor || theme.colors.content};\r\n`;\r\n\r\n// 작은 요소들을 감싸는 요소\r\nexport const SmallWrapper = styled(FlexBox)`\r\n  flex-basis: ${(props) => props.width || auto};\r\n  align-self: ${(props) => props.align || auto};\r\n`;\r\n","import axios from \"axios\";\r\nimport { Cookies } from \"react-cookie\";\r\nimport { BASE_URL } from \"./const\";\r\n\r\nconst cookies = new Cookies();\r\n\r\nexport const getCurrentUserInfo = async () => {\r\n  const userInfoRes = await axios.get(`${BASE_URL}/user/me`, {\r\n    headers: { sessionId: cookies.get(\"sessionId\") }\r\n  });\r\n\r\n  if (userInfoRes.statusText === \"OK\") {\r\n    return userInfoRes.data.result;\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nexport const updateCurrentUserAvatar = async (accIdx, nickname = \"테스트\") => {\r\n  const res = await axios.put(\r\n    `${BASE_URL}/user`,\r\n    { avatarAccessoryIndex: accIdx, nickname: nickname },\r\n    { headers: { sessionId: cookies.get(\"sessionId\") } }\r\n  );\r\n\r\n  if (res.statusText === \"OK\") {\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n};\r\n\r\nexport const getPlayerInfoByUserId = async (userId) => {\r\n  const res = await axios.get(`${BASE_URL}/user/${userId}`, {\r\n    headers: { sessionId: cookies.get(\"sessionId\") }\r\n  });\r\n\r\n  if (res.statusText === \"OK\") {\r\n    return res.data.result;\r\n  }\r\n\r\n  return null;\r\n};\r\n"],"names":["FormTitleWrapper","styled","div","props","width","height","FormTitleText","p","color","fontSize","fontWeight","margin","FormTitle","type","marginTop","marginBottom","_jsx","children","getFormTitle","propTypes","PropTypes","InputField","hasLabel","isLoginForm","isDataForm","name","inputRef","disabled","onBlur","idPlaceholder","passwordPlaceholder","_jsxs","_Fragment","Label","Input","ref","placeholder","onChange","e","value","target","current","minLength","maxLength","label","theme","colors","gray600","input","attrs","text","sub","ValidationMessageWrapper","ValidationMessageP","error","ValidationMessage","message","LoginFormFlexContainer","FlexBox","marginLeft","marginRight","KakaoLoginButton","button","kakao","LinkSpan","span","KakaoIconImage","img","LoginForm","idRef","useRef","passwordRef","isDataFetched","setUser","useSetRecoilState","userInfoState","loginError","setLoginError","useState","apiConfig","setApiConfig","response","loading","fetchData","useAxios","navigate","useNavigate","cookies","setCookie","useCookies","useEffect","userRole","authorityLevel","expires","Date","setTime","getTime","sessionId","path","getUserInfo","useCallback","async","userInfo","getCurrentUserInfo","nickname","split","updatedUserInfo","role","dir","Button","onClick","handleLogin","id","password","test","method","url","data","username","row","Link","to","handleKakaoLogin","window","location","href","KAKAO_LOGIN_LINK","col","src","Login","Header","Main","fadeIn","keyframes","blink","Gradation","ContentWrapper","WideContent","NarrowContent","main","Box","bgColor","content","auto","align","Cookies","userInfoRes","axios","get","concat","BASE_URL","headers","statusText","result","updateCurrentUserAvatar","accIdx","arguments","length","undefined","put","avatarAccessoryIndex","getPlayerInfoByUserId","res","userId"],"sourceRoot":""}