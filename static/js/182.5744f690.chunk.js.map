{"version":3,"file":"static/js/182.5744f690.chunk.js","mappings":"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","sources":["components/Web/Admin/NoticeManagementList.jsx","components/Web/Shared/Board/SearchBar.jsx","components/Web/Shared/Buttons/ButtonStyle.jsx","components/Web/Shared/Form/InputFieldStyle.jsx","components/Web/Admin/NoticeManagementCreate.jsx","components/Web/Admin/NoticeManagementDetail.jsx","pages/Web/Admin/NoticeManagement.jsx","recoil/displayState.js","services/date.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nimport ManagementTitle from \"./ManagementTitle\";\r\nimport ManagementList from \"./ManagementList\";\r\nimport Button from \"../Shared/Buttons/Button\";\r\nimport SearchBar from \"../Shared/Board/SearchBar\";\r\nimport Pagination from \"../Shared/Board/Pagination\";\r\nimport { Box } from \"@/components/Game/Shared/Layout\";\r\nimport { FlexBox } from \"@/styles/FlexStyle\";\r\nimport useAxios from \"@/hooks/useAxios\";\r\nimport { remoteApiConfigState } from \"@/recoil/boardState\";\r\nimport { POST_SEARCH_WORD_REGEX } from \"@/services/regexp\";\r\n\r\nconst NoticeManagementList = ({ type, onDetailOpen, onCreateOpen }) => {\r\n  const remoteApiConfig = useRecoilValue(remoteApiConfigState);\r\n  const [cookies] = useCookies([\"sessionId\"]);\r\n  const [listData, setListData] = useState([]);\r\n  const [currPage, setCurrPage] = useState(1);\r\n  const [lastPageIdx, setLastPageIdx] = useState(1);\r\n  const [searchKeyword, setSearchKeyword] = useState(\"\");\r\n  const [apiConfig, setApiConfig] = useState({\r\n    method: \"get\",\r\n    url: `/notice/list?page=${currPage}`,\r\n    headers: {\r\n      sessionId: cookies.sessionId\r\n    }\r\n  });\r\n  const { response, loading, error, fetchData } = useAxios(apiConfig, false);\r\n\r\n  useEffect(() => {\r\n    if (apiConfig !== null) {\r\n      fetchData();\r\n    }\r\n  }, [apiConfig]);\r\n\r\n  useEffect(() => {\r\n    if (remoteApiConfig !== null) {\r\n      setApiConfig(remoteApiConfig);\r\n    }\r\n  }, [remoteApiConfig]);\r\n\r\n  useEffect(() => {\r\n    if (response !== null) {\r\n      if (apiConfig.url.includes(\"/search?q=\")) {\r\n        setLastPageIdx(1);\r\n        setListData(\r\n          response.list?.map(({ content, created_at, views, ...rest }) => ({\r\n            ...rest,\r\n            created_at: created_at.split(\"T\")[0],\r\n            views: views\r\n          }))\r\n        );\r\n      } else {\r\n        setLastPageIdx(response.lastPage === 0 ? 1 : response.lastPage);\r\n        setListData(\r\n          response.list?.map(({ content, created_at, views, ...rest }) => ({\r\n            ...rest,\r\n            created_at: created_at.split(\"T\")[0],\r\n            views: views\r\n          }))\r\n        );\r\n      }\r\n    } else {\r\n      setLastPageIdx(1);\r\n      setListData([]);\r\n    }\r\n  }, [response]);\r\n\r\n  // 페이지 변경, 검색 시 호출\r\n  useEffect(() => {\r\n    if (searchKeyword === \"\" || !POST_SEARCH_WORD_REGEX.test(searchKeyword)) return;\r\n\r\n    setApiConfig({\r\n      ...apiConfig,\r\n      url: `/notice/search?q=${searchKeyword}&page=${currPage}`\r\n    });\r\n  }, [currPage, searchKeyword]);\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <p>Loading...</p>\r\n      ) : error ? (\r\n        <p>{error}</p>\r\n      ) : type !== \"home\" ? (\r\n        <Box>\r\n          <HeaderWrapper row=\"between\" col=\"center\">\r\n            <ManagementTitle title=\"notice\" />\r\n            <SearchBarWrapper marginTop=\"14px\">\r\n              <SearchBar searchType=\"제목\" setSearchKeyword={setSearchKeyword} />\r\n            </SearchBarWrapper>\r\n          </HeaderWrapper>\r\n          <ManagementList\r\n            isHome={false}\r\n            title=\"notice\"\r\n            data={listData}\r\n            onSideOpen={onDetailOpen}\r\n          />\r\n          <Pagination\r\n            currPage={currPage}\r\n            setCurrPage={setCurrPage}\r\n            lastPageIdx={lastPageIdx}\r\n          />\r\n          <ButtonWrapper row=\"end\">\r\n            <CreateButton onClick={onCreateOpen} />\r\n          </ButtonWrapper>\r\n        </Box>\r\n      ) : (\r\n        <Box type={type}>\r\n          <ManagementTitle type={type} title=\"notice\" />\r\n          <ManagementList\r\n            isHome={true}\r\n            title=\"notice\"\r\n            data={listData}\r\n            onSideOpen={onDetailOpen}\r\n          />\r\n        </Box>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nNoticeManagementList.propTypes = {\r\n  type: PropTypes.string,\r\n  onDetailOpen: PropTypes.func,\r\n  onCreateOpen: PropTypes.func\r\n};\r\n\r\nconst HeaderWrapper = styled(FlexBox)`\r\n  padding-bottom: 14px;\r\n`;\r\n\r\nconst SearchBarWrapper = styled.div`\r\n  margin-top: ${({ marginTop }) => marginTop};\r\n  margin-right: ${({ marginRight }) => marginRight};\r\n`;\r\n\r\nconst ButtonWrapper = styled(FlexBox)`\r\n  margin-top: 10px;\r\n`;\r\n\r\nconst CreateButton = styled(Button).attrs({ type: \"smallDark\", message: \"등록\" })``;\r\n\r\nexport default NoticeManagementList;\r\n","import { useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport { FlexBox } from \"@/styles/FlexStyle\";\r\nimport { faMagnifyingGlass } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { POST_SEARCH_WORD_REGEX } from \"../../../../services/regexp\";\r\n\r\nconst SearchBar = ({ searchType, setSearchKeyword }) => {\r\n  const keywordRef = useRef();\r\n\r\n  const sendKeyword = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!POST_SEARCH_WORD_REGEX.test(keywordRef.current.value)) return;\r\n\r\n    setSearchKeyword(keywordRef.current.value);\r\n    keywordRef.current.value = e.target.value;\r\n  };\r\n\r\n  return (\r\n    <SearchInputWrapper col=\"center\" field={searchType}>\r\n      <SearchTypeInput type=\"text\" readOnly value={searchType} />\r\n      <SearchKeywordInput\r\n        type=\"text\"\r\n        field={searchType}\r\n        placeholder=\"검색어 입력\"\r\n        onKeyDown={(e) => {\r\n          if (e.key === \"Enter\") sendKeyword(e);\r\n        }}\r\n        ref={keywordRef}\r\n      />\r\n      <SearchButton onClick={(e) => sendKeyword(e)}>\r\n        <SearchIcon icon={faMagnifyingGlass} />\r\n      </SearchButton>\r\n    </SearchInputWrapper>\r\n  );\r\n};\r\n\r\nSearchBar.propTypes = {\r\n  searchType: PropTypes.string,\r\n  setSearchKeyword: PropTypes.func\r\n};\r\n\r\nconst SearchInputWrapper = styled(FlexBox)`\r\n  border: 2px solid ${({ theme }) => theme.colors.gray200};\r\n  border-radius: 10px;\r\n  width: 18.5rem;\r\n  height: ${(props) => props.height || \"3.2rem\"};\r\n`;\r\n\r\nconst TransparentInput = styled.input`\r\n  border: 0;\r\n  background-color: transparent;\r\n  font-size: ${({ theme }) => theme.fontSize.xxxs};\r\n`;\r\n\r\nconst SearchTypeInput = styled(TransparentInput)`\r\n  width: ${({ value }) => (value === \"닉네임\" ? \"5.25rem\" : \"4.2rem\")};\r\n  padding: 0 16px;\r\n  border-right: 2px solid ${({ theme }) => theme.colors.gray200};\r\n\r\n  &:hover {\r\n    cursor: default;\r\n  }\r\n`;\r\n\r\nconst SearchKeywordInput = styled(TransparentInput)`\r\n  flex: 1;\r\n  margin: 0 10px;\r\n  width: ${({ field }) => (field === \"닉네임\" ? \"9.25rem\" : \"70%\")};\r\n\r\n  &::placeholder {\r\n    color: #a7a7a7;\r\n  }\r\n`;\r\n\r\nconst SearchButton = styled.button`\r\n  background-color: transparent;\r\n  width: 22px;\r\n  margin-right: 15px;\r\n  padding: 0;\r\n`;\r\n\r\nconst SearchIcon = styled(FontAwesomeIcon)`\r\n  font-size: 19px;\r\n`;\r\n\r\nexport default SearchBar;\r\n","import styled from \"styled-components\";\r\n\r\n// Web에서 주로 사용하는 갈색 Big Submit 버튼 (회원가입, 로그인, 탈퇴하기, 비밀번호 변경하기)\r\nexport const BigSubmitBrownButton = styled.button`\r\n  width: 100%;\r\n  height: 4.3rem;\r\n  background-color: ${({ theme }) => theme.colors.button.main.background};\r\n  color: ${({ theme }) => theme.colors.button.main.text};\r\n  font-size: 26px;\r\n  font-weight: 700;\r\n\r\n  &:hover {\r\n    background-color: ${({ theme }) => theme.colors.button.main.hover};\r\n  }\r\n`;\r\n\r\n// Web에서 사용하는 갈색 Small Submit 버튼\r\nexport const SmallSubmitBrownButton = styled.button`\r\n  width: 15rem;\r\n  height: 4.688rem;\r\n  background-color: ${({ theme }) => theme.colors.button.main.background};\r\n  color: ${({ theme }) => theme.colors.button.main.text};\r\n  font-size: ${({ theme }) => theme.fontSize.l};\r\n  font-weight: 700;\r\n\r\n  &:hover {\r\n    background-color: ${({ theme }) => theme.colors.button.main.hover};\r\n  }\r\n`;\r\n\r\n// Modal에서 주로 사용하는 회색 Submit 버튼\r\nexport const ModalGrayButton = styled.button`\r\n  width: 11rem;\r\n  height: ${(props) => props.width || \"3.625rem\"};\r\n  background-color: ${({ theme }) => theme.colors.gray100};\r\n  border: 1px solid ${({ theme }) => theme.colors.gray500};\r\n  color: ${({ theme }) => theme.colors.gray600};\r\n  font-size: ${({ theme }) => theme.fontSize.s};\r\n  font-weight: 500;\r\n\r\n  &:hover {\r\n    background-color: ${({ theme }) => theme.colors.gray400};\r\n  }\r\n`;\r\n\r\n// 큰 투명 버튼\r\nexport const BigTransparentButton = styled.button`\r\n  width: ${(props) => props.width || \"9rem\"};\r\n  height: ${(props) => props.height || \"4.3rem\"};\r\n  background-color: transparent;\r\n  border: 2px solid ${({ theme }) => theme.colors.gray600};\r\n  color: ${({ theme }) => theme.colors.text.sub};\r\n  font-size: ${({ theme }) => theme.fontSize.s};\r\n  font-weight: 700;\r\n\r\n  &:hover {\r\n    background-color: #ffffff32;\r\n  }\r\n`;\r\n\r\n// 작은 버튼\r\nexport const SmallButton = styled.button`\r\n  width: ${(props) => props.width || \"6rem\"};\r\n  height: ${(props) => props.height || \"3rem\"};\r\n  font-size: ${({ theme }) => theme.fontSize.xxxs};\r\n  font-weight: 700;\r\n`;\r\n\r\n// 작은 투명 버튼\r\nexport const SmallTransparentButton = styled(SmallButton)`\r\n  background-color: transparent;\r\n  color: #000;\r\n  border: 1px solid #000;\r\n\r\n  &:hover {\r\n    background-color: #ffffff32;\r\n  }\r\n`;\r\n\r\n// 짙은 회색 작은 버튼\r\nexport const SmallDarkButton = styled(SmallButton)`\r\n  background-color: #585858;\r\n  color: #fff;\r\n\r\n  &:hover {\r\n    background-color: ${({ theme }) => theme.colors.gray600};\r\n  }\r\n`;\r\n\r\n// 작은 옅은 회색 버튼\r\nexport const SmallGrayButton = styled(SmallButton)`\r\n  background-color: #aaa;\r\n  color: #000;\r\n\r\n  &:hover {\r\n    background-color: ${({ theme }) => theme.colors.gray400};\r\n  }\r\n`;\r\n\r\n// Admin에서 주로 사용하는 미니 버튼\r\nexport const MiniButton = styled.button`\r\n  width: ${(props) => props.width || \"2.875rem\"};\r\n  height: ${(props) => props.height || \"1.688rem\"};\r\n  background-color: transparent;\r\n  font-size: ${({ theme }) => theme.fontSize.xxxxs};\r\n  font-weight: 700;\r\n`;\r\n\r\n// 파랑 미니 버튼 (관리자 - 공지)\r\nexport const MiniBlueButton = styled(MiniButton)`\r\n  border: 1px solid ${({ theme }) => theme.colors.success};\r\n  color: ${({ theme }) => theme.colors.success};\r\n`;\r\n\r\n// 빨강 미니 버튼 (관리자 - 공지)\r\nexport const MiniRedButton = styled(MiniButton)`\r\n  border: 1px solid ${({ theme }) => theme.colors.error};\r\n  color: ${({ theme }) => theme.colors.error};\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { FlexBox } from \"@/styles/FlexStyle\";\r\n\r\n// 입력칸의 제목 역할\r\nexport const Label = styled.label`\r\n  font-size: 19px;\r\n  font-weight: 700;\r\n  color: ${({ theme }) => theme.colors.gray600};\r\n`;\r\n\r\n// 입력칸\r\n// type이 text, password, email인 경우에만 스타일 적용\r\nexport const Input = styled.input.attrs((props) => ({\r\n  type: props.type\r\n}))`\r\n  ${({ type, theme }) =>\r\n    (type === \"text\" || type === \"password\" || type === \"email\") &&\r\n    `\r\n    width: 100%;\r\n    height: 3.8rem;\r\n    margin-top: 8px;\r\n    padding: 10px 18px;\r\n    background-color: #fff;\r\n    border: 1px solid #ccc;\r\n    color: ${theme.colors.text.sub};\r\n    font-size: 19px;\r\n    font-weight: 400;\r\n  `}\r\n`;\r\n","import { useState, useRef, useEffect } from \"react\";\r\nimport { useSetRecoilState } from \"recoil\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport styled from \"styled-components\";\r\nimport ReactQuill from \"react-quill\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\n\r\nimport { isActiveSideContentTypeState } from \"@/recoil/displayState\";\r\nimport { remoteApiConfigState } from \"@/recoil/boardState\";\r\nimport useAxios from \"@/hooks/useAxios\";\r\nimport FlexBox from \"@/styles/FlexStyle\";\r\nimport { Input } from \"../Shared/Form/InputFieldStyle\";\r\nimport Modal from \"../Shared/Modal/WebModal\";\r\nimport { SmallDarkButton } from \"../Shared/Buttons/ButtonStyle\";\r\nimport { POST_TITLE_REGEX } from \"@/services/regexp\";\r\n\r\nconst MAX_IMAGE_COUNT = 3;\r\n\r\nconst NoticeManagementCreate = () => {\r\n  const setIsActiveSideContentType = useSetRecoilState(isActiveSideContentTypeState);\r\n  const setRemoteApiConfig = useSetRecoilState(remoteApiConfigState);\r\n  const [cookies] = useCookies([\"sessionId\"]);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const [images, setImages] = useState([]);\r\n  const [modalMessage, setModalMessage] = useState(\"\");\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [apiConfig, setApiConfig] = useState(null);\r\n  const { response, error, loading, fetchData } = useAxios(apiConfig, false);\r\n  const editorRef = useRef(null);\r\n\r\n  // 텍스트 에디터 옵션\r\n  const modules = {\r\n    toolbar: [\r\n      [{ header: [] }],\r\n      [\"bold\", \"italic\", \"underline\", \"strike\", \"code-block\"],\r\n      [{ list: \"ordered\" }, { list: \"bullet\" }],\r\n      [\"link\", \"image\"],\r\n      [{ align: [] }, { color: [] }, { background: [] }], // dropdown with defaults from theme\r\n      [\"clean\"]\r\n    ]\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (apiConfig !== null) {\r\n      fetchData();\r\n    }\r\n  }, [apiConfig]);\r\n\r\n  useEffect(() => {\r\n    if (response !== null) {\r\n      setIsActiveSideContentType(0);\r\n      setRemoteApiConfig({\r\n        method: \"get\",\r\n        url: \"/notice/list?page=1\",\r\n        headers: {\r\n          sessionId: cookies.sessionId\r\n        }\r\n      });\r\n    } else {\r\n      if (error) {\r\n        setModalMessage(error);\r\n        setIsModalOpen(true);\r\n      }\r\n    }\r\n  }, [response, error]);\r\n\r\n  useEffect(() => {\r\n    const handleImage = () => {\r\n      if (!editorRef.current) return;\r\n      const editor = editorRef.current.getEditor();\r\n\r\n      // input[type=\"file\"] 있는지 확인\r\n      if (editor.container.querySelector(\"input.ql-image[type=file]\") === null) {\r\n        const input = document.createElement(\"input\");\r\n        input.setAttribute(\"type\", \"file\");\r\n        input.setAttribute(\"accept\", \"image/png, image/jpeg, image/jpg, image/tif\");\r\n        input.classList.add(\"ql-image\");\r\n        input.onchange = () => {\r\n          // 이미지를 선택하지 않고 창 닫은 경우 방지\r\n          if (input.files && input.files[0]) {\r\n            const file = input.files[0];\r\n\r\n            // 파일 크기 제한\r\n            if (file.size > 1024 * 1024 * 5) {\r\n              setModalMessage(\"파일당 5MB를 초과할 수 없습니다.\");\r\n              setIsModalOpen(true);\r\n              return;\r\n            }\r\n\r\n            // 이미지 개수 제한\r\n            let images = document.querySelectorAll(\"img\");\r\n            if (images.length > MAX_IMAGE_COUNT) {\r\n              setModalMessage(`최대 ${MAX_IMAGE_COUNT}개의 이미지만 첨부할 수 있습니다.`);\r\n              setIsModalOpen(true);\r\n              return;\r\n            }\r\n            // 이미지 추가\r\n            const fr = new FileReader();\r\n            fr.onload = () => {\r\n              // 현재 커서 위치 저장\r\n              const range = editor.getSelection(true);\r\n              editor.insertEmbed(range.index, \"image\", fr.result);\r\n\r\n              const unprivilegedEditor = editorRef.current.makeUnprivilegedEditor(editor);\r\n              const length = unprivilegedEditor.getLength();\r\n\r\n              editor.scrollIntoView({ index: length - 1, length: 0 });\r\n              editor.setSelection(range.index + 1);\r\n\r\n              // 이미지 파일 저장\r\n              setImages((prevImages) => prevImages.concat(file));\r\n            };\r\n            fr.readAsDataURL(file);\r\n          }\r\n        };\r\n        input.click();\r\n      }\r\n    };\r\n\r\n    if (editorRef.current) {\r\n      let toolbar = editorRef.current.getEditor().getModule(\"toolbar\");\r\n      toolbar.addHandler(\"image\", handleImage);\r\n    }\r\n  }, []);\r\n\r\n  // 이미지 삭제 처리\r\n  useEffect(() => {\r\n    if (!editorRef.current) return;\r\n    const editor = editorRef.current.getEditor();\r\n\r\n    // text-change 이벤트 핸들러\r\n    const handleImageDelete = () => {\r\n      let quillImages = [];\r\n      editor.getContents().ops.forEach((op) => {\r\n        if (op.insert && op.insert.image) {\r\n          quillImages.push(op.insert.image);\r\n        }\r\n      });\r\n\r\n      setImages((prevImages) => {\r\n        return prevImages.filter((image) => quillImages.includes(image));\r\n      });\r\n    };\r\n\r\n    // text-change 이벤트 등록\r\n    editor.on(\"text-change\", handleImageDelete);\r\n\r\n    // 컴포넌트 언마운트 시 이벤트 해제\r\n    return () => editor.off(\"text-change\", handleImageDelete);\r\n  }, []);\r\n\r\n  // 스크롤 아래로 고정\r\n  useEffect(() => {\r\n    if (editorRef.current) {\r\n      const editor = editorRef.current.getEditor();\r\n      const unprivilegedEditor = editorRef.current.makeUnprivilegedEditor(editor);\r\n      const length = unprivilegedEditor.getLength();\r\n      editor.scrollIntoView({ index: length - 1, length: 0 });\r\n    }\r\n  }, [content]);\r\n\r\n  const noticeSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"title\", title);\r\n    formData.append(\"content\", content);\r\n    images?.forEach((image) => {\r\n      formData.append(\"files\", image);\r\n    });\r\n\r\n    if (!POST_TITLE_REGEX.test(title)) {\r\n      setModalMessage(\"제목을 올바르게 입력하세요.\");\r\n      setIsModalOpen(true);\r\n      return;\r\n    }\r\n\r\n    setApiConfig({\r\n      method: \"post\",\r\n      url: \"/notice\",\r\n      headers: {\r\n        sessionId: cookies.sessionId\r\n      },\r\n      data: formData\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <p>Loading...</p>\r\n      ) : (\r\n        <NoticeCreateForm>\r\n          {isModalOpen && (\r\n            <Modal\r\n              hasButton={true}\r\n              setIsOpen={setIsModalOpen}\r\n              onClick={() => setIsModalOpen(false)}\r\n            >\r\n              {modalMessage}\r\n            </Modal>\r\n          )}\r\n          <TitleInput\r\n            type=\"text\"\r\n            name=\"title\"\r\n            hasLabel={false}\r\n            maxLength=\"100\"\r\n            onChange={(e) => setTitle(e.target.value)}\r\n            placeholder=\"제목을 입력하세요.\"\r\n          />\r\n          <EditorWrapper>\r\n            <ReactQuill\r\n              style={{ height: \"29rem\" }}\r\n              ref={editorRef}\r\n              theme=\"snow\"\r\n              modules={modules}\r\n              onChange={(_content) => {\r\n                const _contentWithEmptySrc = _content.replace(\r\n                  /<img[^>]*src=\"[^\"]*\"[^>]*>/g,\r\n                  (match) => {\r\n                    return match.replace(/src=\"[^\"]*\"/, 'src=\"\"');\r\n                  }\r\n                );\r\n                setContent(_contentWithEmptySrc);\r\n              }}\r\n              placeholder=\"내용을 입력하세요.\"\r\n            />\r\n          </EditorWrapper>\r\n          <ButtonWrapper row=\"end\">\r\n            <SaveButton width=\"7rem\" onClick={(e) => noticeSubmitHandler(e)}>\r\n              저장\r\n            </SaveButton>\r\n          </ButtonWrapper>\r\n        </NoticeCreateForm>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst NoticeCreateForm = styled.form`\r\n  padding: 50px 15px 0 15px;\r\n\r\n  & > * + * {\r\n    margin-top: 1.5rem;\r\n  }\r\n`;\r\n\r\nconst TitleInput = styled(Input)`\r\n  font-size: ${({ theme }) => theme.fontSize.xxs};\r\n  background-color: transparent;\r\n\r\n  &::placeholder {\r\n    font-weight: 400;\r\n    color: #a7a7a7;\r\n  }\r\n`;\r\n\r\nexport const EditorWrapper = styled.div`\r\n  height: 33rem;\r\n\r\n  & .ql-container.ql-snow {\r\n    border: 1px solid #ccc !important;\r\n  }\r\n\r\n  & .ql-snow .ql-picker.ql-header .ql-picker-label::before,\r\n  .ql-snow .ql-picker.ql-header .ql-picker-item::before {\r\n    content: \"본문\";\r\n  }\r\n\r\n  & .ql-snow .ql-picker.ql-header .ql-picker-label[data-value=\"1\"]::before,\r\n  .ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\"1\"]::before {\r\n    content: \"제목 1\";\r\n  }\r\n\r\n  & .ql-snow .ql-picker.ql-header .ql-picker-label[data-value=\"2\"]::before,\r\n  .ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\"2\"]::before {\r\n    content: \"제목 2\";\r\n  }\r\n\r\n  & .ql-snow .ql-picker.ql-header .ql-picker-label[data-value=\"3\"]::before,\r\n  .ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\"3\"]::before {\r\n    content: \"제목 3\";\r\n  }\r\n`;\r\n\r\nconst ButtonWrapper = styled(FlexBox)``;\r\n\r\nconst SaveButton = styled(SmallDarkButton)``;\r\n\r\nexport default NoticeManagementCreate;\r\n","import { useState, useRef, useEffect } from \"react\";\r\nimport { useRecoilState, useSetRecoilState } from \"recoil\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport ReactQuill from \"react-quill\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\n\r\nimport { isActiveSideContentTypeState } from \"@/recoil/displayState\";\r\nimport { remoteApiConfigState } from \"@/recoil/boardState\";\r\nimport { formatDateToTimestamp } from \"@/services/date\";\r\nimport FlexBox from \"@/styles/FlexStyle\";\r\nimport { faClock } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { faEye } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { EditorWrapper } from \"./NoticeManagementCreate\";\r\nimport { Input } from \"../Shared/Form/InputFieldStyle\";\r\nimport Button from \"../Shared/Buttons/Button\";\r\nimport Modal from \"../Shared/Modal/WebModal\";\r\nimport useAxios from \"@/hooks/useAxios\";\r\n\r\nconst NoticeManagementDetail = ({ data, isEditMode, setIsEditMode, fetchDetail }) => {\r\n  const { id, title, content, created_at, views, files } = data;\r\n  const [cookies] = useCookies([\"sessionId\"]);\r\n  const [editTitle, setEditTitle] = useState(title);\r\n  const [editContent, setEditContent] = useState(content);\r\n  const [editImages, setEditImages] = useState([]);\r\n  const setIsActiveSideContentType = useSetRecoilState(isActiveSideContentTypeState);\r\n  const setRemoteApiConfig = useSetRecoilState(remoteApiConfigState);\r\n  const [modalMessage, setModalMessage] = useState(\"\");\r\n  const [isOpenModal, setIsOpenModal] = useState(false);\r\n  const [apiConfig, setApiConfig] = useState(null);\r\n  const { response, loading, error, fetchData } = useAxios(apiConfig, false);\r\n\r\n  const contentRef = useRef();\r\n  const inputRef = useRef(null);\r\n  const textareaRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (apiConfig !== null) {\r\n      fetchData();\r\n    }\r\n  }, [apiConfig]);\r\n\r\n  useEffect(() => {\r\n    if (response !== null) {\r\n      if (apiConfig.method === \"delete\") {\r\n        // 삭제\r\n        setIsActiveSideContentType(0);\r\n      } else if (apiConfig.method === \"put\") {\r\n        // 수정\r\n        setIsEditMode(false);\r\n        fetchDetail();\r\n      }\r\n      setRemoteApiConfig({\r\n        method: \"get\",\r\n        url: \"/notice/list?page=1\",\r\n        headers: {\r\n          sessionId: cookies.sessionId\r\n        }\r\n      });\r\n    } else {\r\n      if (error) {\r\n        setModalMessage(error);\r\n        setIsOpenModal(true);\r\n      }\r\n    }\r\n  }, [response, error]);\r\n\r\n  const onClickEditModeOn = () => {\r\n    setEditTitle(title);\r\n    setEditContent(content);\r\n    setIsEditMode(true);\r\n  };\r\n\r\n  const onChangeText = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (inputRef.current === e.target) {\r\n      setEditTitle(e.target.value);\r\n    }\r\n\r\n    if (textareaRef.current === e.target) {\r\n      setEditContent(e.target.value);\r\n    }\r\n  };\r\n\r\n  const modules = {\r\n    toolbar: [\r\n      [{ header: [] }],\r\n      [\"bold\", \"italic\", \"underline\", \"strike\", \"code-block\"],\r\n      [{ list: \"ordered\" }, { list: \"bullet\" }],\r\n      [\"link\", \"image\"],\r\n      [{ align: [] }, { color: [] }, { background: [] }],\r\n      [\"clean\"]\r\n    ]\r\n  };\r\n\r\n  // 수정\r\n  const updateNotice = (e) => {\r\n    e.preventDefault();\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"id\", id);\r\n    formData.append(\"title\", editTitle);\r\n    formData.append(\"content\", editContent);\r\n    if (editImages.length > 0) {\r\n      editImages?.forEach((image) => {\r\n        formData.append(\"files\", image);\r\n      });\r\n    }\r\n\r\n    setApiConfig({\r\n      method: \"put\",\r\n      url: `/notice/${id}`,\r\n      headers: {\r\n        sessionId: cookies.sessionId,\r\n        \"Content-Type\": \"multipart/form-data\"\r\n      },\r\n      data: formData\r\n    });\r\n  };\r\n\r\n  // 서버에서 받은 데이터의 이미지 url을 img src 속성에 적용 (수정 예정)\r\n  useEffect(() => {\r\n    if (contentRef.current) {\r\n      const imgElements = contentRef.current.querySelectorAll(\"img\");\r\n      imgElements.forEach((img, index) => {\r\n        if (files !== null && files[index]) {\r\n          img.src = files[index];\r\n        }\r\n      });\r\n    }\r\n  }, [content, files]);\r\n\r\n  const renderDetailView = () => (\r\n    <>\r\n      <HeaderTextWrapper dir=\"col\">\r\n        <div>\r\n          <TitleText>{title}</TitleText>\r\n        </div>\r\n        <SubTextWrapper col=\"center\">\r\n          <div>\r\n            <ClockIcon icon={faClock} />\r\n            <SubText>{formatDateToTimestamp(created_at)}</SubText>\r\n          </div>\r\n          <div>\r\n            <EyeIcon icon={faEye} />\r\n            <SubText>{views}</SubText>\r\n          </div>\r\n        </SubTextWrapper>\r\n      </HeaderTextWrapper>\r\n      <ContentWrapper>\r\n        <ReactQuill\r\n          style={{ height: \"32rem\" }}\r\n          theme=\"snow\"\r\n          value={content}\r\n          readOnly={true}\r\n          modules={{ toolbar: false }}\r\n        />\r\n      </ContentWrapper>\r\n      <ButtonWrapper row=\"end\">\r\n        <Button type=\"smallTransparent\" message=\"수정\" onClick={onClickEditModeOn} />\r\n        <Button type=\"smallGray\" message=\"삭제\" onClick={onClickDeleteItem} />\r\n      </ButtonWrapper>\r\n    </>\r\n  );\r\n\r\n  const renderUpdateView = () => (\r\n    <>\r\n      <HeaderTextWrapper dir=\"col\">\r\n        <div>\r\n          <TitleInput\r\n            type=\"text\"\r\n            value={editTitle}\r\n            maxLength=\"100\"\r\n            onChange={(e) => onChangeText(e)}\r\n            ref={inputRef}\r\n          />\r\n        </div>\r\n        <SubTextWrapper col=\"center\">\r\n          <div>\r\n            <ClockIcon icon={faClock} />\r\n            <SubText>{formatDateToTimestamp(created_at)}</SubText>\r\n          </div>\r\n          <div>\r\n            <EyeIcon icon={faEye} />\r\n            <SubText>{views}</SubText>\r\n          </div>\r\n        </SubTextWrapper>\r\n      </HeaderTextWrapper>\r\n      <ContentWrapper>\r\n        <EditorWrapper>\r\n          <ReactQuill\r\n            style={{ height: \"29rem\" }}\r\n            theme=\"snow\"\r\n            value={editContent}\r\n            modules={modules}\r\n            onChange={(_content) => setEditContent(_content)}\r\n          />\r\n        </EditorWrapper>\r\n      </ContentWrapper>\r\n      <ButtonWrapper row=\"end\">\r\n        <Button type=\"smallTransparent\" message=\"저장\" onClick={(e) => updateNotice(e)} />\r\n      </ButtonWrapper>\r\n    </>\r\n  );\r\n\r\n  // 삭제\r\n  const onClickDeleteItem = () => {\r\n    setModalMessage(\"게시물을 삭제하시겠습니까?\");\r\n    setIsOpenModal(true);\r\n  };\r\n\r\n  const onDeleteNotice = () => {\r\n    if (modalMessage.includes(\"삭제\")) {\r\n      setApiConfig({\r\n        method: \"delete\",\r\n        url: `/notice/${id}`,\r\n        headers: {\r\n          sessionId: cookies.sessionId\r\n        }\r\n      });\r\n    }\r\n    setIsOpenModal(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <center>Loading...</center>\r\n      ) : (\r\n        <>\r\n          <DetailWrapper key={id}>\r\n            {isEditMode ? renderUpdateView() : renderDetailView()}\r\n          </DetailWrapper>\r\n          {isOpenModal && (\r\n            <Modal\r\n              setIsOpen={setIsOpenModal}\r\n              onClick={error ? () => setIsOpenModal(false) : onDeleteNotice}\r\n              hasButton={true}\r\n            >\r\n              {modalMessage}\r\n            </Modal>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nNoticeManagementDetail.propTypes = {\r\n  data: PropTypes.object,\r\n  isEditMode: PropTypes.bool,\r\n  setIsEditMode: PropTypes.func,\r\n  fetchDetail: PropTypes.func\r\n};\r\n\r\nconst DetailWrapper = styled.div`\r\n  margin: 0 14px;\r\n`;\r\n\r\nconst HeaderTextWrapper = styled(FlexBox)`\r\n  margin: 54px 0 24px;\r\n`;\r\n\r\nconst TitleText = styled.span`\r\n  font-size: 1.5rem;\r\n  font-weight: 700;\r\n`;\r\n\r\nconst TitleInput = styled(Input)`\r\n  margin-top: 0;\r\n  padding: 0;\r\n  background-color: transparent;\r\n  border: 0;\r\n  font-size: 1.5rem;\r\n  height: 2.14rem;\r\n`;\r\n\r\nconst SubTextWrapper = styled(FlexBox)`\r\n  margin: 8px 0;\r\n\r\n  & > * + * {\r\n    margin-left: 30px;\r\n  }\r\n`;\r\n\r\nconst SubText = styled.span`\r\n  margin-left: 9px;\r\n  font-size: ${({ theme }) => theme.fontSize.xxxs};\r\n  color: #a7a7a7;\r\n`;\r\n\r\nconst ClockIcon = styled(FontAwesomeIcon)`\r\n  font-size: ${({ theme }) => theme.fontSize.xxxs};\r\n  color: #a7a7a7;\r\n`;\r\n\r\nconst EyeIcon = styled(FontAwesomeIcon)`\r\n  font-size: ${({ theme }) => theme.fontSize.xxxs};\r\n  color: #a7a7a7;\r\n`;\r\n\r\nconst ContentWrapper = styled.div`\r\n  width: 100%;\r\n  height: 32rem;\r\n\r\n  & > .quill > .ql-container.ql-snow {\r\n    border: 0;\r\n  }\r\n`;\r\n\r\nconst ButtonWrapper = styled(FlexBox)`\r\n  position: absolute;\r\n  right: calc(18% - 8px);\r\n  margin-top: 2.5rem;\r\n  & > * + * {\r\n    margin-left: 10px;\r\n  }\r\n`;\r\n\r\nexport default NoticeManagementDetail;\r\n","import { useState, useEffect } from \"react\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { useRecoilState, useSetRecoilState } from \"recoil\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport { isActiveSideContentTypeState } from \"@/recoil/displayState\";\r\nimport { itemIdState, selectedBoardItemIdState } from \"@/recoil/boardState\";\r\nimport { FlexBox as ListWrapper } from \"@/styles/FlexStyle\";\r\nimport { Box } from \"../../../components/Game/Shared/Layout\";\r\nimport { ContentWrapper, WideContent, Main } from \"@/styles/CommonStyle\";\r\nimport Header from \"@/components/Web/Shared/Layout/Header\";\r\nimport NoticeManagementList from \"@/components/Web/Admin/NoticeManagementList\";\r\nimport NoticeManagementDetail from \"@/components/Web/Admin/NoticeManagementDetail\";\r\nimport NoticeManagementCreate from \"@/components/Web/Admin/NoticeManagementCreate\";\r\nimport useAxios from \"@/hooks/useAxios\";\r\n\r\nconst NoticeManagement = () => {\r\n  const [cookies] = useCookies([\"sessionId\"]);\r\n  const navigate = useNavigate();\r\n  // 0: not active, 1: Detail, 2: Create\r\n  const [isAcitveSideContentType, setIsActiveSideContentType] = useRecoilState(\r\n    isActiveSideContentTypeState\r\n  );\r\n  const [itemId, setItemId] = useRecoilState(itemIdState);\r\n  const setSelectedBoardItemId = useSetRecoilState(selectedBoardItemIdState);\r\n  const [isEditMode, setIsEditMode] = useState(false);\r\n  const [detailData, setDetailData] = useState({});\r\n  const [apiConfig, setApiConfig] = useState(null);\r\n  const { response, error, loading, fetchData } = useAxios(apiConfig, false);\r\n\r\n  useEffect(() => {\r\n    if (!cookies.sessionId) {\r\n      navigate(\"/\");\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (itemId === null) {\r\n      setIsActiveSideContentType(0);\r\n    } else {\r\n      setIsActiveSideContentType(1);\r\n      setApiConfig({\r\n        method: \"get\",\r\n        url: `/notice/${itemId}`,\r\n        headers: {\r\n          sessionId: cookies.sessionId\r\n        }\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (apiConfig !== null) {\r\n      fetchData();\r\n    }\r\n  }, [apiConfig]);\r\n\r\n  // 게시물 상세 조회\r\n  useEffect(() => {\r\n    if (response !== null) {\r\n      setIsEditMode(false);\r\n      setDetailData(response.result);\r\n      setIsActiveSideContentType(1);\r\n      setItemId(response.result.id);\r\n    }\r\n  }, [response]);\r\n\r\n  const onDetailOpen = (id) => {\r\n    setApiConfig({\r\n      method: \"get\",\r\n      url: `/notice/${id}`,\r\n      headers: {\r\n        sessionId: cookies.sessionId\r\n      }\r\n    });\r\n  };\r\n\r\n  const onCreateOpen = () => {\r\n    setSelectedBoardItemId(null);\r\n    setIsActiveSideContentType(2);\r\n  };\r\n\r\n  const renderSideContent = () => {\r\n    switch (isAcitveSideContentType) {\r\n      case 1:\r\n        return (\r\n          <Box>\r\n            <NoticeManagementDetail\r\n              data={detailData}\r\n              isEditMode={isEditMode}\r\n              setIsEditMode={setIsEditMode}\r\n              fetchDetail={fetchData}\r\n            />\r\n          </Box>\r\n        );\r\n      case 2:\r\n        return (\r\n          <Box>\r\n            <NoticeManagementCreate />\r\n          </Box>\r\n        );\r\n      case 0:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ContentWrapper row=\"center\" col=\"center\">\r\n      <WideContent width=\"82rem\" dir=\"col\">\r\n        <Header type=\"admin-detail\" />\r\n        <Main type=\"admin\" row=\"between\">\r\n          <ListWrapper row=\"between\">\r\n            <NoticeManagementList\r\n              onDetailOpen={onDetailOpen}\r\n              onCreateOpen={onCreateOpen}\r\n            />\r\n            {renderSideContent()}\r\n          </ListWrapper>\r\n        </Main>\r\n      </WideContent>\r\n    </ContentWrapper>\r\n  );\r\n};\r\n\r\nexport default NoticeManagement;\r\n","import { atom } from \"recoil\";\r\n\r\n// 0: not active, 1: Detail, 2: Create\r\nexport const isActiveSideContentTypeState = atom({\r\n  key: \"isActiveSideContentTypeState\",\r\n  default: 0\r\n});\r\n","export const formatDateToTimestamp = (dateString) => {\r\n  const date = new Date(dateString);\r\n  const yyyy = date.getFullYear();\r\n  const MM = String(date.getMonth() + 1).padStart(2, \"0\");\r\n  const dd = String(date.getDate()).padStart(2, \"0\");\r\n  const hh = String(date.getHours()).padStart(2, \"0\");\r\n  const mm = String(date.getMinutes()).padStart(2, \"0\");\r\n  const ss = String(date.getSeconds()).padStart(2, \"0\");\r\n\r\n  return `${yyyy}-${MM}-${dd} ${hh}:${mm}:${ss}`;\r\n};\r\n"],"names":["NoticeManagementList","type","onDetailOpen","onCreateOpen","remoteApiConfig","useRecoilValue","remoteApiConfigState","cookies","useCookies","listData","setListData","useState","currPage","setCurrPage","lastPageIdx","setLastPageIdx","searchKeyword","setSearchKeyword","apiConfig","setApiConfig","method","url","headers","sessionId","response","loading","error","fetchData","useAxios","useEffect","includes","list","map","content","created_at","views","rest","split","lastPage","POST_SEARCH_WORD_REGEX","test","_jsx","_Fragment","children","_jsxs","Box","HeaderWrapper","row","col","ManagementTitle","title","SearchBarWrapper","marginTop","SearchBar","searchType","ManagementList","isHome","data","onSideOpen","Pagination","ButtonWrapper","CreateButton","onClick","propTypes","PropTypes","styled","FlexBox","div","marginRight","Button","attrs","message","keywordRef","useRef","sendKeyword","e","preventDefault","current","value","target","SearchInputWrapper","field","SearchTypeInput","readOnly","SearchKeywordInput","placeholder","onKeyDown","key","ref","SearchButton","SearchIcon","icon","faMagnifyingGlass","theme","colors","gray200","props","height","TransparentInput","input","fontSize","xxxs","button","FontAwesomeIcon","main","background","text","hover","l","width","gray100","gray500","gray600","s","gray400","sub","SmallButton","SmallDarkButton","MiniButton","xxxxs","success","Label","label","Input","NoticeCreateForm","form","TitleInput","xxs","EditorWrapper","SaveButton","NoticeManagementCreate","setIsActiveSideContentType","useSetRecoilState","isActiveSideContentTypeState","setRemoteApiConfig","setTitle","setContent","images","setImages","modalMessage","setModalMessage","isModalOpen","setIsModalOpen","editorRef","handleImage","editor","getEditor","container","querySelector","document","createElement","setAttribute","classList","add","onchange","files","file","size","querySelectorAll","length","fr","FileReader","onload","range","getSelection","insertEmbed","index","result","makeUnprivilegedEditor","getLength","scrollIntoView","setSelection","prevImages","concat","readAsDataURL","click","getModule","addHandler","handleImageDelete","quillImages","getContents","ops","forEach","op","insert","image","push","filter","on","off","Modal","hasButton","setIsOpen","name","hasLabel","maxLength","onChange","ReactQuill","style","modules","toolbar","header","align","color","_content","_contentWithEmptySrc","replace","match","formData","FormData","append","POST_TITLE_REGEX","noticeSubmitHandler","NoticeManagementDetail","isEditMode","setIsEditMode","fetchDetail","id","editTitle","setEditTitle","editContent","setEditContent","editImages","setEditImages","isOpenModal","setIsOpenModal","contentRef","inputRef","textareaRef","onClickEditModeOn","img","src","onClickDeleteItem","DetailWrapper","HeaderTextWrapper","dir","onChangeText","SubTextWrapper","ClockIcon","faClock","SubText","formatDateToTimestamp","EyeIcon","faEye","ContentWrapper","updateNotice","TitleText","onDeleteNotice","span","NoticeManagement","navigate","useNavigate","isAcitveSideContentType","useRecoilState","itemId","setItemId","itemIdState","setSelectedBoardItemId","selectedBoardItemIdState","detailData","setDetailData","WideContent","Header","Main","ListWrapper","renderSideContent","atom","default","dateString","date","Date","yyyy","getFullYear","MM","String","getMonth","padStart","dd","getDate","hh","getHours","mm","getMinutes","ss","getSeconds"],"sourceRoot":""}