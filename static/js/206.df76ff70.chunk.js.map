{"version":3,"file":"static/js/206.df76ff70.chunk.js","mappings":"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","sources":["components/Web/Shared/Board/BoardTitle.jsx","components/Web/Support/NoticeDetailContainer.jsx","pages/Web/Support/NoticeDetail.jsx","styles/CommonStyle.jsx","services/date.js"],"sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n// ===== style ======\r\nconst BoardTitleWrapper = styled.div`\r\n  width: ${(props) => props.width || \"fit-content\"};\r\n  height: ${(props) => props.height || \"fit-content\"};\r\n`;\r\n\r\nconst BoardTitleText = styled.p`\r\n  color: ${(props) => props.color || \"#828282\"};\r\n  font-family: \"Gugi\";\r\n  font-size: ${(props) => props.fontSize || \"30px\"};\r\n  font-weight: ${(props) => props.fontWeight || \"500\"};\r\n  margin: 53px 0px 0 64px;\r\n`;\r\n\r\n// ===== component ======\r\nconst BoardTitle = ({ type }) => {\r\n  const getBoardTitle = () => {\r\n    switch (type) {\r\n      case \"notice\":\r\n        return \"공지사항\";\r\n      case \"inquiry\":\r\n        return \"문의사항\";\r\n      case \"create\":\r\n        return \"문의 등록\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <BoardTitleWrapper>\r\n      <BoardTitleText>{getBoardTitle()}</BoardTitleText>\r\n    </BoardTitleWrapper>\r\n  );\r\n};\r\n\r\nBoardTitle.propTypes = {\r\n  type: PropTypes.string\r\n};\r\n\r\nexport default BoardTitle;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { FlexBox } from \"@/styles/FlexStyle\";\r\n\r\nimport { formatDateToTimestamp } from \"@/services/date\";\r\nimport createdAtIcon from \"@/assets/images/clock.png\";\r\nimport viewsIcon from \"@/assets/images/views.png\";\r\n\r\n// ===== hooks import =====\r\nimport useAxios from \"@/hooks/useAxios\";\r\n\r\n// ===== components import =====\r\nimport BoardTitle from \"@/components/Web/Shared/Board/BoardTitle\";\r\nimport Button from \"@/components/Web/Shared/Buttons/Button\";\r\n\r\n// ===== style =====\r\nconst NoticeDeatalFlexBox = styled(FlexBox)`\r\n  width: ${(props) => props.width || \"100%\"};\r\n  height: ${(props) => props.height || \"fit-content\"};\r\n  border-top: ${(props) => props.borderTop || null};\r\n  border-bottom: ${(props) => props.borderBottom || null};\r\n  margin-top: ${(props) => props.marginTop || null};\r\n  margin-bottom: ${(props) => props.marginBottom || null};\r\n`;\r\n\r\nconst NoticeDetailBox = styled.div`\r\n  width: ${(props) => props.width || \"100%\"};\r\n  height: ${(props) => props.height || \"fit-content\"};\r\n  border-top: ${(props) => props.borderTop || null};\r\n  border-bottom: ${(props) => props.borderBottom || null};\r\n  margin-top: ${(props) => props.marginTop || null};\r\n  margin-bottom: ${(props) => props.marginBottom || null};\r\n  margin-left: ${(props) => props.marginLeft || null};\r\n  margin-right: ${(props) => props.marginRight || null};\r\n`;\r\n\r\nconst NoticeDetailText = styled.p`\r\n  color: ${(props) => props.color || \"#32250F\"};\r\n  font-size: ${(props) => props.fontSize || \"32px\"};\r\n  margin: 0;\r\n`;\r\n\r\nconst NoticeDetailImage = styled.img`\r\n  width: ${(props) => props.width || \"24px\"};\r\n  height: ${(props) => props.height || \"24px\"};\r\n  margin-right: ${(props) => props.marginRight || null};\r\n`;\r\n\r\n// ===== component =====\r\nconst NoticeDetailContainer = () => {\r\n  // === params ===\r\n  const { noticeId } = useParams();\r\n\r\n  // === state ===\r\n  const [detailData, setDetailData] = useState([]);\r\n  // (api 관련)\r\n  const [apiConfig, setApiConfig] = useState({\r\n    method: \"get\",\r\n    url: `/notice/${noticeId}`\r\n  });\r\n  const { response, error, loading, fetchData } = useAxios(apiConfig);\r\n\r\n  // === navigate ===\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (apiConfig !== null) {\r\n      fetchData();\r\n    }\r\n  }, [apiConfig]);\r\n\r\n  useEffect(() => {\r\n    if (response !== null) {\r\n      setDetailData(response.result);\r\n    } else {\r\n      setDetailData([]);\r\n    }\r\n  }, [response, error]);\r\n\r\n  const handleMoveList = () => {\r\n    navigate(`/notice/list`);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <NoticeDetailBox width=\"75rem\" marginLeft=\"auto\" marginRight=\"auto\">\r\n        <BoardTitle type=\"notice\" />\r\n        <NoticeDetailBox borderTop=\"5px solid #C2C2C2\" borderBottom=\"5px solid #C2C2C2\">\r\n          {/* 공지 헤더 */}\r\n          <NoticeDeatalFlexBox dir=\"col\">\r\n            {/* 공지 제목 */}\r\n            <NoticeDetailBox marginTop=\"15px\" marginBottom=\"10px\">\r\n              <NoticeDetailText>{detailData.title}</NoticeDetailText>\r\n            </NoticeDetailBox>\r\n\r\n            {/* 공지 관련 정보 */}\r\n            <NoticeDeatalFlexBox width=\"400px\" marginBottom=\"15px\">\r\n              {/* 게시 날짜 */}\r\n              <NoticeDeatalFlexBox col=\"center\">\r\n                <NoticeDetailImage src={createdAtIcon} marginRight=\"10px\" />\r\n                <NoticeDetailText color=\"#A7A7A7\" fontSize=\"20px\">\r\n                  {formatDateToTimestamp(detailData.created_at)}\r\n                </NoticeDetailText>\r\n              </NoticeDeatalFlexBox>\r\n\r\n              {/* 조회수 */}\r\n              <NoticeDeatalFlexBox col=\"center\">\r\n                <NoticeDetailImage src={viewsIcon} marginRight=\"10px\" />\r\n                <NoticeDetailText color=\"#A7A7A7\" fontSize=\"20px\">\r\n                  {detailData.views}\r\n                </NoticeDetailText>\r\n              </NoticeDeatalFlexBox>\r\n            </NoticeDeatalFlexBox>\r\n          </NoticeDeatalFlexBox>\r\n\r\n          {/* 공지 본문 */}\r\n          <NoticeDeatalFlexBox\r\n            borderTop=\"1px solid #C2C2C2\"\r\n            dir=\"col\"\r\n            marginBottom=\"10px\"\r\n          >\r\n            <NoticeDetailBox dir=\"col\" height=\"390px\" marginTop=\"15px\">\r\n              <div>{detailData.content}</div>\r\n              {detailData.files && (\r\n                <>\r\n                  {detailData.files?.map((file, index) => (\r\n                    <img key={index} src={file} />\r\n                  ))}\r\n                </>\r\n              )}\r\n            </NoticeDetailBox>\r\n            <NoticeDeatalFlexBox row=\"end\">\r\n              <Button type=\"smallGray\" message=\"목록\" onClick={handleMoveList} />\r\n            </NoticeDeatalFlexBox>\r\n          </NoticeDeatalFlexBox>\r\n        </NoticeDetailBox>\r\n      </NoticeDetailBox>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NoticeDetailContainer;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\n// ===== style import =====\r\nimport { ContentWrapper, WideContent, Main } from \"@/styles/CommonStyle\";\r\n\r\n// ===== components import =====\r\nimport Header from \"@/components/Web/Shared/Layout/Header\";\r\nimport NoticeDetailContainer from \"@/components/Web/Support/NoticeDetailContainer\";\r\n\r\n// ===== style =====\r\nconst NoticeDetailMain = styled(Main)`\r\n  background-color: ${({ theme }) => theme.colors.content};\r\n  height: 100vh;\r\n`;\r\n\r\n// ===== component =====\r\nconst NoticeDetail = () => {\r\n  return (\r\n    <ContentWrapper row=\"center\" col=\"center\">\r\n      <Header type=\"detail\" />\r\n      <WideContent dir=\"col\" width=\"100%\">\r\n        <NoticeDetailMain>\r\n          <NoticeDetailContainer />\r\n        </NoticeDetailMain>\r\n      </WideContent>\r\n    </ContentWrapper>\r\n  );\r\n};\r\n\r\nexport default NoticeDetail;\r\n","import styled, { keyframes } from \"styled-components\";\r\nimport { FlexBox } from \"./FlexStyle\";\r\n\r\nexport const fadeIn = keyframes`\r\n  from { opacity: 0;}\r\n  to {opacity: 1;}\r\n`;\r\n\r\nexport const blink = keyframes`\r\n  50% {\r\n      opacity: 0;\r\n  }\r\n`;\r\n\r\n// 숨겨진 요소\r\nexport const Hidden = styled.div`\r\n  display: none;\r\n`;\r\n\r\n// 웹 페이지 그라데이션 영역\r\nexport const Gradation = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 42.25rem;\r\n  background-image: linear-gradient(#dbe1ed, #ffffff00);\r\n  z-index: -1;\r\n`;\r\n\r\n// 콘텐츠 영역 감싸는 태그\r\nexport const ContentWrapper = styled(FlexBox)`\r\n  animation: ${fadeIn} 0.5s ease-in-out;\r\n`;\r\n\r\n// 넓은 콘텐츠 영역 (width: 1200px)\r\nexport const WideContent = styled(FlexBox)`\r\n  width: ${(props) => props.width || \"75rem\"};\r\n  height: 100vh;\r\n`;\r\n\r\n// 좁은 콘텐츠 영역 (width: 652px)\r\nexport const NarrowContent = styled(FlexBox)`\r\n  width: 36.75rem; // 기존 40.75rem\r\n  height: ${(props) => props.height || \"fit-content\"};\r\n`;\r\n\r\n// 페이지의 핵심 콘텐츠\r\nexport const Main = styled.main`\r\n  width: 100%;\r\n  margin-top: ${({ type }) =>\r\n    type === \"big\" ? \"10rem\" : type !== \"admin\" ? \"7.5rem\" : \"6.5rem\"};\r\n`;\r\n\r\nexport const Box = styled(FlexBox)`\r\n  width: 100%;\r\n  max-width: 100%;\r\n  height: 43.25rem;\r\n  padding: 10px;\r\n  background-color: ${({ bgColor, theme }) => bgColor || theme.colors.content};\r\n`;\r\n\r\n// 작은 요소들을 감싸는 요소\r\nexport const SmallWrapper = styled(FlexBox)`\r\n  flex-basis: ${(props) => props.width || auto};\r\n  align-self: ${(props) => props.align || auto};\r\n`;\r\n","export const formatDateToTimestamp = (dateString) => {\r\n  const date = new Date(dateString);\r\n  const yyyy = date.getFullYear();\r\n  const MM = String(date.getMonth() + 1).padStart(2, \"0\");\r\n  const dd = String(date.getDate()).padStart(2, \"0\");\r\n  const hh = String(date.getHours()).padStart(2, \"0\");\r\n  const mm = String(date.getMinutes()).padStart(2, \"0\");\r\n  const ss = String(date.getSeconds()).padStart(2, \"0\");\r\n\r\n  return `${yyyy}-${MM}-${dd} ${hh}:${mm}:${ss}`;\r\n};\r\n"],"names":["BoardTitleWrapper","styled","div","props","width","height","BoardTitleText","p","color","fontSize","fontWeight","BoardTitle","type","_jsx","children","getBoardTitle","propTypes","PropTypes","NoticeDeatalFlexBox","FlexBox","borderTop","borderBottom","marginTop","marginBottom","NoticeDetailBox","marginLeft","marginRight","NoticeDetailText","NoticeDetailImage","img","NoticeDetailContainer","noticeId","useParams","detailData","setDetailData","useState","apiConfig","setApiConfig","method","url","response","error","loading","fetchData","useAxios","navigate","useNavigate","useEffect","result","_Fragment","_jsxs","dir","title","col","src","createdAtIcon","formatDateToTimestamp","created_at","viewsIcon","views","content","files","map","file","index","row","Button","message","onClick","handleMoveList","NoticeDetailMain","Main","theme","colors","NoticeDetail","ContentWrapper","Header","WideContent","fadeIn","keyframes","blink","Gradation","NarrowContent","main","Box","bgColor","auto","align","dateString","date","Date","yyyy","getFullYear","MM","String","getMonth","padStart","dd","getDate","hh","getHours","mm","getMinutes","ss","getSeconds","concat"],"sourceRoot":""}