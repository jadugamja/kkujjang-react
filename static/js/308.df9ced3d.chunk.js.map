{"version":3,"file":"static/js/308.df9ced3d.chunk.js","mappings":"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","sources":["components/Game/Shared/Layout.jsx","components/Game/Shared/ProfileActiveToggle.jsx","components/Web/Admin/ManagementList.jsx","components/Web/Admin/ManagementTitle.jsx","components/Web/Shared/Board/Pagination.jsx","components/Web/Shared/Modal/WebModalStyle.jsx","components/Web/Shared/Modal/WebModal.jsx","styles/CommonStyle.jsx","recoil/boardState.js","services/regexp.js"],"sourcesContent":["import { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { FlexBox } from \"@/styles/FlexStyle\";\r\n\r\nexport const SideContentWrapper = styled(FlexBox)`\r\n  width: 16.5rem;\r\n  height: 100%;\r\n`;\r\n\r\nexport const MainContentWrapper = styled(FlexBox)`\r\n  max-width: 100%;\r\n  flex-grow: 1;\r\n`;\r\n\r\nexport const Box = styled.div`\r\n  width: ${({ type }) => (type === \"home\" ? \"28rem\" : \"40.5rem\")};\r\n  height: ${({ type }) => (type === \"home\" ? \"43.6rem\" : \"49.6rem\")};\r\n  padding: 10px 22px;\r\n  background-color: #fff;\r\n  border-radius: ${({ type }) => (type === \"home\" ? \"25px\" : \"10px\")};\r\n  box-shadow: 0 0 7px 0 rgba(0, 0, 0, 0.25);\r\n  overflow-y: ${({ overflowY }) => overflowY};\r\n`;\r\n\r\nexport const Main = styled.main`\r\n  position: ${({ position }) => position};\r\n  top: ${({ top }) => top};\r\n  bottom: ${({ bottom }) => bottom};\r\n  left: ${({ left }) => left};\r\n  right: ${({ right }) => right};\r\n  max-width: ${({ maxWidth }) => maxWidth};\r\n  width: ${({ width }) => width};\r\n  height: ${({ height }) => height};\r\n  margin: ${({ margin }) => margin};\r\n  padding: ${({ padding }) => padding};\r\n  background-color: ${({ bgColor }) => bgColor};\r\n  border-top: ${({ borderTop }) => borderTop};\r\n  border-right: ${({ borderRight }) => borderRight};\r\n  border-bottom: ${({ borderBottom }) => borderBottom};\r\n  border-left: ${({ borderLeft }) => borderLeft};\r\n  border-radius: ${({ borderRadius }) => borderRadius};\r\n  z-index: ${({ zIndex }) => zIndex};\r\n`;\r\n\r\nexport const Wrapper = styled(FlexBox)`\r\n  position: ${({ position }) => position};\r\n  top: ${({ top }) => top};\r\n  bottom: ${({ bottom }) => bottom};\r\n  left: ${({ left }) => left};\r\n  right: ${({ right }) => right};\r\n  max-width: ${({ maxWidth }) => maxWidth};\r\n  width: ${({ width }) => width};\r\n  height: ${({ height }) => height};\r\n  margin: ${({ margin }) => margin};\r\n  padding: ${({ padding }) => padding};\r\n  background-color: ${({ bgColor }) => bgColor};\r\n  border-top: ${({ borderTop }) => borderTop};\r\n  border-right: ${({ borderRight }) => borderRight};\r\n  border-bottom: ${({ borderBottom }) => borderBottom};\r\n  border-left: ${({ borderLeft }) => borderLeft};\r\n  border-radius: ${({ borderRadius }) => borderRadius};\r\n  z-index: ${({ zIndex }) => zIndex};\r\n`;\r\n\r\nexport const SpacingWrapper = styled(FlexBox)`\r\n  & > * + * {\r\n    margin-top: ${({ spacingY }) => spacingY && spacingY};\r\n    margin-left: ${({ spacingX }) => spacingX && spacingX};\r\n  }\r\n`;\r\n\r\nexport const BodyWrapper = styled(FlexBox)`\r\n  width: 100%;\r\n  height: 100%;\r\n  border: 1px solid #7d7d7d;\r\n`;\r\n\r\nexport const UpperWrapper = styled(FlexBox)`\r\n  height: 100%;\r\n  max-height: 26.65rem;\r\n  padding: 3px 5px;\r\n  background-color: ${({ type }) => (type === \"play\" ? \"#889E7D\" : \"#f3f3f3\")};\r\n`;\r\n\r\nexport const Span = styled.span`\r\n  margin: ${({ margin }) => margin || \"0\"};\r\n  font-family: ${({ font }) => font || \"Gugi\"};\r\n  font-size: ${({ fontSize }) => fontSize || \"21px\"};\r\n  font-weight: ${({ fontWeight }) => fontWeight || \"normal\"};\r\n  color: ${({ color }) => color || \"inherit\"};\r\n`;\r\n\r\nexport const StyledLink = styled(Link)`\r\n  width: ${({ width }) => width};\r\n`;\r\n","import { useState, useEffect } from \"react\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { useRecoilValue, useSetRecoilState } from \"recoil\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nimport useAxios from \"@/hooks/useAxios\";\r\nimport { itemIdState, remoteApiConfigState } from \"@/recoil/boardState\";\r\nimport { FlexBox } from \"@/styles/FlexStyle\";\r\nimport Modal from \"@/components/Web/Shared/Modal/WebModal\";\r\n\r\nconst ProfileActiveToggle = ({ isActive, setIsActive }) => {\r\n  const id = useRecoilValue(itemIdState);\r\n  const setRemoteApiConfig = useSetRecoilState(remoteApiConfigState);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [apiConfig, setApiConfig] = useState(null);\r\n  const { response, error, loading, fetchData } = useAxios(apiConfig, false);\r\n  const [cookies] = useCookies([\"sessionId\"]);\r\n\r\n  useEffect(() => {\r\n    if (apiConfig !== null) {\r\n      fetchData();\r\n    }\r\n  }, [apiConfig]);\r\n\r\n  useEffect(() => {\r\n    if (response !== null) {\r\n      setIsActive(!isActive);\r\n      setRemoteApiConfig({\r\n        method: \"get\",\r\n        url: \"/user/search\",\r\n        headers: {\r\n          sessionId: cookies.sessionId\r\n        }\r\n      });\r\n      setIsModalOpen(false);\r\n    }\r\n  }, [response]);\r\n\r\n  const onActiveToggle = (bannedDays, bannedReason) => {\r\n    if (!isActive) {\r\n      setApiConfig({\r\n        method: \"put\",\r\n        url: \"/ban\",\r\n        headers: { sessionId: cookies.sessionId },\r\n        data: {\r\n          userId: id,\r\n          bannedDays: 0,\r\n          bannedReason: \"reactivate account\"\r\n        }\r\n      });\r\n    } else {\r\n      setApiConfig({\r\n        method: \"put\",\r\n        url: \"/ban\",\r\n        headers: { sessionId: cookies.sessionId },\r\n        data: {\r\n          userId: id,\r\n          bannedDays: bannedDays,\r\n          bannedReason: bannedReason\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isModalOpen && (\r\n        <Modal\r\n          isBan={isActive}\r\n          hasButton={!isActive}\r\n          onClick={onActiveToggle}\r\n          setIsOpen={setIsModalOpen}\r\n        >\r\n          {!isActive && \"계정을 활성화시키겠습니까?\"}\r\n        </Modal>\r\n      )}\r\n      <ActiveToggle\r\n        col=\"center\"\r\n        row={isActive ? \"end\" : \"start\"}\r\n        active={isActive}\r\n        onClick={() => setIsModalOpen(true)}\r\n      >\r\n        <ActiveCircle />\r\n      </ActiveToggle>\r\n    </>\r\n  );\r\n};\r\n\r\nProfileActiveToggle.propTypes = {\r\n  isActive: PropTypes.bool,\r\n  setIsActive: PropTypes.func\r\n};\r\n\r\nconst ActiveToggle = styled(FlexBox)`\r\n  width: 64px;\r\n  height: 36px;\r\n  background-color: ${({ active }) => (active ? \"#fff\" : \"#D9D9D9\")};\r\n  border: 3px solid ${({ active }) => (active ? \"#34E250\" : \"#787878\")};\r\n  border-radius: 40px;\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n\r\n  & > div {\r\n    background-color: ${({ active }) => (active ? \"#34E250\" : \"#787878\")};\r\n    margin-left: ${({ active }) => !active && \"3px\"};\r\n    margin-right: ${({ active }) => active && \"3px\"};\r\n  }\r\n`;\r\n\r\nconst ActiveCircle = styled.div`\r\n  width: 24px;\r\n  height: 24px;\r\n  border-radius: 50%;\r\n`;\r\n\r\nexport default ProfileActiveToggle;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useRecoilState, useSetRecoilState } from \"recoil\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nimport ProfileActiveToggle from \"@/components/Game/Shared/ProfileActiveToggle\";\r\nimport { itemIdState, selectedBoardItemIdState } from \"@/recoil/boardState\";\r\n\r\nconst ManagementList = ({ isHome, title, data = [], onSideOpen }) => {\r\n  const [selectedId, setSelectedId] = useRecoilState(selectedBoardItemIdState);\r\n  const setItemId = useSetRecoilState(itemIdState); // 게시물 id\r\n  const [header, setHeader] = useState([]);\r\n\r\n  const getTitleText = (title) => {\r\n    switch (title) {\r\n      case \"notice\":\r\n        return \"공지사항\";\r\n      case \"inquiry\":\r\n        return \"문의\";\r\n      case \"report\":\r\n        return \"신고\";\r\n      case \"user\":\r\n        return \"사용자 관리\";\r\n    }\r\n  };\r\n\r\n  const getKeyText = (data) => {\r\n    if (!data || data.length === 0) {\r\n      return [];\r\n    }\r\n\r\n    return Object.keys(data[0])\r\n      ?.filter((key) => key !== \"id\")\r\n      ?.map((key, idx) => {\r\n        switch (key) {\r\n          case \"type\":\r\n            return (\r\n              <ThLeft key={idx} width=\"6.5rem\">{`${getTitleText(title)} 유형`}</ThLeft>\r\n            );\r\n          case \"reporteeNickname\":\r\n            return <Th key={idx}>피신고자</Th>;\r\n          case \"types\":\r\n            return (\r\n              <ThLeft key={idx} width={isHome ? \"9.5rem\" : \"10.5rem\"}>{`${getTitleText(\r\n                title\r\n              )} 사유`}</ThLeft>\r\n            );\r\n          case \"reporterNickname\":\r\n            return <Th key={idx}>신고자</Th>;\r\n          case \"title\":\r\n            return (\r\n              <ThLeft key={idx}>\r\n                {title !== \"notice\" ? `${getTitleText(title)} 제목` : \"제목\"}\r\n              </ThLeft>\r\n            );\r\n          case \"createdAt\":\r\n            return (\r\n              <Th key={idx} width=\"7rem\">\r\n                {title === \"report\" ? \"신고일\" : \"작성일\"}\r\n              </Th>\r\n            );\r\n          case \"created_at\":\r\n            return (\r\n              <Th key={idx} width=\"7rem\">\r\n                작성일\r\n              </Th>\r\n            );\r\n          case \"isHandled\":\r\n            return (\r\n              <Th key={idx} width=\"3.3rem\">\r\n                처리 여부\r\n              </Th>\r\n            );\r\n          case \"author\":\r\n            return <Th key={idx}>작성자</Th>;\r\n          case \"views\":\r\n            return (\r\n              <Th key={idx} width=\"5.5rem\">\r\n                조회수\r\n              </Th>\r\n            );\r\n          case \"nickname\":\r\n            return (\r\n              <Th key={idx} width={title === \"user\" && \"6rem\"}>\r\n                닉네임\r\n              </Th>\r\n            );\r\n          case \"username\":\r\n            return (\r\n              <Th key={idx} width={title === \"user\" && \"4.5rem\"}>\r\n                아이디\r\n              </Th>\r\n            );\r\n          case \"needAnswer\":\r\n            return (\r\n              <Th key={idx} width=\"5.5rem\">\r\n                답변 여부\r\n              </Th>\r\n            );\r\n          case \"isBanned\":\r\n            return (\r\n              <Th key={idx} width=\"3.2rem\">\r\n                활성화 여부\r\n              </Th>\r\n            );\r\n          default:\r\n            return <Th key={idx}>Field</Th>;\r\n        }\r\n      });\r\n  };\r\n\r\n  const getTypeText = (type) => {\r\n    if (title === \"inquiry\") {\r\n      switch (type) {\r\n        case 0:\r\n          return \"버그문의\";\r\n        case 1:\r\n          return \"계정문의\";\r\n        case 2:\r\n          return \"서비스문의\";\r\n        case 5:\r\n          return \"단어추가문의\";\r\n        case 99:\r\n          return \"기타문의\";\r\n        default:\r\n          return \"기타\";\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (data.length > 0) {\r\n      setHeader(getKeyText(data));\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <TableWrapper title={title}>\r\n      <Table title={title} isHome={isHome}>\r\n        <thead>\r\n          <ThWrapper fontSize={!isHome ? \"20px\" : \"18px\"}>{header}</ThWrapper>\r\n        </thead>\r\n        <Tbody>\r\n          {data.length === 0 ? (\r\n            <tr>\r\n              <td>검색 결과가 없습니다.</td>\r\n            </tr>\r\n          ) : (\r\n            data?.map((item) => (\r\n              <Tr\r\n                fontSize=\"18px\"\r\n                key={item.id}\r\n                onClick={() => {\r\n                  setItemId(item.id);\r\n                  onSideOpen(item.id);\r\n                  setSelectedId(item.id);\r\n                }}\r\n                isSelected={item.id === selectedId}\r\n              >\r\n                {Object.entries(item)\r\n                  ?.filter(([key]) => key !== \"id\")\r\n                  ?.map(([key, value]) => {\r\n                    if (key === \"type\")\r\n                      return (\r\n                        <React.Fragment key={key}>\r\n                          {title === \"report\" ? (\r\n                            <TdLeft key={key}>{value}</TdLeft>\r\n                          ) : (\r\n                            <TdCenter key={key} fontSize=\"15px\">\r\n                              {getTypeText(value)}\r\n                            </TdCenter>\r\n                          )}\r\n                        </React.Fragment>\r\n                      );\r\n                    if (key === \"types\")\r\n                      return (\r\n                        <TdLeft key={key}>\r\n                          {[\r\n                            ...Object.entries(value)\r\n                              .filter(([_key, _value]) => _value === true)\r\n                              .map(\r\n                                ([_key, _value]) =>\r\n                                  (_key === \"isOffensive\" && \"공격적인 언어 사용\") ||\r\n                                  (_key === \"isCheating\" && \"사기 행위\") ||\r\n                                  (_key === \"isPoorManner\" && \"비매너 행위\")\r\n                              ),\r\n                            value.note && `기타: ${value.note}`\r\n                          ].join(\", \")}\r\n                        </TdLeft>\r\n                      );\r\n                    if (key === \"title\") return <TdLeft key={key}>{value}</TdLeft>;\r\n                    if (key === \"createdAt\")\r\n                      return (\r\n                        <TdCenter key={key}>\r\n                          {title === \"report\" ? value.substr(2, 8) : value.substr(0, 10)}\r\n                        </TdCenter>\r\n                      );\r\n                    if (key === \"created_at\")\r\n                      return <TdCenter key={key}>{value.substr(0, 10)}</TdCenter>;\r\n                    if (key === \"isHandled\")\r\n                      return <TdCenter key={key}>{value ? \"YES\" : \"NO\"}</TdCenter>;\r\n                    if (key === \"username\") return <TdLeft key={key}>{value}</TdLeft>;\r\n                    if (key === \"nickname\") return <TdLeft key={key}>{value}</TdLeft>;\r\n                    if (key === \"isBanned\")\r\n                      return (\r\n                        <TdCenter key={key} paddingLeft={isHome ? \"1rem\" : \"2rem\"}>\r\n                          <ProfileActiveToggle isActive={!value} />\r\n                        </TdCenter>\r\n                      );\r\n                    if (key === \"needAnswer\")\r\n                      return (\r\n                        <TdCenter\r\n                          key={key}\r\n                          style={{\r\n                            color: !value ? \"#32250F\" : \"#FF6C6C\",\r\n                            fontWeight: \"700\"\r\n                          }}\r\n                        >\r\n                          {!value ? \"YES\" : \"NO\"}\r\n                        </TdCenter>\r\n                      );\r\n                    return <TdCenter key={key}>{value}</TdCenter>;\r\n                  })}\r\n              </Tr>\r\n            ))\r\n          )}\r\n        </Tbody>\r\n      </Table>\r\n    </TableWrapper>\r\n  );\r\n};\r\n\r\nManagementList.propTypes = {\r\n  isHome: PropTypes.bool,\r\n  title: PropTypes.string,\r\n  data: PropTypes.array,\r\n  onSideOpen: PropTypes.func,\r\n  isAnswerCompleted: PropTypes.object\r\n};\r\n\r\nconst TableWrapper = styled.div`\r\n  height: 36.7rem;\r\n  width: 100%;\r\n  max-width: 100%;\r\n`;\r\n\r\nconst Table = styled.table`\r\n  table-layout: fixed;\r\n  width: 100%;\r\n`;\r\n\r\nconst ThWrapper = styled.tr`\r\n  width: 100%;\r\n  height: 3.2rem;\r\n  display: table-row;\r\n  border-bottom: 1px solid ${({ theme }) => theme.colors.gray600};\r\n  font-size: ${({ fontSize }) => fontSize || \"18px\"};\r\n`;\r\n\r\nconst Th = styled.th`\r\n  width: ${({ width }) => width};\r\n`;\r\n\r\nconst ThLeft = styled(Th)`\r\n  width: ${({ width }) => width};\r\n  text-align: left;\r\n  padding-left: 16px;\r\n`;\r\n\r\nconst Tbody = styled.tbody`\r\n  font-size: ${({ theme }) => theme.fontSize.xxxs};\r\n`;\r\n\r\nconst Tr = styled.tr`\r\n  height: 3.36rem;\r\n  line-height: 0.75rem;\r\n  border-bottom: 1px solid ${({ theme }) => theme.colors.gray300};\r\n  font-size: ${({ fontSize }) => fontSize || \"16px\"};\r\n  background-color: ${({ isSelected }) =>\r\n    isSelected ? \"rgba(107, 107, 107, 0.1)\" : \"transparent\"};\r\n  font-weight: ${({ isSelected }) => (isSelected ? \"700\" : \"normal\")};\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n    background-color: rgba(107, 107, 107, 0.1);\r\n    font-weight: 700;\r\n  }\r\n`;\r\n\r\nconst Td = styled.td`\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n  text-overflow: ellipsis;\r\n`;\r\n\r\nconst TdLeft = styled(Td)`\r\n  padding-left: 16px;\r\n`;\r\n\r\nconst TdCenter = styled(Td)`\r\n  padding-left: ${({ paddingLeft }) => paddingLeft};\r\n  text-align: center;\r\n  font-size: ${({ fontSize }) => fontSize};\r\n`;\r\n\r\nexport default ManagementList;\r\n","import PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { FlexBox } from \"@/styles/FlexStyle\";\r\nimport { faChevronRight } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst ManagementTitle = ({ type, title }) => {\r\n  const getTitleText = (title) => {\r\n    switch (title) {\r\n      case \"notice\":\r\n        return \"공지\";\r\n      case \"inquiry\":\r\n        return \"문의\";\r\n      case \"report\":\r\n        return \"신고\";\r\n      case \"user\":\r\n        return \"사용자 관리\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <a href={`/admin/${title}`}>\r\n      <TitleWrapper col=\"center\">\r\n        <Title type={type}>{getTitleText(title)}</Title>\r\n        {type === \"home\" && <ArrowRightIcon icon={faChevronRight} />}\r\n      </TitleWrapper>\r\n    </a>\r\n  );\r\n};\r\n\r\nManagementTitle.propTypes = {\r\n  type: PropTypes.string,\r\n  title: PropTypes.string\r\n};\r\n\r\nconst TitleWrapper = styled(FlexBox)`\r\n  height: 4rem;\r\n  padding: 15px 0 4px 0;\r\n  color: #828282;\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  font-family: \"Pretendard Variable\";\r\n  font-size: ${({ theme }) => theme.fontSize.xl};\r\n  font-weight: 700;\r\n  width: ${({ type }) => type !== \"home\" && \"6.25rem\"};\r\n  margin-left: ${({ type }) => (type !== \"home\" ? \"12px\" : \"12px\")};\r\n  margin-right: 12px;\r\n  white-space: ${({ type }) => type !== \"home\" && \"pre-wrap\"};\r\n  color: ${({ type }) => type !== \"home\" && \"#000\"};\r\n`;\r\n\r\nconst ArrowRightIcon = styled(FontAwesomeIcon)`\r\n  font-size: ${({ theme }) => theme.fontSize.xxs};\r\n`;\r\n\r\nexport default ManagementTitle;\r\n","import PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport {\r\n  faAnglesLeft,\r\n  faAngleLeft,\r\n  faAngleRight,\r\n  faAnglesRight\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport FlexBox from \"@/styles/FlexStyle\";\r\n\r\nconst Pagination = ({ currPage = 1, setCurrPage, lastPageIdx = 1 }) => {\r\n  // 페이지 그룹 크기\r\n  const size = 10;\r\n\r\n  // 현재 페이지가 속한 페이지 그룹 (1 ~ 10)\r\n  const currentPageGroup = Math.floor((currPage - 1) / size);\r\n\r\n  // 총 페이지 그룹\r\n  const totalPageGroup = Math.floor((lastPageIdx - 1) / size);\r\n\r\n  // 페이지 그룹의 시작 페이지 번호\r\n  const startPageIdx = currentPageGroup * size + 1;\r\n\r\n  // 현재 페이지에서 나타나는 페이지 목록\r\n  const pageListLength =\r\n    currentPageGroup === totalPageGroup && lastPageIdx % size !== 0\r\n      ? lastPageIdx % size\r\n      : size;\r\n  const pageList = Array.from({ length: pageListLength }, (_, i) => startPageIdx + i);\r\n\r\n  return (\r\n    <PaginationWrapper row=\"center\" col=\"center\">\r\n      <FirstButton icon={faAnglesLeft} onClick={() => setCurrPage(1)}></FirstButton>\r\n      <PrevListButton\r\n        icon={faAngleLeft}\r\n        onClick={() => setCurrPage(Math.max(1, startPageIdx - size))}\r\n      ></PrevListButton>\r\n      <PageList>\r\n        {pageList?.map((page) => (\r\n          <PageItem\r\n            key={page}\r\n            onClick={() => setCurrPage(page)}\r\n            active={currPage === page}\r\n          >\r\n            {page}\r\n          </PageItem>\r\n        ))}\r\n      </PageList>\r\n      <NextListButton\r\n        icon={faAngleRight}\r\n        onClick={() => setCurrPage(Math.min(lastPageIdx, startPageIdx + size))}\r\n      ></NextListButton>\r\n      <LastButton\r\n        icon={faAnglesRight}\r\n        onClick={() => setCurrPage(lastPageIdx)}\r\n      ></LastButton>\r\n    </PaginationWrapper>\r\n  );\r\n};\r\n\r\nPagination.propTypes = {\r\n  currPage: PropTypes.number, // 현재 페이지 번호\r\n  setCurrPage: PropTypes.func, // 현재 페이지 번호 업데이트 함수\r\n  lastPageIdx: PropTypes.number // 마지막 페이지 번호\r\n};\r\n\r\n// 페이지네이션을 감싸는 태그\r\nconst PaginationWrapper = styled(FlexBox)`\r\n  width: 100%;\r\n  height: 30px;\r\n  margin-top: 10px;\r\n`;\r\n\r\n// 페이지네이션에 쓰이는 공통 버튼 스타일\r\nconst PaginationButton = styled(FontAwesomeIcon)`\r\n  margin: 8px;\r\n  font-size: 1rem;\r\n  color: #687587;\r\n  cursor: pointer;\r\n`;\r\n\r\n// 맨 앞으로 가기 버튼\r\nconst FirstButton = styled(PaginationButton)``;\r\n\r\n// 이전 페이지 리스트로 가기 버튼\r\nconst PrevListButton = styled(PaginationButton)``;\r\n\r\n// 다음 페이지 리스트로 가기 버튼\r\nconst NextListButton = styled(PaginationButton)``;\r\n\r\n// 맨 마지막으로 가기 버튼\r\nconst LastButton = styled(PaginationButton)``;\r\n\r\n// 페이지 번호를 감싸는 태그\r\nconst PageList = styled(FlexBox)``;\r\n\r\n// 페이지 번호\r\nconst PageItem = styled.button`\r\n  background-color: transparent;\r\n  font-family: \"Pretendard Variable\";\r\n  width: 32px;\r\n  height: 32px;\r\n  font-size: 16px;\r\n  margin: 0 2px;\r\n  font-weight: ${({ active }) => (active ? \"700\" : \"500\")};\r\n  color: ${({ active }) => (active ? \"#2C333C\" : \"#B0B5BE\")};\r\n  text-decoration: ${({ active }) => (active ? \"underline\" : \"none\")};\r\n\r\n  &:hover {\r\n    background-color: #ffffff90;\r\n    border-radius: 50%;\r\n  }\r\n`;\r\n\r\nexport default Pagination;\r\n","import styled from \"styled-components\";\r\nimport { FlexBox } from \"@/styles/FlexStyle\";\r\n\r\nexport const ModalBackground = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: #000000;\r\n  opacity: 0.7;\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  z-index: 3;\r\n`;\r\n\r\nexport const ModalWrapper = styled.div`\r\n  width: ${(props) => props.width || \"32rem\"};\r\n  height: ${(props) => props.height || \"fit-content\"};\r\n  border-radius: ${(props) => props.borderRadius || null};\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  z-index: 5;\r\n`;\r\n\r\nexport const ModalHeader = styled(FlexBox)`\r\n  width: 100%;\r\n  height: ${(props) => props.height || \"2rem\"};\r\n  background-color: ${({ theme }) => theme.colors.gray200};\r\n  padding-right: 10px;\r\n`;\r\n\r\nexport const ModalContent = styled(FlexBox)`\r\n  width: 100%;\r\n  height: ${(props) => props.height || \"17rem\"};\r\n  background-color: #fefefe;\r\n`;\r\n\r\nexport const ModalMessage = styled.p`\r\n  width: ${(props) => props.width || \"fit-content\"};\r\n  height: ${(props) => props.height || \"fit-content\"};\r\n  font-size: ${({ theme }) => theme.fontSize.m};\r\n  font-weight: 700;\r\n  margin: 0;\r\n  padding-bottom: 50px;\r\n  padding-right: ${(props) => props.paddingRight || null};\r\n`;\r\n\r\nexport const ButtonContainer = styled(FlexBox)`\r\n  width: ${(props) => props.width || \"30rem\"};\r\n  height: ${(props) => props.height || \"fit-content\"};\r\n`;\r\n\r\nexport const BanWrapper = styled.div`\r\n  width: ${(props) => props.width || \"fit-content\"};\r\n  height: ${(props) => props.height || \"fit-content\"};\r\n`;\r\n\r\nexport const BanInputWrapper = styled(FlexBox)`\r\n  width: ${(props) => props.width || \"fit-content\"};\r\n  height: ${(props) => props.height || \"fit-content\"};\r\n`;\r\n\r\nexport const BanInput = styled.input`\r\n  width: ${(props) => props.width || \"20.688rem\"};\r\n  height: ${(props) => props.height || \"3.313rem\"};\r\n  border: 1px solid #ccc;\r\n  padding: 10px;\r\n  font-size: 16px;\r\n`;\r\n\r\nexport const BanTextAreaWrapper = styled(FlexBox)`\r\n  width: ${(props) => props.width || \"fit-content\"};\r\n  height: ${(props) => props.height || \"fit-content\"};\r\n`;\r\n\r\nexport const BanTextArea = styled.textarea`\r\n  width: ${(props) => props.width || \"20.688rem\"};\r\n  height: ${(props) => props.height || \"10.375rem\"};\r\n  border: 1px solid #ccc;\r\n  padding: 10px;\r\n  font-size: 16px;\r\n`;\r\n\r\nexport const BanButtonWrapper = styled(FlexBox)`\r\n  width: ${(props) => props.width || \"26.853rem\"};\r\n  height: ${(props) => props.height || \"fit-content\"};\r\n  padding-top: 20px;\r\n`;\r\n\r\nexport const BanButton = styled.button`\r\n  width: ${(props) => props.width || \"7rem\"};\r\n  height: ${(props) => props.height || \"3.625rem\"};\r\n  background-color: ${({ theme }) => theme.colors.gray100};\r\n  border: 1px solid ${({ theme }) => theme.colors.gray500};\r\n  color: ${({ theme }) => theme.colors.gray600};\r\n  font-size: ${({ theme }) => theme.fontSize.s};\r\n  font-weight: 700;\r\n\r\n  &:hover {\r\n    background-color: ${({ theme }) => theme.colors.gray400};\r\n  }\r\n`;\r\n\r\nexport const ExitMiniCircle = styled.button`\r\n  width: 1.125rem;\r\n  height: 1.125rem;\r\n  background-color: ${({ theme }) => theme.colors.error};\r\n  border-radius: 50%;\r\n\r\n  &:hover {\r\n    background-color: #cf5757;\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport {\r\n  ModalBackground,\r\n  ModalWrapper,\r\n  ModalHeader,\r\n  ExitMiniCircle,\r\n  ModalContent,\r\n  ModalMessage,\r\n  BanWrapper,\r\n  BanInputWrapper,\r\n  BanInput,\r\n  BanTextAreaWrapper,\r\n  BanTextArea,\r\n  BanButtonWrapper,\r\n  BanButton,\r\n  ButtonContainer\r\n} from \"./WebModalStyle\";\r\nimport Button from \"../Buttons/Button.jsx\";\r\nimport { SPECIAL_CHARACTERS_REGEX } from \"@/services/regexp\";\r\nimport { POST_TITLE_REGEX } from \"../../../../services/regexp.js\";\r\n\r\nconst WebModal = ({\r\n  onClick,\r\n  setIsOpen,\r\n  hasButton,\r\n  isBan,\r\n  isWithdrawal = false,\r\n  handleWithdrawal,\r\n  children\r\n}) => {\r\n  const [bannedDays, setBannedDays] = useState(1);\r\n  const [bannedReason, setBannedReason] = useState(\"\");\r\n\r\n  const onValidateChange = (e) => {\r\n    const t = e.target;\r\n    let v = t.value;\r\n\r\n    if (t.type === \"number\") {\r\n      v = parseInt(t.value);\r\n\r\n      if (isNaN(parseInt(v))) {\r\n        return;\r\n      }\r\n\r\n      if (SPECIAL_CHARACTERS_REGEX.test(v)) {\r\n        return;\r\n      }\r\n\r\n      if (v < parseInt(t.min)) {\r\n        v = parseInt(t.min);\r\n      } else if (v > parseInt(t.max)) {\r\n        v = parseInt(t.max);\r\n      }\r\n\r\n      setBannedDays(v);\r\n    } else if (t.type === \"textarea\") {\r\n      if (v.length > t.maxLength || !POST_TITLE_REGEX.test(v)) {\r\n        return;\r\n      }\r\n\r\n      setBannedReason(v);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ModalBackground onClick={() => setIsOpen(false)}></ModalBackground>\r\n      <ModalWrapper>\r\n        <ModalHeader row=\"end\" col=\"center\">\r\n          <ExitMiniCircle onClick={() => setIsOpen(false)}></ExitMiniCircle>\r\n        </ModalHeader>\r\n        <ModalContent dir=\"col\" row=\"center\" col=\"center\" height={isBan && \"25.438rem\"}>\r\n          {hasButton && (\r\n            <>\r\n              <ModalMessage>{children}</ModalMessage>\r\n              {isWithdrawal ? (\r\n                <ButtonContainer row=\"evenly\">\r\n                  <Button\r\n                    key=\"withdrawal\"\r\n                    type=\"modal\"\r\n                    message=\"확인\"\r\n                    onClick={handleWithdrawal}\r\n                  />\r\n                  <Button\r\n                    key=\"exit\"\r\n                    type=\"modal\"\r\n                    message=\"취소\"\r\n                    onClick={() => setIsOpen(false)}\r\n                  />\r\n                </ButtonContainer>\r\n              ) : (\r\n                <Button key=\"confirm\" type=\"modal\" message=\"확인\" onClick={onClick} />\r\n              )}\r\n            </>\r\n          )}\r\n          {isBan && (\r\n            <BanWrapper col=\"center\">\r\n              <BanInputWrapper>\r\n                <ModalMessage paddingRight=\"15px\">밴 일수</ModalMessage>\r\n                <BanInput\r\n                  type=\"number\"\r\n                  min={1}\r\n                  max={200}\r\n                  step={1}\r\n                  value={bannedDays}\r\n                  onChange={onValidateChange}\r\n                />\r\n              </BanInputWrapper>\r\n              <BanTextAreaWrapper>\r\n                <ModalMessage paddingRight=\"15px\">밴 사유</ModalMessage>\r\n                <BanTextArea\r\n                  maxLength={100}\r\n                  value={bannedReason}\r\n                  onChange={onValidateChange}\r\n                />\r\n              </BanTextAreaWrapper>\r\n              <BanButtonWrapper row=\"center\">\r\n                <BanButton\r\n                  onClick={() => onClick(bannedDays, bannedReason)}\r\n                  width=\"11rem\"\r\n                >\r\n                  사용자 비활성화\r\n                </BanButton>\r\n              </BanButtonWrapper>\r\n            </BanWrapper>\r\n          )}\r\n        </ModalContent>\r\n      </ModalWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nWebModal.propTypes = {\r\n  onClick: PropTypes.func,\r\n  setIsOpen: PropTypes.func,\r\n  isBan: PropTypes.bool,\r\n  hasButton: PropTypes.bool,\r\n  isWithdrawal: PropTypes.bool,\r\n  handleWithdrawal: PropTypes.func,\r\n  children: PropTypes.node\r\n};\r\n\r\nexport default WebModal;\r\n","import styled, { keyframes } from \"styled-components\";\r\nimport { FlexBox } from \"./FlexStyle\";\r\n\r\nexport const fadeIn = keyframes`\r\n  from { opacity: 0;}\r\n  to {opacity: 1;}\r\n`;\r\n\r\nexport const blink = keyframes`\r\n  50% {\r\n      opacity: 0;\r\n  }\r\n`;\r\n\r\n// 숨겨진 요소\r\nexport const Hidden = styled.div`\r\n  display: none;\r\n`;\r\n\r\n// 웹 페이지 그라데이션 영역\r\nexport const Gradation = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 42.25rem;\r\n  background-image: linear-gradient(#dbe1ed, #ffffff00);\r\n  z-index: -1;\r\n`;\r\n\r\n// 콘텐츠 영역 감싸는 태그\r\nexport const ContentWrapper = styled(FlexBox)`\r\n  animation: ${fadeIn} 0.5s ease-in-out;\r\n`;\r\n\r\n// 넓은 콘텐츠 영역 (width: 1200px)\r\nexport const WideContent = styled(FlexBox)`\r\n  width: ${(props) => props.width || \"75rem\"};\r\n  height: 100vh;\r\n`;\r\n\r\n// 좁은 콘텐츠 영역 (width: 652px)\r\nexport const NarrowContent = styled(FlexBox)`\r\n  width: 36.75rem; // 기존 40.75rem\r\n  height: ${(props) => props.height || \"fit-content\"};\r\n`;\r\n\r\n// 페이지의 핵심 콘텐츠\r\nexport const Main = styled.main`\r\n  width: 100%;\r\n  margin-top: ${({ type }) =>\r\n    type === \"big\" ? \"10rem\" : type !== \"admin\" ? \"7.5rem\" : \"6.5rem\"};\r\n`;\r\n\r\nexport const Box = styled(FlexBox)`\r\n  width: 100%;\r\n  max-width: 100%;\r\n  height: 43.25rem;\r\n  padding: 10px;\r\n  background-color: ${({ bgColor, theme }) => bgColor || theme.colors.content};\r\n`;\r\n\r\n// 작은 요소들을 감싸는 요소\r\nexport const SmallWrapper = styled(FlexBox)`\r\n  flex-basis: ${(props) => props.width || auto};\r\n  align-self: ${(props) => props.align || auto};\r\n`;\r\n","import { atom } from \"recoil\";\r\n\r\nexport const isAnswerCompletedState = atom({\r\n  key: \"isAnswerCompletedState\",\r\n  default: {} // e.g., { 'item1': true, 'item2': false }\r\n});\r\n\r\n// 게시물 id\r\nexport const itemIdState = atom({\r\n  key: \"itemIdState\",\r\n  default: null\r\n});\r\n\r\nexport const remoteApiConfigState = atom({\r\n  key: \"remoteApiConfigState\",\r\n  default: null\r\n});\r\n\r\nexport const selectedBoardItemIdState = atom({\r\n  key: \"selectedBoardItemIdState\",\r\n  default: null\r\n});\r\n","export const NICKNAME_REGEX = /^[a-zA-Z0-9가-힣]{1,15}$/;\r\nexport const POST_TITLE_REGEX = /^[a-zA-Z0-9가-힣 -~]{1,100}/;\r\nexport const POST_SEARCH_WORD_REGEX = /^[a-zA-Z가-힣0-9 -~].+$/;\r\nexport const SPECIAL_CHARACTERS_REGEX = /[-!$%^&*()_+|~=`{}\\[\\]:\";'<>?,.\\/]/;\r\n"],"names":["SideContentWrapper","styled","FlexBox","MainContentWrapper","Box","div","type","overflowY","Main","main","position","top","bottom","left","right","maxWidth","width","height","margin","padding","bgColor","borderTop","borderRight","borderBottom","borderLeft","borderRadius","zIndex","Wrapper","SpacingWrapper","spacingY","spacingX","BodyWrapper","UpperWrapper","Span","span","font","fontSize","fontWeight","color","StyledLink","Link","ProfileActiveToggle","isActive","setIsActive","id","useRecoilValue","itemIdState","setRemoteApiConfig","useSetRecoilState","remoteApiConfigState","isModalOpen","setIsModalOpen","useState","apiConfig","setApiConfig","response","error","loading","fetchData","useAxios","cookies","useCookies","useEffect","method","url","headers","sessionId","_jsxs","_Fragment","children","_jsx","Modal","isBan","hasButton","onClick","onActiveToggle","bannedDays","bannedReason","data","userId","setIsOpen","ActiveToggle","col","row","active","ActiveCircle","propTypes","PropTypes","ManagementList","isHome","title","onSideOpen","selectedId","setSelectedId","useRecoilState","selectedBoardItemIdState","setItemId","header","setHeader","getTitleText","getTypeText","length","Object","keys","filter","key","map","idx","ThLeft","Th","getKeyText","TableWrapper","Table","ThWrapper","Tbody","item","Tr","isSelected","entries","value","React","TdLeft","TdCenter","_key","_value","note","join","substr","paddingLeft","style","isAnswerCompleted","table","tr","theme","colors","gray600","th","tbody","xxxs","gray300","Td","td","ManagementTitle","href","TitleWrapper","Title","ArrowRightIcon","icon","faChevronRight","h2","xl","FontAwesomeIcon","xxs","Pagination","currPage","setCurrPage","lastPageIdx","size","currentPageGroup","Math","floor","totalPageGroup","startPageIdx","pageListLength","pageList","Array","from","_","i","PaginationWrapper","FirstButton","faAnglesLeft","PrevListButton","faAngleLeft","max","PageList","page","PageItem","NextListButton","faAngleRight","min","LastButton","faAnglesRight","PaginationButton","button","ModalBackground","ModalWrapper","props","ModalHeader","gray200","ModalContent","ModalMessage","p","m","paddingRight","ButtonContainer","BanWrapper","BanInputWrapper","BanInput","input","BanTextAreaWrapper","BanTextArea","textarea","BanButtonWrapper","BanButton","gray100","gray500","s","gray400","ExitMiniCircle","WebModal","isWithdrawal","handleWithdrawal","setBannedDays","setBannedReason","onValidateChange","e","t","target","v","parseInt","isNaN","SPECIAL_CHARACTERS_REGEX","test","maxLength","POST_TITLE_REGEX","dir","Button","message","step","onChange","fadeIn","keyframes","blink","Gradation","ContentWrapper","WideContent","NarrowContent","content","auto","align","isAnswerCompletedState","atom","default","NICKNAME_REGEX","POST_SEARCH_WORD_REGEX"],"sourceRoot":""}