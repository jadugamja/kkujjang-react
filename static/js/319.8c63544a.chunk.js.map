{"version":3,"file":"static/js/319.8c63544a.chunk.js","mappings":"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","sources":["components/Game/Shared/Player.jsx","components/Web/Admin/InquiryManagementList.jsx","components/Web/Admin/NoticeManagementList.jsx","components/Web/Admin/ReportManagementList.jsx","components/Web/Admin/UserManagementList.jsx","components/Web/Shared/Board/Filter.jsx","components/Web/Shared/Board/SearchBar.jsx","components/Web/Shared/Layout/Footer.jsx","components/Web/Shared/Layout/Title.jsx","components/Web/Shared/Buttons/HomeButton.jsx","components/Web/Shared/Layout/Banner.jsx","pages/Web/HomeUser.jsx","pages/Web/HomeAdmin.jsx","pages/Web/Home.jsx","services/user.js"],"sourcesContent":["import PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { FlexBox } from \"@/styles/FlexStyle\";\r\n\r\nconst Player = ({ type = \"wait\", avatarUrl, nickname, level }) => {\r\n  return (\r\n    <PlayerWrapper type={type} dir=\"col\" row=\"center\" col=\"center\">\r\n      <AvatarImage type={type} src={avatarUrl} />\r\n      <PlayerInfoWrapper col=\"center\">\r\n        <LevelBadge>{level}</LevelBadge>\r\n        <NicknameText>{nickname}</NicknameText>\r\n      </PlayerInfoWrapper>\r\n    </PlayerWrapper>\r\n  );\r\n};\r\n\r\nPlayer.propTypes = {\r\n  type: PropTypes.string,\r\n  avatarUrl: PropTypes.string,\r\n  nickname: PropTypes.string,\r\n  level: PropTypes.number\r\n};\r\n\r\nconst PlayerWrapper = styled(FlexBox)`\r\n  width: ${({ type }) => type !== \"play\" && \"9rem\"};\r\n  height: ${({ type }) => (type === \"play\" ? \"9.75rem\" : \"11.2rem\")};\r\n`;\r\n\r\nconst AvatarImage = styled(FlexBox).attrs({\r\n  as: \"img\"\r\n})`\r\n  width: ${({ type }) => (type === \"play\" ? \"6.75rem\" : \"7.25rem\")};\r\n  height: ${({ type }) => type === \"play\" && \"auto\"};\r\n`;\r\n\r\nconst PlayerInfoWrapper = styled(FlexBox)`\r\n  width: ${(props) => props.width || \"7.5rem\"};\r\n  margin-top: 7px;\r\n  font-size: ${(props) => props.size || \"16px\"};\r\n`;\r\n\r\nexport const LevelBadge = styled(FlexBox).attrs({\r\n  row: \"center\",\r\n  col: \"center\"\r\n})`\r\n  width: ${(props) => props.width || \"23px\"};\r\n  height: ${(props) => props.height || \"26px\"};\r\n  margin: 0px 6px 0 2px;\r\n  border: 1px solid ${({ theme }) => theme.colors.gray600};\r\n  border-radius: 5px;\r\n  font-size: 15px;\r\n  font-weight: 700;\r\n`;\r\n\r\nconst NicknameText = styled.span`\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n  word-break: break-all;\r\n`;\r\n\r\nexport default Player;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { useRecoilState, useRecoilValue } from \"recoil\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { isAnswerCompletedState, remoteApiConfigState } from \"@/recoil/boardState\";\r\nimport ManagementTitle from \"./ManagementTitle\";\r\nimport ManagementList from \"./ManagementList\";\r\nimport Filter from \"../Shared/Board/Filter\";\r\nimport Pagination from \"../Shared/Board/Pagination\";\r\nimport { FlexBox } from \"@/styles/FlexStyle\";\r\nimport { Box } from \"../../Game/Shared/Layout\";\r\nimport useAxios from \"@/hooks/useAxios\";\r\n\r\nconst InquiryManagementList = ({ type, onThreadOpen }) => {\r\n  const remoteApiConfig = useRecoilValue(remoteApiConfigState);\r\n  const [cookies] = useCookies([\"sessionId\"]);\r\n  const [listData, setListData] = useState([]);\r\n  const [selectedFilterOptions, setSelectedFilterOptions] = useState(null);\r\n  const [currPage, setCurrPage] = useState(1);\r\n  const [lastPageIdx, setLastPageIdx] = useState(30);\r\n  const [isAnswerCompleted, setIsAnswerCompleted] =\r\n    useRecoilState(isAnswerCompletedState);\r\n  const [apiConfig, setApiConfig] = useState({\r\n    method: \"get\",\r\n    url: `/inquiry/search?page=${currPage}`,\r\n    headers: {\r\n      sessionId: cookies.sessionId\r\n    }\r\n  });\r\n  const { response, loading, error, fetchData } = useAxios(apiConfig, false);\r\n\r\n  // 필터 key 데이터 추출\r\n  const filterKeys = [\"type\", \"needAnswer\"];\r\n\r\n  // 서버에서 받아온 데이터를 filterKeys의 값에 해당하는 것으로만 추출\r\n  const filterOptions = filterKeys?.map((key) => {\r\n    let uniqueValues;\r\n    if (key === \"type\") {\r\n      uniqueValues = [0, 1, 2, 5, 99];\r\n    } else if (key === \"needAnswer\") {\r\n      uniqueValues = [true, false];\r\n    }\r\n    return { key, values: uniqueValues };\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (apiConfig !== null) {\r\n      fetchData();\r\n    }\r\n  }, [apiConfig]);\r\n\r\n  useEffect(() => {\r\n    if (remoteApiConfig !== null) {\r\n      setApiConfig({\r\n        ...remoteApiConfig,\r\n        url: `/inquiry/search?page=${currPage}`\r\n      });\r\n    }\r\n  }, [remoteApiConfig]);\r\n\r\n  useEffect(() => {\r\n    if (response !== null) {\r\n      setLastPageIdx(response.result.lastPage === 0 ? 1 : response.result.lastPage);\r\n      setListData(\r\n        response.result.list?.map(\r\n          ({ updatedAt, createdAt, id, type, title, needAnswer }) => ({\r\n            id,\r\n            type,\r\n            title,\r\n            needAnswer\r\n          })\r\n        )\r\n      );\r\n    } else {\r\n      setLastPageIdx(1);\r\n      setListData([]);\r\n    }\r\n  }, [response]);\r\n\r\n  // 페이지, 필터 변경 시 호출\r\n  useEffect(() => {\r\n    if (selectedFilterOptions !== null) {\r\n      const queryString = Object.entries(selectedFilterOptions)\r\n        .map(([key, value]) => `${key}=${value}`)\r\n        .join(\"&\");\r\n\r\n      setApiConfig({\r\n        ...apiConfig,\r\n        url: `/inquiry/search?page=${currPage}&${queryString}`\r\n      });\r\n    } else {\r\n      setApiConfig({\r\n        ...apiConfig,\r\n        url: `/inquiry/search?page=${currPage}`\r\n      });\r\n    }\r\n  }, [currPage, selectedFilterOptions]);\r\n\r\n  return (\r\n    <>\r\n      {type !== \"home\" ? (\r\n        <Box>\r\n          <HeaderWrapper row=\"between\" col=\"center\">\r\n            <ManagementTitle title=\"inquiry\" />\r\n            <FilterWrapper marginTop=\"1.313rem\" marginRight=\"0.75rem\">\r\n              <Filter\r\n                filterOptions={filterOptions}\r\n                selectedFilterOptions={selectedFilterOptions}\r\n                setSelectedFilterOptions={setSelectedFilterOptions}\r\n              />\r\n            </FilterWrapper>\r\n          </HeaderWrapper>\r\n          <ManagementList\r\n            isHome={false}\r\n            title=\"inquiry\"\r\n            data={listData}\r\n            onSideOpen={onThreadOpen}\r\n            isAnswerCompleted={isAnswerCompleted}\r\n          />\r\n          <Pagination\r\n            currPage={currPage}\r\n            setCurrPage={setCurrPage}\r\n            lastPageIdx={lastPageIdx}\r\n          />\r\n        </Box>\r\n      ) : (\r\n        <Box type={type}>\r\n          <ManagementTitle type={type} title=\"inquiry\" />\r\n          <ManagementList\r\n            isHome={true}\r\n            title=\"inquiry\"\r\n            data={listData}\r\n            isAnswerCompleted={isAnswerCompleted}\r\n            onSideOpen={onThreadOpen}\r\n          />\r\n        </Box>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nInquiryManagementList.propTypes = {\r\n  type: PropTypes.string,\r\n  onThreadOpen: PropTypes.func,\r\n  isAnswerCompleted: PropTypes.object,\r\n  setIsAnswerCompleted: PropTypes.func\r\n};\r\n\r\nconst HeaderWrapper = styled(FlexBox)`\r\n  padding-bottom: 14px;\r\n`;\r\n\r\nconst FilterWrapper = styled.div`\r\n  margin-top: ${({ marginTop }) => marginTop};\r\n  margin-right: ${({ marginRight }) => marginRight};\r\n`;\r\n\r\nexport default InquiryManagementList;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nimport ManagementTitle from \"./ManagementTitle\";\r\nimport ManagementList from \"./ManagementList\";\r\nimport Button from \"../Shared/Buttons/Button\";\r\nimport SearchBar from \"../Shared/Board/SearchBar\";\r\nimport Pagination from \"../Shared/Board/Pagination\";\r\nimport { Box } from \"@/components/Game/Shared/Layout\";\r\nimport { FlexBox } from \"@/styles/FlexStyle\";\r\nimport useAxios from \"@/hooks/useAxios\";\r\nimport { remoteApiConfigState } from \"@/recoil/boardState\";\r\nimport { POST_SEARCH_WORD_REGEX } from \"@/services/regexp\";\r\n\r\nconst NoticeManagementList = ({ type, onDetailOpen, onCreateOpen }) => {\r\n  const remoteApiConfig = useRecoilValue(remoteApiConfigState);\r\n  const [cookies] = useCookies([\"sessionId\"]);\r\n  const [listData, setListData] = useState([]);\r\n  const [currPage, setCurrPage] = useState(1);\r\n  const [lastPageIdx, setLastPageIdx] = useState(1);\r\n  const [searchKeyword, setSearchKeyword] = useState(\"\");\r\n  const [apiConfig, setApiConfig] = useState({\r\n    method: \"get\",\r\n    url: `/notice/list?page=${currPage}`,\r\n    headers: {\r\n      sessionId: cookies.sessionId\r\n    }\r\n  });\r\n  const { response, loading, error, fetchData } = useAxios(apiConfig, false);\r\n\r\n  useEffect(() => {\r\n    if (apiConfig !== null) {\r\n      fetchData();\r\n    }\r\n  }, [apiConfig]);\r\n\r\n  useEffect(() => {\r\n    if (remoteApiConfig !== null) {\r\n      setApiConfig(remoteApiConfig);\r\n    }\r\n  }, [remoteApiConfig]);\r\n\r\n  useEffect(() => {\r\n    if (response !== null) {\r\n      if (apiConfig.url.includes(\"/search?q=\")) {\r\n        setLastPageIdx(1);\r\n        setListData(\r\n          response.list?.map(({ content, created_at, views, ...rest }) => ({\r\n            ...rest,\r\n            created_at: created_at.split(\"T\")[0],\r\n            views: views\r\n          }))\r\n        );\r\n      } else {\r\n        setLastPageIdx(response.lastPage === 0 ? 1 : response.lastPage);\r\n        setListData(\r\n          response.list?.map(({ content, created_at, views, ...rest }) => ({\r\n            ...rest,\r\n            created_at: created_at.split(\"T\")[0],\r\n            views: views\r\n          }))\r\n        );\r\n      }\r\n    } else {\r\n      setLastPageIdx(1);\r\n      setListData([]);\r\n    }\r\n  }, [response]);\r\n\r\n  // 페이지 변경, 검색 시 호출\r\n  useEffect(() => {\r\n    if (searchKeyword === \"\" || !POST_SEARCH_WORD_REGEX.test(searchKeyword)) return;\r\n\r\n    setApiConfig({\r\n      ...apiConfig,\r\n      url: `/notice/search?q=${searchKeyword}&page=${currPage}`\r\n    });\r\n  }, [currPage, searchKeyword]);\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <p>Loading...</p>\r\n      ) : error ? (\r\n        <p>{error}</p>\r\n      ) : type !== \"home\" ? (\r\n        <Box>\r\n          <HeaderWrapper row=\"between\" col=\"center\">\r\n            <ManagementTitle title=\"notice\" />\r\n            <SearchBarWrapper marginTop=\"14px\">\r\n              <SearchBar searchType=\"제목\" setSearchKeyword={setSearchKeyword} />\r\n            </SearchBarWrapper>\r\n          </HeaderWrapper>\r\n          <ManagementList\r\n            isHome={false}\r\n            title=\"notice\"\r\n            data={listData}\r\n            onSideOpen={onDetailOpen}\r\n          />\r\n          <Pagination\r\n            currPage={currPage}\r\n            setCurrPage={setCurrPage}\r\n            lastPageIdx={lastPageIdx}\r\n          />\r\n          <ButtonWrapper row=\"end\">\r\n            <CreateButton onClick={onCreateOpen} />\r\n          </ButtonWrapper>\r\n        </Box>\r\n      ) : (\r\n        <Box type={type}>\r\n          <ManagementTitle type={type} title=\"notice\" />\r\n          <ManagementList\r\n            isHome={true}\r\n            title=\"notice\"\r\n            data={listData}\r\n            onSideOpen={onDetailOpen}\r\n          />\r\n        </Box>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nNoticeManagementList.propTypes = {\r\n  type: PropTypes.string,\r\n  onDetailOpen: PropTypes.func,\r\n  onCreateOpen: PropTypes.func\r\n};\r\n\r\nconst HeaderWrapper = styled(FlexBox)`\r\n  padding-bottom: 14px;\r\n`;\r\n\r\nconst SearchBarWrapper = styled.div`\r\n  margin-top: ${({ marginTop }) => marginTop};\r\n  margin-right: ${({ marginRight }) => marginRight};\r\n`;\r\n\r\nconst ButtonWrapper = styled(FlexBox)`\r\n  margin-top: 10px;\r\n`;\r\n\r\nconst CreateButton = styled(Button).attrs({ type: \"smallDark\", message: \"등록\" })``;\r\n\r\nexport default NoticeManagementList;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nimport ManagementTitle from \"./ManagementTitle\";\r\nimport ManagementList from \"./ManagementList\";\r\nimport Filter from \"../Shared/Board/Filter\";\r\nimport Pagination from \"../Shared/Board/Pagination\";\r\nimport { FlexBox } from \"@/styles/FlexStyle\";\r\nimport { Box } from \"../../Game/Shared/Layout\";\r\nimport useAxios from \"@/hooks/useAxios\";\r\n\r\nconst ReportManagementList = ({ type, onSideOpen }) => {\r\n  const [cookies] = useCookies([\"sessionId\"]);\r\n  const [data, setData] = useState([]);\r\n  const [selectedFilterOptions, setSelectedFilterOptions] = useState({\r\n    createdAt: \"latest\",\r\n    types: {\r\n      isOffensive: 1,\r\n      isPoorManner: 1,\r\n      isCheating: 1\r\n    },\r\n    isHandled: 0\r\n  });\r\n  const [currPage, setCurrPage] = useState(1);\r\n  const [lastPageIdx, setLastPageIdx] = useState(1);\r\n  const [apiConfig, setApiConfig] = useState({\r\n    method: \"get\",\r\n    url: `/report/search?page=${currPage}`,\r\n    headers: {\r\n      sessionId: cookies.sessionId\r\n    }\r\n  });\r\n  const { response, loading, error, fetchData } = useAxios(apiConfig, false);\r\n\r\n  // 필터 key 데이터 추출\r\n  const filterKeys = [\"createdAt\", \"types\"];\r\n\r\n  const filterOptions = filterKeys?.map((key) => {\r\n    if (key === \"createdAt\") {\r\n      return { key, values: [\"oldest\", \"latest\"] };\r\n    } else if (key === \"types\") {\r\n      return { key, values: [\"isOffensive\", \"isCheating\", \"isPoorManner\"] };\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (apiConfig !== null) {\r\n      fetchData();\r\n    }\r\n  }, [apiConfig]);\r\n\r\n  useEffect(() => {\r\n    if (response !== null) {\r\n      setLastPageIdx(response.result.lastPage === 0 ? 1 : response.result.lastPage);\r\n      setData(\r\n        response.result.list?.map(\r\n          ({\r\n            id,\r\n            reporterNickname,\r\n            isCheating,\r\n            isOffensive,\r\n            isPoorManner,\r\n            note,\r\n            reporteeNickname,\r\n            createdAt,\r\n            isHandled\r\n          }) => ({\r\n            id,\r\n            reporteeNickname,\r\n            types: {\r\n              isCheating,\r\n              isOffensive,\r\n              isPoorManner,\r\n              note\r\n            },\r\n            reporterNickname,\r\n            createdAt,\r\n            isHandled\r\n          })\r\n        )\r\n      );\r\n    } else {\r\n      setLastPageIdx(1);\r\n      setData([]);\r\n    }\r\n  }, [response]);\r\n\r\n  // 페이지, 필터 변경 시 호출\r\n  useEffect(() => {\r\n    if (data?.length === 0) {\r\n      return;\r\n    }\r\n\r\n    let filteredData = [...data];\r\n\r\n    Object.entries(selectedFilterOptions).forEach(([key, value]) => {\r\n      if (key === \"createdAt\") {\r\n        filteredData.sort((a, b) =>\r\n          value === \"oldest\"\r\n            ? new Date(a[key]) - new Date(b[key])\r\n            : new Date(b[key]) - new Date(a[key])\r\n        );\r\n      } else if (key === \"types\") {\r\n        filteredData = filteredData.filter((item) => {\r\n          return Object.entries(value).every(([typeKey, typeValue]) => {\r\n            return typeValue === null || item[typeKey] === typeValue;\r\n          });\r\n        });\r\n      }\r\n    });\r\n\r\n    setData(filteredData);\r\n\r\n    const queryString = Object.entries(selectedFilterOptions)\r\n      .map(([key, value]) => {\r\n        if (key === \"types\") {\r\n          return Object.entries(value)\r\n            ?.map(([typeKey, typeValue]) => `${typeKey}=${typeValue ? 1 : 0}`)\r\n            ?.join(\"&\");\r\n        } else if (key === \"createdAt\") {\r\n          return `order=${value}`;\r\n        } else {\r\n          return `${key}=${value}`;\r\n        }\r\n      })\r\n      .join(\"&\");\r\n\r\n    setApiConfig({\r\n      ...apiConfig,\r\n      url: `/report/search?page=${currPage}&${queryString}`\r\n    });\r\n  }, [currPage, selectedFilterOptions]);\r\n\r\n  return (\r\n    <>\r\n      {type !== \"home\" ? (\r\n        <Box>\r\n          <HeaderWrapper row=\"between\" col=\"center\">\r\n            <ManagementTitle title=\"report\" />\r\n            <FilterWrapper marginTop=\"1.313rem\" marginRight=\"0.75rem\">\r\n              <Filter\r\n                filterOptions={filterOptions}\r\n                setSelectedFilterOptions={setSelectedFilterOptions}\r\n              />\r\n            </FilterWrapper>\r\n          </HeaderWrapper>\r\n          <ManagementList\r\n            isHome={false}\r\n            title=\"report\"\r\n            data={data}\r\n            onSideOpen={onSideOpen}\r\n          />\r\n          <Pagination\r\n            currPage={currPage}\r\n            setCurrPage={setCurrPage}\r\n            lastPageIdx={lastPageIdx}\r\n          />\r\n        </Box>\r\n      ) : (\r\n        <Box type={type}>\r\n          <ManagementTitle type={type} title=\"report\" />\r\n          <ManagementList\r\n            isHome={true}\r\n            title=\"report\"\r\n            data={data}\r\n            onSideOpen={onSideOpen}\r\n          />\r\n        </Box>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nReportManagementList.propTypes = {\r\n  type: PropTypes.string,\r\n  onSideOpen: PropTypes.func\r\n};\r\n\r\nconst HeaderWrapper = styled(FlexBox)`\r\n  padding-bottom: 14px;\r\n`;\r\n\r\nconst FilterWrapper = styled.div`\r\n  margin-top: ${({ marginTop }) => marginTop};\r\n  margin-right: ${({ marginRight }) => marginRight};\r\n`;\r\n\r\nexport default ReportManagementList;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { useRecoilValue, useSetRecoilState } from \"recoil\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nimport ManagementTitle from \"./ManagementTitle\";\r\nimport ManagementList from \"./ManagementList\";\r\nimport SearchBar from \"../Shared/Board/SearchBar\";\r\nimport Pagination from \"../Shared/Board/Pagination\";\r\nimport { FlexBox } from \"@/styles/FlexStyle\";\r\nimport { Box } from \"../../Game/Shared/Layout\";\r\nimport { isActiveAccountState } from \"@/recoil/userState\";\r\nimport { remoteApiConfigState } from \"@/recoil/boardState\";\r\nimport useAxios from \"@/hooks/useAxios\";\r\n\r\nconst UserManagementList = ({ type, onSideOpen }) => {\r\n  const setAccountStates = useSetRecoilState(isActiveAccountState);\r\n  const remoteApiConfig = useRecoilValue(remoteApiConfigState);\r\n  const [cookies] = useCookies([\"sessionId\"]);\r\n  const [data, setData] = useState([]);\r\n  const [currPage, setCurrPage] = useState(1);\r\n  const [lastPageIdx, setLastPageIdx] = useState(30);\r\n  const [searchKeyword, setSearchKeyword] = useState(\"\");\r\n  const [showBanned, setShowBanned] = useState(false);\r\n  const [apiConfig, setApiConfig] = useState({\r\n    method: \"get\",\r\n    url: `/user/search?page=${currPage}`,\r\n    headers: {\r\n      sessionId: cookies.sessionId\r\n    }\r\n  });\r\n  const { response, loading, error, fetchData } = useAxios(apiConfig, false);\r\n\r\n  useEffect(() => {\r\n    if (apiConfig !== null) {\r\n      fetchData();\r\n    }\r\n  }, [apiConfig]);\r\n\r\n  useEffect(() => {\r\n    if (remoteApiConfig !== null) {\r\n      setApiConfig({\r\n        ...remoteApiConfig,\r\n        url: `/user/search?page=${currPage}`\r\n      });\r\n    }\r\n  }, [remoteApiConfig]);\r\n\r\n  useEffect(() => {\r\n    if (response !== null) {\r\n      setLastPageIdx(response.result.lastPage === 0 ? 1 : response.result.lastPage);\r\n      setData(response.result.list);\r\n      data?.forEach((user) => {\r\n        setAccountStates((oldState) => ({ ...oldState, [user.id]: user.isBanned }));\r\n      });\r\n    } else {\r\n      setLastPageIdx(1);\r\n      setData([]);\r\n    }\r\n  }, [response]);\r\n\r\n  // 페이지 변경, 검색, 밴 여부 체크박스 클릭 시\r\n  useEffect(() => {\r\n    if (data?.length === 0) {\r\n      return;\r\n    }\r\n\r\n    let queryString;\r\n    if (searchKeyword !== \"\") {\r\n      queryString = `?page=${currPage}&nickname=${searchKeyword}`;\r\n    } else {\r\n      queryString = `?page=${currPage}`;\r\n    }\r\n\r\n    if (showBanned) {\r\n      queryString += \"&isBanned=1\";\r\n    }\r\n\r\n    setApiConfig({\r\n      ...apiConfig,\r\n      url: `/user/search${queryString}`\r\n    });\r\n  }, [currPage, searchKeyword, showBanned]);\r\n\r\n  return (\r\n    <>\r\n      {type !== \"home\" ? (\r\n        <>\r\n          <Box>\r\n            <HeaderWrapper row=\"between\">\r\n              <ManagementTitle title=\"user\" />\r\n              <Label>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={showBanned}\r\n                  onChange={(e) => setShowBanned(e.target.checked)}\r\n                />\r\n                밴 사용자\r\n              </Label>\r\n              <SearchBarWrapper marginTop=\"14px\" marginRight=\"10px\">\r\n                <SearchBar searchType=\"닉네임\" setSearchKeyword={setSearchKeyword} />\r\n              </SearchBarWrapper>\r\n            </HeaderWrapper>\r\n            <ManagementList\r\n              isHome={false}\r\n              title=\"user\"\r\n              data={data}\r\n              onSideOpen={onSideOpen}\r\n            />\r\n            <Pagination\r\n              currPage={currPage}\r\n              setCurrPage={setCurrPage}\r\n              lastPageIdx={lastPageIdx}\r\n            />\r\n          </Box>\r\n        </>\r\n      ) : (\r\n        <Box type={type}>\r\n          <ManagementTitle type={type} title=\"user\" />\r\n          <ManagementList\r\n            isHome={true}\r\n            title=\"user\"\r\n            data={data}\r\n            onSideOpen={onSideOpen}\r\n          />\r\n        </Box>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nUserManagementList.propTypes = {\r\n  type: PropTypes.string,\r\n  onSideOpen: PropTypes.func\r\n};\r\n\r\nconst HeaderWrapper = styled(FlexBox)`\r\n  padding-bottom: 14px;\r\n`;\r\n\r\nconst SearchBarWrapper = styled.div`\r\n  margin-top: ${({ marginTop }) => marginTop};\r\n  margin-right: ${({ marginRight }) => marginRight};\r\n`;\r\n\r\nconst Label = styled.label`\r\n  margin-left: 1.125rem;\r\n  padding-top: 2.25rem;\r\n`;\r\n\r\nexport default UserManagementList;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { FlexBox } from \"@/styles/FlexStyle\";\r\nimport hoveredFilter from \"@/assets/images/icon-filter-gr.png\";\r\nimport defaultFilter from \"@/assets/images/icon-filter.png\";\r\n\r\nconst filterLabels = {\r\n  type: \"문의 유형\",\r\n  types: \"신고 유형\",\r\n  needAnswer: \"답변 여부\",\r\n  createdAt: \"정렬\"\r\n};\r\n\r\nconst Filter = ({ filterOptions, selectedFilterOptions, setSelectedFilterOptions }) => {\r\n  const [isClicked, setIsClicked] = useState(\r\n    filterOptions?.reduce((acc, key) => ({ ...acc, [key]: false }), {})\r\n  );\r\n  const [isChecked, setIsChecked] = useState(\r\n    filterOptions\r\n      ?.filter(({ key }) => key === \"types\")\r\n      ?.reduce(\r\n        (acc, option) => ({\r\n          ...acc,\r\n          [option.key]: option.values.reduce(\r\n            (obj, value) => ({ ...obj, [value]: false }),\r\n            {}\r\n          )\r\n        }),\r\n        {}\r\n      )\r\n  );\r\n\r\n  const onApplyFilter = (key, item) => {\r\n    if (key !== \"types\") {\r\n      const newFilterOptions = { ...selectedFilterOptions, [key]: item };\r\n      setSelectedFilterOptions(newFilterOptions);\r\n      setIsClicked((prev) => ({ ...prev, [key]: !prev[key] }));\r\n    }\r\n  };\r\n\r\n  const onCheckboxChange = (key, item) => {\r\n    setIsChecked((prev) => {\r\n      const updated = { ...prev, [key]: { ...prev[key], [item]: !prev[key][item] } };\r\n      setSelectedFilterOptions((prevOptions) => ({\r\n        ...prevOptions,\r\n        [key]: updated[key]\r\n      }));\r\n      return updated;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <FilterListWrapper>\r\n      {filterOptions?.map(({ key, values }, idx) => (\r\n        <FilterItemWrapper col=\"center\" key={key}>\r\n          <span>{getFilterLabel(key)}</span>\r\n          <FilterImage\r\n            src={defaultFilter}\r\n            onClick={() => setIsClicked((prev) => ({ ...prev, [key]: !prev[key] }))}\r\n            onMouseOver={(e) => e.target.setAttribute(\"src\", hoveredFilter)}\r\n            onMouseOut={(e) => e.target.setAttribute(\"src\", defaultFilter)}\r\n          />\r\n          {isClicked[key] && (\r\n            <FilterList marginLeft={idx === 1 ? \"30px\" : \"\"} dir=\"col\" col=\"center\">\r\n              {values?.map((item, idx) => (\r\n                <FilterListItem\r\n                  key={idx}\r\n                  value={item}\r\n                  onClick={() => onApplyFilter(key, item)}\r\n                >\r\n                  {key === \"types\" ? (\r\n                    <>\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={isChecked[key][item]}\r\n                        onChange={() => onCheckboxChange(key, item)}\r\n                      />\r\n                      {getFilterItemText(key, item)}\r\n                    </>\r\n                  ) : (\r\n                    getFilterItemText(key, item)\r\n                  )}\r\n                </FilterListItem>\r\n              ))}\r\n            </FilterList>\r\n          )}\r\n        </FilterItemWrapper>\r\n      ))}\r\n    </FilterListWrapper>\r\n  );\r\n};\r\n\r\nconst getFilterLabel = (key) => {\r\n  return filterLabels[key] || \"\";\r\n};\r\n\r\nconst getFilterItemText = (key, item) => {\r\n  switch (key) {\r\n    case \"type\":\r\n      switch (item) {\r\n        case 0:\r\n          return <span>{\"버그문의\"}</span>;\r\n        case 1:\r\n          return <span>{\"계정문의\"}</span>;\r\n        case 2:\r\n          return <span>{\"서비스문의\"}</span>;\r\n        case 5:\r\n          return <span>{\"단어추가문의\"}</span>;\r\n        case 99:\r\n          return <span>{\"기타문의\"}</span>;\r\n      }\r\n    case \"needAnswer\":\r\n      switch (item) {\r\n        case true:\r\n          return <span>{\"NO\"}</span>;\r\n        case false:\r\n          return <span>{\"YES\"}</span>;\r\n        default:\r\n          return \"\";\r\n      }\r\n    case \"types\":\r\n      switch (item) {\r\n        case \"isOffensive\":\r\n          return <span>{\"공격적인 언어 사용\"}</span>;\r\n        case \"isPoorManner\":\r\n          return <span>{\"비매너 행위\"}</span>;\r\n        case \"isCheating\":\r\n          return <span>{\"사기 행위\"}</span>;\r\n        default:\r\n          return \"\";\r\n      }\r\n    case \"createdAt\":\r\n      switch (item) {\r\n        case \"oldest\":\r\n          return <span>{\"과거순\"}</span>;\r\n        case \"latest\":\r\n          return <span>{\"최신순\"}</span>;\r\n      }\r\n  }\r\n};\r\n\r\nFilter.propTypes = {\r\n  filterOptions: PropTypes.array,\r\n  selectedFilterOptions: PropTypes.object,\r\n  setSelectedFilterOptions: PropTypes.func\r\n};\r\n\r\nconst FilterListWrapper = styled(FlexBox)`\r\n  & > * + * {\r\n    margin-left: 1.75rem;\r\n  }\r\n`;\r\n\r\nconst FilterItemWrapper = styled(FlexBox)``;\r\n\r\nconst FilterImage = styled.img`\r\n  width: 19px;\r\n  margin-left: 6px;\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst FilterList = styled(FlexBox).attrs({ as: \"ul\" })`\r\n  position: absolute;\r\n  top: 165px;\r\n  width: max-content;\r\n  align-self: baseline;\r\n  margin-top: 10px;\r\n  margin-left: ${(props) => props.marginLeft || \"\"};\r\n  background-color: ${({ theme }) => theme.colors.content};\r\n  border: 2px solid #a2a2a2;\r\n  border-radius: 1px;\r\n  box-shadow: 0 1px 4px #00000019;\r\n  text-align: center;\r\n`;\r\n\r\nconst FilterListItem = styled.li`\r\n  width: 100%;\r\n  min-width: 60px;\r\n  padding: 3px 10px;\r\n\r\n  &:hover {\r\n    background-color: #ebeae6;\r\n    font-weight: 700;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport default Filter;\r\n","import { useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport { FlexBox } from \"@/styles/FlexStyle\";\r\nimport { faMagnifyingGlass } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { POST_SEARCH_WORD_REGEX } from \"../../../../services/regexp\";\r\n\r\nconst SearchBar = ({ searchType, setSearchKeyword }) => {\r\n  const keywordRef = useRef();\r\n\r\n  const sendKeyword = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!POST_SEARCH_WORD_REGEX.test(keywordRef.current.value)) return;\r\n\r\n    setSearchKeyword(keywordRef.current.value);\r\n    keywordRef.current.value = e.target.value;\r\n  };\r\n\r\n  return (\r\n    <SearchInputWrapper col=\"center\" field={searchType}>\r\n      <SearchTypeInput type=\"text\" readOnly value={searchType} />\r\n      <SearchKeywordInput\r\n        type=\"text\"\r\n        field={searchType}\r\n        placeholder=\"검색어 입력\"\r\n        onKeyDown={(e) => {\r\n          if (e.key === \"Enter\") sendKeyword(e);\r\n        }}\r\n        ref={keywordRef}\r\n      />\r\n      <SearchButton onClick={(e) => sendKeyword(e)}>\r\n        <SearchIcon icon={faMagnifyingGlass} />\r\n      </SearchButton>\r\n    </SearchInputWrapper>\r\n  );\r\n};\r\n\r\nSearchBar.propTypes = {\r\n  searchType: PropTypes.string,\r\n  setSearchKeyword: PropTypes.func\r\n};\r\n\r\nconst SearchInputWrapper = styled(FlexBox)`\r\n  border: 2px solid ${({ theme }) => theme.colors.gray200};\r\n  border-radius: 10px;\r\n  width: 18.5rem;\r\n  height: ${(props) => props.height || \"3.2rem\"};\r\n`;\r\n\r\nconst TransparentInput = styled.input`\r\n  border: 0;\r\n  background-color: transparent;\r\n  font-size: ${({ theme }) => theme.fontSize.xxxs};\r\n`;\r\n\r\nconst SearchTypeInput = styled(TransparentInput)`\r\n  width: ${({ value }) => (value === \"닉네임\" ? \"5.25rem\" : \"4.2rem\")};\r\n  padding: 0 16px;\r\n  border-right: 2px solid ${({ theme }) => theme.colors.gray200};\r\n\r\n  &:hover {\r\n    cursor: default;\r\n  }\r\n`;\r\n\r\nconst SearchKeywordInput = styled(TransparentInput)`\r\n  flex: 1;\r\n  margin: 0 10px;\r\n  width: ${({ field }) => (field === \"닉네임\" ? \"9.25rem\" : \"70%\")};\r\n\r\n  &::placeholder {\r\n    color: #a7a7a7;\r\n  }\r\n`;\r\n\r\nconst SearchButton = styled.button`\r\n  background-color: transparent;\r\n  width: 22px;\r\n  margin-right: 15px;\r\n  padding: 0;\r\n`;\r\n\r\nconst SearchIcon = styled(FontAwesomeIcon)`\r\n  font-size: 19px;\r\n`;\r\n\r\nexport default SearchBar;\r\n","import styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { FlexBox } from \"@/styles/FlexStyle\";\r\n\r\nconst Footer = ({ message }) => {\r\n  message = \"KKUJJANG ⓒ All rights reserved.\";\r\n\r\n  return (\r\n    <FooterWrapper row=\"center\" col=\"center\">\r\n      <FixedFooter>{message}</FixedFooter>\r\n    </FooterWrapper>\r\n  );\r\n};\r\n\r\nFooter.propTypes = {\r\n  message: PropTypes.string\r\n};\r\n\r\n// 푸터 래퍼\r\nconst FooterWrapper = styled(FlexBox)``;\r\n\r\n// 푸터\r\nconst FixedFooter = styled(FlexBox).attrs({\r\n  as: \"footer\",\r\n  row: \"center\",\r\n  col: \"center\"\r\n})`\r\n  width: 100%;\r\n  height: 1.5rem;\r\n  position: fixed;\r\n  bottom: 0;\r\n  font-size: 12px;\r\n  color: ${({ theme }) => theme.colors.gray500};\r\n`;\r\n\r\nexport default Footer;\r\n","import styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\nimport { FlexBox } from \"@/styles/FlexStyle\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faChevronRight } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Title = ({ children }) => {\r\n  return (\r\n    <FlexBox col=\"center\" height=\"4rem\" padding=\"15px 0 4px 0\">\r\n      <StyledTitle fontSize=\"24px\" fontWeight=\"800\" color=\"#413014\" margin=\"0 10px 0 33px\">\r\n        {children}\r\n      </StyledTitle>\r\n      <FontAwesomeIcon icon={faChevronRight} />\r\n    </FlexBox>\r\n  );\r\n};\r\n\r\nTitle.propTypes = {\r\n  children: PropTypes.string\r\n};\r\n\r\nconst StyledTitle = styled.h2`\r\n  margin: ${({ margin }) => margin};\r\n  font-family: \"Pretendard Variable\";\r\n  font-size: ${({ fontSize }) => fontSize};\r\n  font-weight: ${({ fontWeight }) => fontWeight};\r\n  color: ${({ color }) => color};\r\n`;\r\n\r\nexport default Title;\r\n","import { useEffect } from \"react\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faArrowRightFromBracket, faComment } from \"@fortawesome/free-solid-svg-icons\";\r\nimport FlexBox from \"@/styles/FlexStyle\";\r\nimport { Wrapper, Span } from \"../../../Game/Shared/Layout\";\r\nimport { LevelBadge } from \"../../../Game/Shared/Player\";\r\nimport { KAKAO_LOGIN_LINK } from \"@/services/const\";\r\nimport { userInfoState } from \"@/recoil/userState\";\r\nimport useAxios from \"@/hooks/useAxios\";\r\n\r\nconst HomeButton = ({ type }) => {\r\n  const [user, setUser] = useRecoilState(userInfoState);\r\n  const [cookies, , removeCookie] = useCookies([\"sessionId\"]);\r\n  const { response, loading, error, fetchData } = useAxios(\r\n    {\r\n      method: \"get\",\r\n      url: \"/user/signout\",\r\n      headers: {\r\n        sessionId: cookies.sessionId\r\n      }\r\n    },\r\n    false\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (response !== null) {\r\n      setUser(null);\r\n      removeCookie(\"sessionId\", { path: \"/\" });\r\n      if (cookies?.userRole) {\r\n        removeCookie(\"userRole\", { path: \"/\" });\r\n      }\r\n    }\r\n  }, [response]);\r\n\r\n  return (\r\n    <Wrapper dir=\"col\" width=\"19.75rem\" height=\"14rem\" margin=\"0 72px 0 0\">\r\n      {type === \"guest\" ? (\r\n        <>\r\n          <Link to=\"/member/login\" flex=\"1\">\r\n            <FlexBox\r\n              as=\"button\"\r\n              row=\"center\"\r\n              col=\"center\"\r\n              flex=\"1\"\r\n              padding=\"15px 0 0\"\r\n              bgColor=\"rgba(0,0,0, 0.7)\"\r\n              shadow=\" 0 4px 10px 0 rgba(0, 0, 0, 0.25)\"\r\n              borderRadius=\"30px 30px 0 0\"\r\n            >\r\n              <Span\r\n                font=\"Pretendard Variable\"\r\n                fontSize=\"54px\"\r\n                fontWeight=\"800\"\r\n                color=\"#fff\"\r\n              >\r\n                로그인\r\n              </Span>\r\n            </FlexBox>\r\n          </Link>\r\n          <a href={KAKAO_LOGIN_LINK}>\r\n            <FlexBox\r\n              as=\"button\"\r\n              row=\"center\"\r\n              col=\"center\"\r\n              width=\"100%\"\r\n              height=\"4rem\"\r\n              bgColor=\"#FFDE00\"\r\n              shadow=\" 0 4px 10px 0 rgba(0, 0, 0, 0.25)\"\r\n              borderRadius=\"0 0 30px 30px\"\r\n            >\r\n              <FontAwesomeIcon icon={faComment} size=\"lg\" />\r\n              <Span fontSize=\"1.375rem\" margin=\"0 5px\">\r\n                카카오로 로그인하기\r\n              </Span>\r\n            </FlexBox>\r\n          </a>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Link to=\"/game\" flex=\"1\">\r\n            <FlexBox\r\n              as=\"button\"\r\n              row=\"center\"\r\n              col=\"center\"\r\n              flex=\"1\"\r\n              padding=\"15px 0 0\"\r\n              bgColor=\"rgb(255 252 129)\"\r\n              shadow=\" 0 4px 10px 0 rgba(0, 0, 0, 0.25)\"\r\n              borderRadius=\"30px 30px 0 0\"\r\n            >\r\n              <Span font=\"Pretendard Variable\" fontSize=\"54px\" fontWeight=\"800\">\r\n                게임 시작\r\n              </Span>\r\n            </FlexBox>\r\n          </Link>\r\n          <FlexBox row=\"between\" col=\"center\" height=\"4rem\">\r\n            {/* User Info */}\r\n            <FlexBox\r\n              col=\"center\"\r\n              flex=\"1\"\r\n              height=\"100%\"\r\n              padding=\"0 18px\"\r\n              bgColor=\"#E6E6E6\"\r\n              shadow=\" 0 4px 10px 0 rgba(0, 0, 0, 0.25)\"\r\n              borderRadius=\"0 0  0 30px\"\r\n            >\r\n              <LevelBadge>{user?.level}</LevelBadge>\r\n              <Span font=\"Noto Sans KR\" fontSize=\"1.2rem\" fontWeight=\"700\">\r\n                {user?.nickname}\r\n              </Span>\r\n            </FlexBox>\r\n            {/* logout */}\r\n            <FlexBox\r\n              as=\"button\"\r\n              row=\"center\"\r\n              col=\"center\"\r\n              width=\"5rem\"\r\n              height=\"100%\"\r\n              bgColor=\"#FBFBFB\"\r\n              shadow=\" 3px 4px 10px 0 rgba(0, 0, 0, 0.25)\"\r\n              borderRadius=\"0 0 30px 0\"\r\n              onClick={() => fetchData()}\r\n            >\r\n              <FontAwesomeIcon icon={faArrowRightFromBracket} size=\"xl\" />\r\n            </FlexBox>\r\n          </FlexBox>\r\n        </>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nHomeButton.propTypes = {\r\n  type: PropTypes.string.isRequired\r\n};\r\n\r\nconst Link = styled(RouterLink)`\r\n  display: flex;\r\n  width: ${({ width }) => width};\r\n  height: ${({ height }) => height};\r\n  flex: ${({ flex }) => flex};\r\n`;\r\n\r\nexport default HomeButton;\r\n","import styled from \"styled-components\";\r\nimport FlexBox from \"@/styles/FlexStyle\";\r\nimport bubble from \"@/assets/images/bubble.png\";\r\n\r\nconst Banner = () => {\r\n  return (\r\n    <FlexBox\r\n      col=\"center\"\r\n      position=\"absolute\"\r\n      left=\"0\"\r\n      zIndex=\"-1\"\r\n      width=\"100%\"\r\n      height=\"26rem\"\r\n      bgColor=\"rgba(244, 244, 244, 0.4)\"\r\n      borderTop=\"1px solid rgba(24, 24,24 , 0.5)\"\r\n      borderBottom=\"1px solid rgba(24, 24,24 , 0.5)\"\r\n    >\r\n      <Img src={bubble} />\r\n    </FlexBox>\r\n  );\r\n};\r\n\r\nconst Img = styled.img`\r\n  margin-left: 25%;\r\n`;\r\n\r\nexport default Banner;\r\n","import { useState, useEffect } from \"react\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport { userInfoState } from \"../../recoil/userState\";\r\nimport useAxios from \"@/hooks/useAxios\";\r\nimport FlexBox from \"@/styles/FlexStyle\";\r\nimport { ContentWrapper, WideContent } from \"@/styles/CommonStyle\";\r\nimport Header from \"@/components/Web/Shared/Layout/Header\";\r\nimport Title from \"@/components/Web/Shared/Layout/Title\";\r\nimport HomeButton from \"@/components/Web/Shared/Buttons/HomeButton\";\r\nimport Banner from \"@/components/Web/Shared/Layout/Banner\";\r\nimport { Span, StyledLink as NoticeLink } from \"@/components/Game/Shared/Layout\";\r\n\r\nconst HomeUser = () => {\r\n  const user = useRecoilValue(userInfoState);\r\n  const isAuthenticated = user != null;\r\n\r\n  const [listData, setListData] = useState([]);\r\n  const { response, loading, error } = useAxios({\r\n    method: \"get\",\r\n    url: \"/notice/list?page=1\"\r\n  });\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (response !== null) {\r\n      setListData(response.list);\r\n    } else {\r\n      setListData([]);\r\n    }\r\n  }, [response]);\r\n\r\n  return (\r\n    <ContentWrapper row=\"center\" col=\"center\">\r\n      <WideContent dir=\"col\">\r\n        <Header type={!isAuthenticated ? \"guest\" : \"clearTab\"} />\r\n        <FlexBox as=\"main\" dir=\"col\" height=\"100%\" margin=\"7.5rem 0 0\" padding=\"10px\">\r\n          {/* upper */}\r\n          <FlexBox\r\n            height=\"25rem\"\r\n            padding=\"10px\"\r\n            margin=\"30px 0 5px\"\r\n            row=\"end\"\r\n            col=\"center\"\r\n          >\r\n            <Banner />\r\n            <HomeButton type={!isAuthenticated ? \"guest\" : \"member\"} />\r\n          </FlexBox>\r\n\r\n          {/* lower */}\r\n          <FlexBox\r\n            dir=\"col\"\r\n            width=\"100%\"\r\n            height=\"fit-content\"\r\n            margin=\"80px 0 0 0\"\r\n            padding=\"0 0 15px 0\"\r\n            flex=\"0 1 0%\"\r\n            border=\"1px solid #e5e5e5\"\r\n          >\r\n            {loading ? (\r\n              <Span>Loading...</Span>\r\n            ) : error ? (\r\n              <Span>{error}</Span>\r\n            ) : (\r\n              <>\r\n                <NoticeLink to=\"/notice/list\" width=\"fit-content\">\r\n                  <Title>공지사항</Title>\r\n                </NoticeLink>\r\n                {listData?.slice(0, 3)?.map((item) => (\r\n                  <FlexBox\r\n                    row=\"between\"\r\n                    col=\"center\"\r\n                    width=\"70%\"\r\n                    height=\"fit-content\"\r\n                    margin=\"8px 32px\"\r\n                    key={item.id}\r\n                    id={item.id}\r\n                    onClick={() => navigate(`/notice/${item.id}`)}\r\n                    clicky\r\n                  >\r\n                    <Span font=\"Noto Sans KR\" fontSize=\"18px\">\r\n                      {item.title}\r\n                    </Span>\r\n                    <Span font=\"Noto Sans KR\" fontSize=\"17px\" color=\"#8F692B\">\r\n                      {item.created_at?.split(\"T\")[0]}\r\n                    </Span>\r\n                  </FlexBox>\r\n                ))}\r\n              </>\r\n            )}\r\n          </FlexBox>\r\n        </FlexBox>\r\n      </WideContent>\r\n    </ContentWrapper>\r\n  );\r\n};\r\n\r\nexport default HomeUser;\r\n","import { useRecoilState, useSetRecoilState } from \"recoil\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nimport Header from \"@/components/Web/Shared/Layout/Header\";\r\nimport NoticeManagementList from \"@/components/Web/Admin/NoticeManagementList\";\r\nimport InquiryManagementList from \"@/components/Web/Admin/InquiryManagementList\";\r\nimport ReportManagementList from \"@/components/Web/Admin/ReportManagementList\";\r\nimport UserManagementList from \"@/components/Web/Admin/UserManagementList\";\r\nimport { FlexBox } from \"@/styles/FlexStyle\";\r\nimport { Main } from \"@/components/Game/Shared/Layout\";\r\nimport { ContentWrapper, WideContent } from \"@/styles/CommonStyle\";\r\nimport { isAnswerCompletedState } from \"@/recoil/boardState\";\r\nimport { itemIdState, selectedBoardItemIdState } from \"@/recoil/boardState\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst HomeAdmin = () => {\r\n  const setItemId = useSetRecoilState(itemIdState);\r\n  const setSelectedBoardItemId = useSetRecoilState(selectedBoardItemIdState);\r\n  const [isAnswerCompleted, setIsAnswerCompleted] =\r\n    useRecoilState(isAnswerCompletedState);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    setSelectedBoardItemId(null);\r\n  }, []);\r\n\r\n  const onSideOpen = (page, id) => {\r\n    setItemId(id);\r\n\r\n    switch (page) {\r\n      case \"notice\":\r\n        navigate(\"/admin/notice\");\r\n        break;\r\n      case \"inquiry\":\r\n        navigate(\"/admin/inquiry\");\r\n        break;\r\n      case \"report\":\r\n        navigate(\"/admin/report\");\r\n        break;\r\n      case \"user\":\r\n        navigate(\"/admin/user\");\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ContentWrapper row=\"center\" col=\"center\">\r\n      <WideContent width=\"114rem\" dir=\"col\">\r\n        <Header type=\"admin\" />\r\n        <Main width=\"100%\" margin=\"8.8rem 0 0\">\r\n          <ListWrapper row=\"between\">\r\n            <NoticeManagementList\r\n              type=\"home\"\r\n              onDetailOpen={(id) => onSideOpen(\"notice\", id)}\r\n            />\r\n            <InquiryManagementList\r\n              type=\"home\"\r\n              isAnswerCompleted={isAnswerCompleted}\r\n              setIsAnswerCompleted={setIsAnswerCompleted}\r\n              onThreadOpen={(id) => onSideOpen(\"inquiry\", id)}\r\n            />\r\n            <ReportManagementList\r\n              type=\"home\"\r\n              onSideOpen={(id) => onSideOpen(\"report\", id)}\r\n            />\r\n            <UserManagementList type=\"home\" onSideOpen={(id) => onSideOpen(\"user\", id)} />\r\n          </ListWrapper>\r\n        </Main>\r\n      </WideContent>\r\n    </ContentWrapper>\r\n  );\r\n};\r\n\r\nconst ListWrapper = styled(FlexBox)``;\r\n\r\nexport default HomeAdmin;\r\n","import React, { useEffect } from \"react\";\r\nimport { Outlet, useLocation } from \"react-router-dom\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { useCookies } from \"react-cookie\";\r\n\r\nimport { userInfoState } from \"../../recoil/userState\";\r\nimport { Gradation } from \"@/styles/CommonStyle\";\r\nimport Footer from \"@/components/Web/Shared/Layout/Footer\";\r\nimport HomeUser from \"./HomeUser\";\r\nimport HomeAdmin from \"./HomeAdmin\";\r\nimport { getCurrentUserInfo } from \"../../services/user\";\r\n\r\nconst Home = () => {\r\n  const location = useLocation();\r\n  const [cookies] = useCookies([\"sessionId\", \"userRole\"]);\r\n  const [user, setUser] = useRecoilState(userInfoState);\r\n\r\n  useEffect(() => {\r\n    const sessionId = cookies.sessionId;\r\n    if (sessionId) {\r\n      setUser((attr) => ({ ...attr, role: cookies.userRole }));\r\n      if (!user) getUserInfo();\r\n    } else {\r\n      setUser(null);\r\n    }\r\n  }, [cookies?.sessionId]);\r\n\r\n  const getUserInfo = async () => {\r\n    const userInfo = await getCurrentUserInfo();\r\n    if (userInfo) setUser({ ...userInfo, role: cookies.userRole });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Gradation />\r\n      <Footer />\r\n      <Outlet />\r\n\r\n      {location.pathname === \"/\" && (\r\n        <>{user?.role !== \"admin\" ? <HomeUser /> : <HomeAdmin />}</>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import axios from \"axios\";\r\nimport { Cookies } from \"react-cookie\";\r\nimport { BASE_URL } from \"./const\";\r\n\r\nconst cookies = new Cookies();\r\n\r\nexport const getCurrentUserInfo = async () => {\r\n  const userInfoRes = await axios.get(`${BASE_URL}/user/me`, {\r\n    headers: { sessionId: cookies.get(\"sessionId\") }\r\n  });\r\n\r\n  if (userInfoRes.statusText === \"OK\") {\r\n    return userInfoRes.data.result;\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nexport const updateCurrentUserAvatar = async (accIdx, nickname = \"테스트\") => {\r\n  const res = await axios.put(\r\n    `${BASE_URL}/user`,\r\n    { avatarAccessoryIndex: accIdx, nickname: nickname },\r\n    { headers: { sessionId: cookies.get(\"sessionId\") } }\r\n  );\r\n\r\n  if (res.statusText === \"OK\") {\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n};\r\n\r\nexport const getPlayerInfoByUserId = async (userId) => {\r\n  const res = await axios.get(`${BASE_URL}/user/${userId}`, {\r\n    headers: { sessionId: cookies.get(\"sessionId\") }\r\n  });\r\n\r\n  if (res.statusText === \"OK\") {\r\n    return res.data.result;\r\n  }\r\n\r\n  return null;\r\n};\r\n"],"names":["Player","type","avatarUrl","nickname","level","_jsxs","PlayerWrapper","dir","row","col","children","_jsx","AvatarImage","src","PlayerInfoWrapper","LevelBadge","NicknameText","propTypes","PropTypes","styled","FlexBox","attrs","as","props","width","size","height","theme","colors","gray600","span","InquiryManagementList","onThreadOpen","remoteApiConfig","useRecoilValue","remoteApiConfigState","cookies","useCookies","listData","setListData","useState","selectedFilterOptions","setSelectedFilterOptions","currPage","setCurrPage","lastPageIdx","setLastPageIdx","isAnswerCompleted","setIsAnswerCompleted","useRecoilState","isAnswerCompletedState","apiConfig","setApiConfig","method","url","headers","sessionId","response","loading","error","fetchData","useAxios","filterOptions","map","key","uniqueValues","values","useEffect","result","lastPage","list","updatedAt","createdAt","id","title","needAnswer","queryString","Object","entries","value","join","_Fragment","Box","HeaderWrapper","ManagementTitle","FilterWrapper","marginTop","marginRight","Filter","ManagementList","isHome","data","onSideOpen","Pagination","div","NoticeManagementList","onDetailOpen","onCreateOpen","searchKeyword","setSearchKeyword","includes","content","created_at","views","rest","split","POST_SEARCH_WORD_REGEX","test","SearchBarWrapper","SearchBar","searchType","ButtonWrapper","CreateButton","onClick","Button","message","ReportManagementList","setData","types","isOffensive","isPoorManner","isCheating","isHandled","reporterNickname","note","reporteeNickname","length","filteredData","forEach","sort","a","b","Date","filter","item","every","typeKey","typeValue","UserManagementList","setAccountStates","useSetRecoilState","isActiveAccountState","showBanned","setShowBanned","user","oldState","isBanned","Label","checked","onChange","e","target","label","filterLabels","isClicked","setIsClicked","reduce","acc","isChecked","setIsChecked","option","obj","FilterListWrapper","idx","FilterItemWrapper","getFilterLabel","FilterImage","defaultFilter","prev","onMouseOver","setAttribute","onMouseOut","FilterList","marginLeft","FilterListItem","onApplyFilter","newFilterOptions","onCheckboxChange","updated","prevOptions","getFilterItemText","img","li","keywordRef","useRef","sendKeyword","preventDefault","current","SearchInputWrapper","field","SearchTypeInput","readOnly","SearchKeywordInput","placeholder","onKeyDown","ref","SearchButton","SearchIcon","icon","faMagnifyingGlass","gray200","TransparentInput","input","fontSize","xxxs","button","FontAwesomeIcon","Footer","FooterWrapper","FixedFooter","gray500","Title","padding","StyledTitle","fontWeight","color","margin","faChevronRight","h2","HomeButton","setUser","userInfoState","removeCookie","path","userRole","Wrapper","Link","to","flex","bgColor","shadow","borderRadius","Span","font","href","KAKAO_LOGIN_LINK","faComment","faArrowRightFromBracket","isRequired","RouterLink","Img","Banner","position","left","zIndex","borderTop","borderBottom","bubble","HomeUser","isAuthenticated","navigate","useNavigate","ContentWrapper","WideContent","Header","border","NoticeLink","slice","clicky","ListWrapper","HomeAdmin","setItemId","itemIdState","setSelectedBoardItemId","selectedBoardItemIdState","page","Main","Home","location","useLocation","attr","role","getUserInfo","async","userInfo","getCurrentUserInfo","Gradation","Outlet","pathname","Cookies","userInfoRes","axios","get","concat","BASE_URL","statusText","updateCurrentUserAvatar","accIdx","arguments","undefined","put","avatarAccessoryIndex","getPlayerInfoByUserId","res","userId"],"sourceRoot":""}