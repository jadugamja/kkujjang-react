{"version":3,"file":"static/js/368.b6d89a37.chunk.js","mappings":"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","sources":["components/Game/Shared/ChatItem.jsx","components/Web/Admin/ReportManagementList.jsx","components/Web/Shared/Board/Filter.jsx","components/Web/Admin/ReportManagementDetailTable.jsx","components/Web/Admin/ReportManagementDetail.jsx","pages/Web/Admin/ReportManagement.jsx","recoil/displayState.js","services/date.js","services/user.js"],"sourcesContent":["import styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport FlexBox from \"@/styles/FlexStyle\";\r\n\r\nconst ChatItem = ({ nickname, message, createdAt }) => {\r\n  return (\r\n    <ChatContent>\r\n      <NickName row=\"start\" col=\"center\">\r\n        <span>{nickname}</span>\r\n      </NickName>\r\n      <Message col=\"center\">\r\n        <span>{message}</span>\r\n      </Message>\r\n      {createdAt && (\r\n        <Message marginLeft=\"auto\">\r\n          <span>{createdAt}</span>\r\n        </Message>\r\n      )}\r\n    </ChatContent>\r\n  );\r\n};\r\n\r\nconst ChatContent = styled(FlexBox)`\r\n  height: 20px;\r\n`;\r\n\r\nconst NickName = styled(FlexBox)`\r\n  width: 130px;\r\n  height: inherit;\r\n  font-weight: 700;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n`;\r\n\r\nconst Message = styled(FlexBox)`\r\n  height: inherit;\r\n  margin-left: ${({ marginLeft }) => marginLeft};\r\n`;\r\n\r\nChatItem.propTypes = {\r\n  nickname: PropTypes.string,\r\n  message: PropTypes.string,\r\n  createdAt: PropTypes.string\r\n};\r\n\r\nexport default ChatItem;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nimport ManagementTitle from \"./ManagementTitle\";\r\nimport ManagementList from \"./ManagementList\";\r\nimport Filter from \"../Shared/Board/Filter\";\r\nimport Pagination from \"../Shared/Board/Pagination\";\r\nimport { FlexBox } from \"@/styles/FlexStyle\";\r\nimport { Box } from \"../../Game/Shared/Layout\";\r\nimport useAxios from \"@/hooks/useAxios\";\r\n\r\nconst ReportManagementList = ({ type, onSideOpen }) => {\r\n  const [cookies] = useCookies([\"sessionId\"]);\r\n  const [data, setData] = useState([]);\r\n  const [selectedFilterOptions, setSelectedFilterOptions] = useState({\r\n    createdAt: \"latest\",\r\n    types: {\r\n      isOffensive: 1,\r\n      isPoorManner: 1,\r\n      isCheating: 1\r\n    },\r\n    isHandled: 0\r\n  });\r\n  const [currPage, setCurrPage] = useState(1);\r\n  const [lastPageIdx, setLastPageIdx] = useState(1);\r\n  const [apiConfig, setApiConfig] = useState({\r\n    method: \"get\",\r\n    url: `/report/search?page=${currPage}`,\r\n    headers: {\r\n      sessionId: cookies.sessionId\r\n    }\r\n  });\r\n  const { response, loading, error, fetchData } = useAxios(apiConfig, false);\r\n\r\n  // 필터 key 데이터 추출\r\n  const filterKeys = [\"createdAt\", \"types\"];\r\n\r\n  const filterOptions = filterKeys?.map((key) => {\r\n    if (key === \"createdAt\") {\r\n      return { key, values: [\"oldest\", \"latest\"] };\r\n    } else if (key === \"types\") {\r\n      return { key, values: [\"isOffensive\", \"isCheating\", \"isPoorManner\"] };\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (apiConfig !== null) {\r\n      fetchData();\r\n    }\r\n  }, [apiConfig]);\r\n\r\n  useEffect(() => {\r\n    if (response !== null) {\r\n      setLastPageIdx(response.result.lastPage === 0 ? 1 : response.result.lastPage);\r\n      setData(\r\n        response.result.list?.map(\r\n          ({\r\n            id,\r\n            reporterNickname,\r\n            isCheating,\r\n            isOffensive,\r\n            isPoorManner,\r\n            note,\r\n            reporteeNickname,\r\n            createdAt,\r\n            isHandled\r\n          }) => ({\r\n            id,\r\n            reporteeNickname,\r\n            types: {\r\n              isCheating,\r\n              isOffensive,\r\n              isPoorManner,\r\n              note\r\n            },\r\n            reporterNickname,\r\n            createdAt,\r\n            isHandled\r\n          })\r\n        )\r\n      );\r\n    } else {\r\n      setLastPageIdx(1);\r\n      setData([]);\r\n    }\r\n  }, [response]);\r\n\r\n  // 페이지, 필터 변경 시 호출\r\n  useEffect(() => {\r\n    if (data?.length === 0) {\r\n      return;\r\n    }\r\n\r\n    let filteredData = [...data];\r\n\r\n    Object.entries(selectedFilterOptions).forEach(([key, value]) => {\r\n      if (key === \"createdAt\") {\r\n        filteredData.sort((a, b) =>\r\n          value === \"oldest\"\r\n            ? new Date(a[key]) - new Date(b[key])\r\n            : new Date(b[key]) - new Date(a[key])\r\n        );\r\n      } else if (key === \"types\") {\r\n        filteredData = filteredData.filter((item) => {\r\n          return Object.entries(value).every(([typeKey, typeValue]) => {\r\n            return typeValue === null || item[typeKey] === typeValue;\r\n          });\r\n        });\r\n      }\r\n    });\r\n\r\n    setData(filteredData);\r\n\r\n    const queryString = Object.entries(selectedFilterOptions)\r\n      .map(([key, value]) => {\r\n        if (key === \"types\") {\r\n          return Object.entries(value)\r\n            ?.map(([typeKey, typeValue]) => `${typeKey}=${typeValue ? 1 : 0}`)\r\n            ?.join(\"&\");\r\n        } else if (key === \"createdAt\") {\r\n          return `order=${value}`;\r\n        } else {\r\n          return `${key}=${value}`;\r\n        }\r\n      })\r\n      .join(\"&\");\r\n\r\n    setApiConfig({\r\n      ...apiConfig,\r\n      url: `/report/search?page=${currPage}&${queryString}`\r\n    });\r\n  }, [currPage, selectedFilterOptions]);\r\n\r\n  return (\r\n    <>\r\n      {type !== \"home\" ? (\r\n        <Box>\r\n          <HeaderWrapper row=\"between\" col=\"center\">\r\n            <ManagementTitle title=\"report\" />\r\n            <FilterWrapper marginTop=\"1.313rem\" marginRight=\"0.75rem\">\r\n              <Filter\r\n                filterOptions={filterOptions}\r\n                setSelectedFilterOptions={setSelectedFilterOptions}\r\n              />\r\n            </FilterWrapper>\r\n          </HeaderWrapper>\r\n          <ManagementList\r\n            isHome={false}\r\n            title=\"report\"\r\n            data={data}\r\n            onSideOpen={onSideOpen}\r\n          />\r\n          <Pagination\r\n            currPage={currPage}\r\n            setCurrPage={setCurrPage}\r\n            lastPageIdx={lastPageIdx}\r\n          />\r\n        </Box>\r\n      ) : (\r\n        <Box type={type}>\r\n          <ManagementTitle type={type} title=\"report\" />\r\n          <ManagementList\r\n            isHome={true}\r\n            title=\"report\"\r\n            data={data}\r\n            onSideOpen={onSideOpen}\r\n          />\r\n        </Box>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nReportManagementList.propTypes = {\r\n  type: PropTypes.string,\r\n  onSideOpen: PropTypes.func\r\n};\r\n\r\nconst HeaderWrapper = styled(FlexBox)`\r\n  padding-bottom: 14px;\r\n`;\r\n\r\nconst FilterWrapper = styled.div`\r\n  margin-top: ${({ marginTop }) => marginTop};\r\n  margin-right: ${({ marginRight }) => marginRight};\r\n`;\r\n\r\nexport default ReportManagementList;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { FlexBox } from \"@/styles/FlexStyle\";\r\nimport hoveredFilter from \"@/assets/images/icon-filter-gr.png\";\r\nimport defaultFilter from \"@/assets/images/icon-filter.png\";\r\n\r\nconst filterLabels = {\r\n  type: \"문의 유형\",\r\n  types: \"신고 유형\",\r\n  needAnswer: \"답변 여부\",\r\n  createdAt: \"정렬\"\r\n};\r\n\r\nconst Filter = ({ filterOptions, selectedFilterOptions, setSelectedFilterOptions }) => {\r\n  const [isClicked, setIsClicked] = useState(\r\n    filterOptions?.reduce((acc, key) => ({ ...acc, [key]: false }), {})\r\n  );\r\n  const [isChecked, setIsChecked] = useState(\r\n    filterOptions\r\n      ?.filter(({ key }) => key === \"types\")\r\n      ?.reduce(\r\n        (acc, option) => ({\r\n          ...acc,\r\n          [option.key]: option.values.reduce(\r\n            (obj, value) => ({ ...obj, [value]: false }),\r\n            {}\r\n          )\r\n        }),\r\n        {}\r\n      )\r\n  );\r\n\r\n  const onApplyFilter = (key, item) => {\r\n    if (key !== \"types\") {\r\n      const newFilterOptions = { ...selectedFilterOptions, [key]: item };\r\n      setSelectedFilterOptions(newFilterOptions);\r\n      setIsClicked((prev) => ({ ...prev, [key]: !prev[key] }));\r\n    }\r\n  };\r\n\r\n  const onCheckboxChange = (key, item) => {\r\n    setIsChecked((prev) => {\r\n      const updated = { ...prev, [key]: { ...prev[key], [item]: !prev[key][item] } };\r\n      setSelectedFilterOptions((prevOptions) => ({\r\n        ...prevOptions,\r\n        [key]: updated[key]\r\n      }));\r\n      return updated;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <FilterListWrapper>\r\n      {filterOptions?.map(({ key, values }, idx) => (\r\n        <FilterItemWrapper col=\"center\" key={key}>\r\n          <span>{getFilterLabel(key)}</span>\r\n          <FilterImage\r\n            src={defaultFilter}\r\n            onClick={() => setIsClicked((prev) => ({ ...prev, [key]: !prev[key] }))}\r\n            onMouseOver={(e) => e.target.setAttribute(\"src\", hoveredFilter)}\r\n            onMouseOut={(e) => e.target.setAttribute(\"src\", defaultFilter)}\r\n          />\r\n          {isClicked[key] && (\r\n            <FilterList marginLeft={idx === 1 ? \"30px\" : \"\"} dir=\"col\" col=\"center\">\r\n              {values?.map((item, idx) => (\r\n                <FilterListItem\r\n                  key={idx}\r\n                  value={item}\r\n                  onClick={() => onApplyFilter(key, item)}\r\n                >\r\n                  {key === \"types\" ? (\r\n                    <>\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={isChecked[key][item]}\r\n                        onChange={() => onCheckboxChange(key, item)}\r\n                      />\r\n                      {getFilterItemText(key, item)}\r\n                    </>\r\n                  ) : (\r\n                    getFilterItemText(key, item)\r\n                  )}\r\n                </FilterListItem>\r\n              ))}\r\n            </FilterList>\r\n          )}\r\n        </FilterItemWrapper>\r\n      ))}\r\n    </FilterListWrapper>\r\n  );\r\n};\r\n\r\nconst getFilterLabel = (key) => {\r\n  return filterLabels[key] || \"\";\r\n};\r\n\r\nconst getFilterItemText = (key, item) => {\r\n  switch (key) {\r\n    case \"type\":\r\n      switch (item) {\r\n        case 0:\r\n          return <span>{\"버그문의\"}</span>;\r\n        case 1:\r\n          return <span>{\"계정문의\"}</span>;\r\n        case 2:\r\n          return <span>{\"서비스문의\"}</span>;\r\n        case 5:\r\n          return <span>{\"단어추가문의\"}</span>;\r\n        case 99:\r\n          return <span>{\"기타문의\"}</span>;\r\n      }\r\n    case \"needAnswer\":\r\n      switch (item) {\r\n        case true:\r\n          return <span>{\"NO\"}</span>;\r\n        case false:\r\n          return <span>{\"YES\"}</span>;\r\n        default:\r\n          return \"\";\r\n      }\r\n    case \"types\":\r\n      switch (item) {\r\n        case \"isOffensive\":\r\n          return <span>{\"공격적인 언어 사용\"}</span>;\r\n        case \"isPoorManner\":\r\n          return <span>{\"비매너 행위\"}</span>;\r\n        case \"isCheating\":\r\n          return <span>{\"사기 행위\"}</span>;\r\n        default:\r\n          return \"\";\r\n      }\r\n    case \"createdAt\":\r\n      switch (item) {\r\n        case \"oldest\":\r\n          return <span>{\"과거순\"}</span>;\r\n        case \"latest\":\r\n          return <span>{\"최신순\"}</span>;\r\n      }\r\n  }\r\n};\r\n\r\nFilter.propTypes = {\r\n  filterOptions: PropTypes.array,\r\n  selectedFilterOptions: PropTypes.object,\r\n  setSelectedFilterOptions: PropTypes.func\r\n};\r\n\r\nconst FilterListWrapper = styled(FlexBox)`\r\n  & > * + * {\r\n    margin-left: 1.75rem;\r\n  }\r\n`;\r\n\r\nconst FilterItemWrapper = styled(FlexBox)``;\r\n\r\nconst FilterImage = styled.img`\r\n  width: 19px;\r\n  margin-left: 6px;\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst FilterList = styled(FlexBox).attrs({ as: \"ul\" })`\r\n  position: absolute;\r\n  top: 165px;\r\n  width: max-content;\r\n  align-self: baseline;\r\n  margin-top: 10px;\r\n  margin-left: ${(props) => props.marginLeft || \"\"};\r\n  background-color: ${({ theme }) => theme.colors.content};\r\n  border: 2px solid #a2a2a2;\r\n  border-radius: 1px;\r\n  box-shadow: 0 1px 4px #00000019;\r\n  text-align: center;\r\n`;\r\n\r\nconst FilterListItem = styled.li`\r\n  width: 100%;\r\n  min-width: 60px;\r\n  padding: 3px 10px;\r\n\r\n  &:hover {\r\n    background-color: #ebeae6;\r\n    font-weight: 700;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport default Filter;\r\n","import { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport FlexBox from \"@/styles/FlexStyle\";\r\nimport { faAngleDown, faTriangleExclamation } from \"@fortawesome/free-solid-svg-icons\";\r\nimport ChatItem from \"../../Game/Shared/ChatItem\";\r\nimport { formatDateToTimestamp } from \"@/services/date\";\r\n\r\nconst ReportManagementDetailTable = ({ type, data }) => {\r\n  const [isLogsOpen, setIsLogsOpen] = useState(false);\r\n\r\n  if (!data) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <Table dir=\"col\">\r\n      {type === \"report\" && (\r\n        <>\r\n          <TableHead col=\"center\">\r\n            <IconWrapper row=\"center\" col=\"center\">\r\n              <WarningIcon icon={faTriangleExclamation} />\r\n            </IconWrapper>\r\n            <TextWrapper>\r\n              <span>{data?.reporteeNickname}</span>\r\n              <span>{`(${data?.reporteeId})`}</span>\r\n            </TextWrapper>\r\n          </TableHead>\r\n          <TableRow dir=\"col\" key={data?.id}>\r\n            <TableCell>\r\n              <TableCellLabel>신고자</TableCellLabel>\r\n              <TableCellContent>{`${data?.reporterNickname} (${data?.reporterId})`}</TableCellContent>\r\n            </TableCell>\r\n            <TableCell>\r\n              <TableCellLabel>신고 시각</TableCellLabel>\r\n              <TableCellContent>\r\n                {formatDateToTimestamp(data?.createdAt)}\r\n              </TableCellContent>\r\n            </TableCell>\r\n            <TableCell>\r\n              <TableCellLabel>신고 사유</TableCellLabel>\r\n              <TableCellContent>\r\n                {[\r\n                  ...Object.entries(data?.types)\r\n                    ?.filter(([_key, _value]) => _value === true)\r\n                    ?.map(\r\n                      ([_key, _value]) =>\r\n                        (_key === \"isOffensive\" && \"공격적인 언어 사용\") ||\r\n                        (_key === \"isCheating\" && \"사기 행위\") ||\r\n                        (_key === \"isPoorManner\" && \"비매너 행위\")\r\n                    ),\r\n                  data?.types.note && `기타: ${data?.types.note}`\r\n                ].join(\", \")}\r\n              </TableCellContent>\r\n            </TableCell>\r\n            <TableCell>\r\n              <TableCellLabel>게임방 ID</TableCellLabel>\r\n              <TableCellContent>{data?.roomId}</TableCellContent>\r\n            </TableCell>\r\n          </TableRow>\r\n        </>\r\n      )}\r\n      {type === \"room\" && (\r\n        <>\r\n          <SkyBlueTableHead>\r\n            <TableCell>\r\n              <TableCellLabel row=\"center\" col=\"center\" width=\"100px\">\r\n                게임방 ID\r\n              </TableCellLabel>\r\n              <TableCellContent col=\"center\">{data?.roomId}</TableCellContent>\r\n            </TableCell>\r\n          </SkyBlueTableHead>\r\n          <TableRow type={type} dir=\"col\">\r\n            <TableCell type={type}>\r\n              <TableCellLabel row=\"start\" col=\"center\" width=\"90px\" margin=\"0 0 0 12px\">\r\n                개설 시각\r\n              </TableCellLabel>\r\n              <TableCellContent col=\"center\">\r\n                {formatDateToTimestamp(data?.createdAt)}\r\n              </TableCellContent>\r\n            </TableCell>\r\n            <TableCell type={type}>\r\n              <TableCellLabel row=\"start\" col=\"center\" width=\"90px\" margin=\"0 0 0 12px\">\r\n                종료 시각\r\n              </TableCellLabel>\r\n              <TableCellContent col=\"center\">\r\n                {!data?.expiredAt ? \"\" : formatDateToTimestamp(data?.expiredAt)}\r\n              </TableCellContent>\r\n            </TableCell>\r\n            <TableCell type={type} onClick={() => setIsLogsOpen(!isLogsOpen)} clickable>\r\n              <TableCellLabel row=\"start\" col=\"center\" width=\"90px\" margin=\"0 0 0 12px\">\r\n                로그\r\n              </TableCellLabel>\r\n              <TableCellContent row=\"end\" col=\"center\" margin=\"0 10px 0\">\r\n                <FontAwesomeIcon icon={faAngleDown} />\r\n              </TableCellContent>\r\n            </TableCell>\r\n            {isLogsOpen && (\r\n              <TableCell\r\n                type={type}\r\n                dir=\"col\"\r\n                row=\"between\"\r\n                position=\"relative\"\r\n                bgColor=\"#fff\"\r\n                border=\"1px solid #000\"\r\n              >\r\n                {data?.logs?.map((log, i) => {\r\n                  return (\r\n                    <FlexBox row=\"between\" key={i}>\r\n                      <span>{log.type}</span>\r\n                      {Object.entries(log)\r\n                        .filter(([key]) => key !== \"type\")\r\n                        .map(([key, value]) =>\r\n                          key !== \"createdAt\" ? (\r\n                            <span key={key}>{value}</span>\r\n                          ) : (\r\n                            <span key={key}>{formatDateToTimestamp(value)}</span>\r\n                          )\r\n                        )}\r\n                    </FlexBox>\r\n                  );\r\n                })}\r\n              </TableCell>\r\n            )}\r\n          </TableRow>\r\n        </>\r\n      )}\r\n\r\n      {type === \"chat\" && (\r\n        <>\r\n          <SkyBlueTableHead type={type} row=\"center\" col=\"center\">\r\n            <TextWrapper type={type}>채팅 내역</TextWrapper>\r\n          </SkyBlueTableHead>\r\n          <TableRow type={type}>\r\n            <ChatItemWrapper dir=\"col\">\r\n              {Array.isArray(data) ? (\r\n                data?.map((chat, i) => (\r\n                  <ChatItem\r\n                    key={i}\r\n                    nickname={chat?.nickname}\r\n                    message={chat?.message}\r\n                    createdAt={formatDateToTimestamp(chat?.createdAt)}\r\n                  />\r\n                ))\r\n              ) : (\r\n                <ChatItem message={data} />\r\n              )}\r\n            </ChatItemWrapper>\r\n          </TableRow>\r\n        </>\r\n      )}\r\n    </Table>\r\n  );\r\n};\r\n\r\nReportManagementDetailTable.propTypes = {\r\n  type: PropTypes.string,\r\n  data: PropTypes.oneOfType([PropTypes.object, PropTypes.array])\r\n};\r\n\r\nconst Table = styled(FlexBox)`\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nconst TableHead = styled(FlexBox)`\r\n  height: 5.625rem;\r\n  border-bottom: 1px solid #ccc;\r\n  font-size: ${({ theme }) => theme.fontSize.xxs};\r\n  font-weight: 600;\r\n`;\r\n\r\nconst SkyBlueTableHead = styled(TableHead)`\r\n  height: ${({ type }) => (type !== \"chat\" ? \"6rem\" : \"1.75rem\")};\r\n  background-color: #d5e0f0;\r\n  border-bottom: 0;\r\n  font-size: ${({ theme }) => theme.fontSize.xxxs};\r\n`;\r\n\r\nconst TableRow = styled(FlexBox)`\r\n  flex-grow: ${({ type }) => type !== \"room\" && 1};\r\n  padding: ${({ type }) => type === \"chat\" && \"10px 0\"};\r\n`;\r\n\r\nconst TableCell = styled(FlexBox)`\r\n  position: ${({ position }) => position};\r\n  flex: 1;\r\n  flex-basis: ${({ type }) => type === \"room\" && \"3.375rem\"};\r\n  padding: 10px;\r\n  border-bottom: 1px solid #ccc;\r\n  border: ${({ border }) => border};\r\n  background-color: ${({ bgColor }) => bgColor};\r\n\r\n  &:last-child {\r\n    border-bottom: ${({ type }) => type !== \"room\" && 0};\r\n  }\r\n\r\n  ${({ clickable }) => clickable && `&:hover { cursor: pointer;}`}\r\n`;\r\n\r\nconst TableCellLabel = styled(FlexBox)`\r\n  width: ${({ width }) => width || \"80px\"};\r\n  margin: ${({ margin }) => margin};\r\n  flex-shrink: 0;\r\n  font-weight: 500;\r\n`;\r\n\r\nconst TableCellContent = styled(FlexBox)`\r\n  flex-grow: 1;\r\n  word-break: break-all;\r\n  margin: ${({ margin }) => margin};\r\n`;\r\n\r\nconst IconWrapper = styled(FlexBox)`\r\n  width: 3.75rem;\r\n  height: 3.75rem;\r\n`;\r\n\r\nconst TextWrapper = styled(FlexBox)`\r\n  font-size: ${({ type }) => type === \"chat\" && \"16px\"};\r\n`;\r\n\r\nconst ChatItemWrapper = styled(FlexBox)`\r\n  flex-basis: 65%;\r\n  flex-grow: 1;\r\n  margin: 2px 12px;\r\n  max-height: 26.25rem;\r\n`;\r\n\r\nconst WarningIcon = styled(FontAwesomeIcon)`\r\n  font-size: ${({ theme }) => theme.fontSize.xl};\r\n  color: ${({ theme }) => theme.colors.error};\r\n`;\r\n\r\nexport default ReportManagementDetailTable;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nimport FlexBox from \"@/styles/FlexStyle\";\r\nimport ReportManagementDetailTable from \"./ReportManagementDetailTable\";\r\nimport useAxios from \"@/hooks/useAxios\";\r\nimport { getPlayerInfoByUserId } from \"@/services/user\";\r\n\r\nconst ReportManagementDetail = ({ data }) => {\r\n  const [cookies] = useCookies([\"sessionId\"]);\r\n  const [gameroomData, setGameroomData] = useState(null);\r\n  const [gameroomChatData, setGameroomChatData] = useState(null);\r\n  const roomApiConfig = {\r\n    method: \"get\",\r\n    url: `/room/${data?.roomId}`,\r\n    headers: {\r\n      sessionId: cookies.sessionId\r\n    }\r\n  };\r\n  const chatApiConfig = {\r\n    method: \"get\",\r\n    url: `/chat?roomId=${data?.roomId}`,\r\n    headers: {\r\n      sessionId: cookies.sessionId\r\n    }\r\n  };\r\n\r\n  const {\r\n    response: roomRes,\r\n    loading: roomLoading,\r\n    error: roomErr,\r\n    fetchData: fetchRoomData\r\n  } = useAxios(roomApiConfig, false);\r\n  const {\r\n    response: chatRes,\r\n    loading: chatLoading,\r\n    error: chatErr,\r\n    fetchData: fetchChatData\r\n  } = useAxios(chatApiConfig, false);\r\n\r\n  useEffect(() => {\r\n    if (data?.roomId) {\r\n      fetchRoomData();\r\n      fetchChatData();\r\n    }\r\n  }, [data]);\r\n\r\n  useEffect(() => {\r\n    if (roomRes !== null) {\r\n      setGameroomData(roomRes);\r\n    }\r\n  }, [roomRes]);\r\n\r\n  useEffect(() => {\r\n    if (chatRes !== null) {\r\n      const fetchNicknamesAndSetChatData = async () => {\r\n        const updatedChatRes = await Promise.all(\r\n          chatRes.reverse().map(async (chat) => {\r\n            const { userId, message, createdAt } = chat;\r\n            const nickname = await getNicknameByUserId(userId);\r\n            return { nickname, message, createdAt };\r\n          })\r\n        );\r\n\r\n        setGameroomChatData(updatedChatRes);\r\n      };\r\n\r\n      fetchNicknamesAndSetChatData();\r\n    }\r\n  }, [chatRes]);\r\n\r\n  const getNicknameByUserId = async (userId) => {\r\n    const userInfo = await getPlayerInfoByUserId(userId);\r\n    return userInfo.nickname;\r\n  };\r\n\r\n  return (\r\n    <DetailWrapper dir=\"col\">\r\n      <UpperBoxWrapper row=\"between\">\r\n        <Box width=\"17.68rem\" height=\"21rem\">\r\n          <ReportManagementDetailTable type=\"report\" data={data} />\r\n        </Box>\r\n        <Box width=\"17.68rem\" height=\"21rem\">\r\n          <ReportManagementDetailTable type=\"room\" data={gameroomData} />\r\n        </Box>\r\n      </UpperBoxWrapper>\r\n      <Box>\r\n        <ReportManagementDetailTable\r\n          type=\"chat\"\r\n          data={chatErr ? chatErr : gameroomChatData}\r\n        />\r\n      </Box>\r\n    </DetailWrapper>\r\n  );\r\n};\r\n\r\nReportManagementDetail.propTypes = {\r\n  data: PropTypes.object\r\n};\r\n\r\nconst DetailWrapper = styled(FlexBox)`\r\n  & > * + * {\r\n    margin-top: 14px;\r\n  }\r\n`;\r\n\r\nconst UpperBoxWrapper = styled(FlexBox)`\r\n  width: 100%;\r\n`;\r\n\r\nconst Box = styled.div`\r\n  background-color: #fff;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n  width: ${({ width }) => width || \"100%\"};\r\n  height: ${({ height }) => height || \"fit=content\"};\r\n`;\r\n\r\nexport default ReportManagementDetail;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { useRecoilState } from \"recoil\";\r\n\r\nimport useAxios from \"@/hooks/useAxios\";\r\nimport { isActiveSideContentTypeState } from \"@/recoil/displayState\";\r\nimport { itemIdState } from \"@/recoil/boardState\";\r\nimport { FlexBox as ListWrapper } from \"@/styles/FlexStyle\";\r\nimport { Box } from \"@/components/Game/Shared/Layout\";\r\nimport { ContentWrapper, WideContent, Main } from \"@/styles/CommonStyle\";\r\nimport Header from \"@/components/Web/Shared/Layout/Header\";\r\nimport ReportManagementList from \"@/components/Web/Admin/ReportManagementList\";\r\nimport ReportManagementDetail from \"@/components/Web/Admin/ReportManagementDetail\";\r\n\r\nconst ReportManagement = () => {\r\n  const [isAcitveSideContentType, setIsActiveSideContentType] = useRecoilState(\r\n    isActiveSideContentTypeState\r\n  );\r\n  const [itemId, setItemId] = useRecoilState(itemIdState);\r\n  const [cookies] = useCookies([\"sessionId\"]);\r\n  const [reportData, setReportData] = useState(null);\r\n  const [apiConfig, setApiConfig] = useState(null);\r\n  const { response, loading, error, fetchData } = useAxios(apiConfig, false);\r\n\r\n  useEffect(() => {\r\n    if (itemId === null) {\r\n      setIsActiveSideContentType(0);\r\n    } else {\r\n      setApiConfig({\r\n        method: \"get\",\r\n        url: `/report/${itemId}`,\r\n        headers: { sessionId: cookies.sessionId }\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (apiConfig !== null) {\r\n      fetchData();\r\n    }\r\n  }, [apiConfig]);\r\n\r\n  useEffect(() => {\r\n    if (response !== null) {\r\n      const { isOffensive, isCheating, isPoorManner, note, ...rest } = response.result;\r\n      setReportData({\r\n        ...rest,\r\n        types: { isOffensive, isCheating, isPoorManner, note }\r\n      });\r\n    }\r\n  }, [response]);\r\n\r\n  useEffect(() => {\r\n    if (reportData !== null) {\r\n      setIsActiveSideContentType(1);\r\n    }\r\n  }, [reportData]);\r\n\r\n  const onSideOpen = (id) => {\r\n    setItemId(id);\r\n    setApiConfig({\r\n      method: \"get\",\r\n      url: `/report/${id}`,\r\n      headers: { sessionId: cookies.sessionId }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <ContentWrapper row=\"center\" col=\"center\">\r\n      <WideContent width=\"82rem\" dir=\"col\">\r\n        <Header type=\"admin-detail\" />\r\n        <Main type=\"admin\" row=\"between\">\r\n          <ListWrapper row=\"between\">\r\n            <ReportManagementList onSideOpen={onSideOpen} />\r\n            {isAcitveSideContentType === 1 && (\r\n              <Box>\r\n                <ReportManagementDetail data={reportData} />\r\n              </Box>\r\n            )}\r\n          </ListWrapper>\r\n        </Main>\r\n      </WideContent>\r\n    </ContentWrapper>\r\n  );\r\n};\r\n\r\nexport default ReportManagement;\r\n","import { atom } from \"recoil\";\r\n\r\n// 0: not active, 1: Detail, 2: Create\r\nexport const isActiveSideContentTypeState = atom({\r\n  key: \"isActiveSideContentTypeState\",\r\n  default: 0\r\n});\r\n","export const formatDateToTimestamp = (dateString) => {\r\n  const date = new Date(dateString);\r\n  const yyyy = date.getFullYear();\r\n  const MM = String(date.getMonth() + 1).padStart(2, \"0\");\r\n  const dd = String(date.getDate()).padStart(2, \"0\");\r\n  const hh = String(date.getHours()).padStart(2, \"0\");\r\n  const mm = String(date.getMinutes()).padStart(2, \"0\");\r\n  const ss = String(date.getSeconds()).padStart(2, \"0\");\r\n\r\n  return `${yyyy}-${MM}-${dd} ${hh}:${mm}:${ss}`;\r\n};\r\n","import axios from \"axios\";\r\nimport { Cookies } from \"react-cookie\";\r\nimport { BASE_URL } from \"./const\";\r\n\r\nconst cookies = new Cookies();\r\n\r\nexport const getCurrentUserInfo = async () => {\r\n  const userInfoRes = await axios.get(`${BASE_URL}/user/me`, {\r\n    headers: { sessionId: cookies.get(\"sessionId\") }\r\n  });\r\n\r\n  if (userInfoRes.statusText === \"OK\") {\r\n    return userInfoRes.data.result;\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nexport const updateCurrentUserAvatar = async (accIdx, nickname = \"테스트\") => {\r\n  const res = await axios.put(\r\n    `${BASE_URL}/user`,\r\n    { avatarAccessoryIndex: accIdx, nickname: nickname },\r\n    { headers: { sessionId: cookies.get(\"sessionId\") } }\r\n  );\r\n\r\n  if (res.statusText === \"OK\") {\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n};\r\n\r\nexport const getPlayerInfoByUserId = async (userId) => {\r\n  const res = await axios.get(`${BASE_URL}/user/${userId}`, {\r\n    headers: { sessionId: cookies.get(\"sessionId\") }\r\n  });\r\n\r\n  if (res.statusText === \"OK\") {\r\n    return res.data.result;\r\n  }\r\n\r\n  return null;\r\n};\r\n"],"names":["ChatItem","nickname","message","createdAt","_jsxs","ChatContent","children","_jsx","NickName","row","col","Message","marginLeft","styled","FlexBox","propTypes","PropTypes","ReportManagementList","type","onSideOpen","cookies","useCookies","data","setData","useState","selectedFilterOptions","setSelectedFilterOptions","types","isOffensive","isPoorManner","isCheating","isHandled","currPage","setCurrPage","lastPageIdx","setLastPageIdx","apiConfig","setApiConfig","method","url","headers","sessionId","response","loading","error","fetchData","useAxios","filterOptions","map","key","values","useEffect","result","lastPage","list","id","reporterNickname","note","reporteeNickname","length","filteredData","Object","entries","forEach","value","sort","a","b","Date","filter","item","every","typeKey","typeValue","queryString","join","_Fragment","Box","HeaderWrapper","ManagementTitle","title","FilterWrapper","marginTop","marginRight","Filter","ManagementList","isHome","Pagination","div","filterLabels","needAnswer","isClicked","setIsClicked","reduce","acc","isChecked","setIsChecked","option","obj","FilterListWrapper","idx","FilterItemWrapper","getFilterLabel","FilterImage","src","defaultFilter","onClick","prev","onMouseOver","e","target","setAttribute","onMouseOut","FilterList","dir","FilterListItem","onApplyFilter","newFilterOptions","checked","onChange","onCheckboxChange","updated","prevOptions","getFilterItemText","img","attrs","as","props","theme","colors","content","li","ReportManagementDetailTable","isLogsOpen","setIsLogsOpen","Table","TableHead","IconWrapper","WarningIcon","icon","faTriangleExclamation","TextWrapper","reporteeId","TableRow","TableCell","TableCellLabel","TableCellContent","reporterId","formatDateToTimestamp","_key","_value","roomId","SkyBlueTableHead","width","margin","expiredAt","clickable","FontAwesomeIcon","faAngleDown","position","bgColor","border","logs","log","i","ChatItemWrapper","Array","isArray","chat","fontSize","xxs","xxxs","xl","ReportManagementDetail","gameroomData","setGameroomData","gameroomChatData","setGameroomChatData","roomApiConfig","chatApiConfig","roomRes","roomLoading","roomErr","fetchRoomData","chatRes","chatLoading","chatErr","fetchChatData","async","updatedChatRes","Promise","all","reverse","userId","getNicknameByUserId","fetchNicknamesAndSetChatData","getPlayerInfoByUserId","DetailWrapper","UpperBoxWrapper","height","ReportManagement","isAcitveSideContentType","setIsActiveSideContentType","useRecoilState","isActiveSideContentTypeState","itemId","setItemId","itemIdState","reportData","setReportData","rest","ContentWrapper","WideContent","Header","Main","ListWrapper","atom","default","dateString","date","yyyy","getFullYear","MM","String","getMonth","padStart","dd","getDate","hh","getHours","mm","getMinutes","ss","getSeconds","concat","Cookies","getCurrentUserInfo","userInfoRes","axios","get","BASE_URL","statusText","updateCurrentUserAvatar","accIdx","arguments","undefined","put","avatarAccessoryIndex","res"],"sourceRoot":""}