{"version":3,"file":"static/js/589.adb1c0d6.chunk.js","mappings":"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","sources":["components/Web/Shared/Buttons/Button.jsx","components/Web/Shared/Layout/HeaderTab.jsx","components/Web/Shared/Layout/Header.jsx","styles/FlexStyle.jsx","hooks/useAxios.js","recoil/userState.js"],"sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst getDimensions = (type) => {\r\n  switch (type) {\r\n    case \"bigBrown\":\r\n      return {\r\n        width: \"100%\",\r\n        height: \"4.3rem\"\r\n      };\r\n    case \"smallBrown\":\r\n      return {\r\n        width: \"15rem\",\r\n        height: \"4.688rem\"\r\n      };\r\n    case \"modal\":\r\n      return {\r\n        width: \"11rem\",\r\n        height: \"3.625rem\"\r\n      };\r\n    case \"bigTransparent\":\r\n      return {\r\n        width: \"9rem\",\r\n        height: \"4.3rem\"\r\n      };\r\n    case \"smallTransparent\":\r\n      return {\r\n        width: \"6rem\",\r\n        height: \"3rem\"\r\n      };\r\n    case \"smallDark\":\r\n      return {\r\n        width: \"6rem\",\r\n        height: \"3rem\"\r\n      };\r\n    case \"smallGray\":\r\n      return {\r\n        width: \"6rem\",\r\n        height: \"3rem\"\r\n      };\r\n    case \"miniBlue\":\r\n      return {\r\n        width: \"2.875rem\",\r\n        height: \"1.688rem\"\r\n      };\r\n    case \"miniRed\":\r\n      return {\r\n        width: \"2.875rem\",\r\n        height: \"1.688rem\"\r\n      };\r\n  }\r\n};\r\n\r\nconst getColors = (type) => {\r\n  switch (type) {\r\n    case \"bigBrown\":\r\n      return {\r\n        bgColor: \"#413014\",\r\n        textColor: \"#ffffff\",\r\n        hoverBgColor: \"#554730\"\r\n      };\r\n    case \"smallBrown\":\r\n      return {\r\n        bgColor: \"#413014\",\r\n        textColor: \"#ffffff\",\r\n        hoverBgColor: \"#554730\"\r\n      };\r\n    case \"modal\":\r\n      return {\r\n        bgColor: \"#e5e5e5\",\r\n        textColor: \"#7d7d7d\",\r\n        hoverBgColor: \"#c1c1c1\"\r\n      };\r\n    case \"bigTransparent\":\r\n      return {\r\n        bgColor: \"transparent\",\r\n        textColor: \"#363636\",\r\n        hoverBgColor: \"#ffffff32\"\r\n      };\r\n    case \"smallTransparent\":\r\n      return {\r\n        bgColor: \"transparent\",\r\n        textColor: \"#000\",\r\n        hoverBgColor: \"#ffffff32\"\r\n      };\r\n    case \"smallDark\":\r\n      return {\r\n        bgColor: \"#585858\",\r\n        textColor: \"#fff\",\r\n        hoverBgColor: \"#7d7d7d\"\r\n      };\r\n    case \"smallGray\":\r\n      return {\r\n        bgColor: \"#aaa\",\r\n        textColor: \"#000\",\r\n        hoverBgColor: \"#c1c1c1\"\r\n      };\r\n    case \"miniBlue\":\r\n      return {\r\n        bgColor: \"transparent\",\r\n        textColor: \"#486dff\"\r\n      };\r\n    case \"miniRed\":\r\n      return {\r\n        bgColor: \"transparent\",\r\n        textColor: \"#ff6c6c\"\r\n      };\r\n  }\r\n};\r\n\r\nconst getFonts = (type) => {\r\n  switch (type) {\r\n    case \"bigBrown\":\r\n      return {\r\n        size: \"27px\",\r\n        weight: \"700\"\r\n      };\r\n    case \"smallBrown\":\r\n      return {\r\n        size: \"28px\",\r\n        weight: \"700\"\r\n      };\r\n    case \"modal\":\r\n      return {\r\n        size: \"22px\",\r\n        weight: \"500\"\r\n      };\r\n    case \"bigTransparent\":\r\n      return {\r\n        size: \"22px\",\r\n        weight: \"700\"\r\n      };\r\n    case \"smallTransparent\":\r\n      return {\r\n        size: \"18px\",\r\n        weight: \"700\"\r\n      };\r\n    case \"smallDark\":\r\n      return {\r\n        size: \"18px\",\r\n        weight: \"700\"\r\n      };\r\n    case \"smallGray\":\r\n      return {\r\n        size: \"18px\",\r\n        weight: \"700\"\r\n      };\r\n    case \"miniBlue\":\r\n      return {\r\n        size: \"14px\",\r\n        weight: \"700\"\r\n      };\r\n    case \"miniRed\":\r\n      return {\r\n        size: \"14px\",\r\n        weight: \"700\"\r\n      };\r\n  }\r\n};\r\n\r\nconst getBorder = (type) => {\r\n  switch (type) {\r\n    case \"modal\":\r\n      return {\r\n        style: \"solid\",\r\n        width: \"1px\",\r\n        color: \"#929292\"\r\n        // border: \"1px solid #929292\"\r\n      };\r\n    case \"bigTransparent\":\r\n      return {\r\n        style: \"solid\",\r\n        width: \"2px\",\r\n        color: \"#929292\"\r\n        // border: \"2px solid #7d7d7d\"\r\n      };\r\n    case \"smallTransparent\":\r\n      return {\r\n        style: \"solid\",\r\n        width: \"1px\",\r\n        color: \"#000\"\r\n        // border: \"1px solid #000\"\r\n      };\r\n    case \"miniBlue\":\r\n      return {\r\n        style: \"solid\",\r\n        width: \"1px\",\r\n        color: \"#486dff\"\r\n        // border: \"1px solid #486dff\"\r\n      };\r\n    case \"miniRed\":\r\n      return {\r\n        style: \"solid\",\r\n        width: \"1px\",\r\n        color: \"#ff6c6c\"\r\n        // border: \"1px solid #ff6c6c\"\r\n      };\r\n    default:\r\n      return {\r\n        style: null,\r\n        width: null,\r\n        color: null\r\n      };\r\n  }\r\n};\r\n\r\nconst StyledButton = styled.button`\r\n  width: ${({ type }) => getDimensions(type).width};\r\n  height: ${({ type }) => getDimensions(type).height};\r\n\r\n  background-color: ${({ type }) => getColors(type).bgColor};\r\n  color: ${({ type }) => getColors(type).textColor};\r\n\r\n  font-size: ${({ type }) => getFonts(type).size};\r\n  font-weight: ${({ type }) => getFonts(type).weight};\r\n\r\n  // border: ${({ type }) => getBorder(type).border};\r\n\r\n  border-style: ${({ type }) => getBorder(type)?.style};\r\n  border-width: ${({ type }) => getBorder(type)?.width};\r\n  border-color: ${({ type }) => getBorder(type)?.color};\r\n\r\n  border-radius: ${({ type }) => getBorder(type)?.radius};\r\n\r\n  &:hover {\r\n    ${({ type }) => getColors(type).hoverBgColor};\r\n  }\r\n`;\r\n\r\nconst Button = ({ type, onClick, message }) => {\r\n  // type : bigBrown, smallBrown, modal, bigTransparent, smallTransparent, smallDark, smallGray, miniBlue, miniRed\r\n  return (\r\n    <StyledButton type={type} onClick={onClick}>\r\n      {message}\r\n    </StyledButton>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  type: PropTypes.string,\r\n  message: PropTypes.string,\r\n  onClick: PropTypes.func\r\n};\r\n\r\nexport default Button;\r\n\r\n// const Button = ({ type, message, onClick }) => {\r\n//   return (\r\n//     <>\r\n//       {type === \"bigBrown\" && (\r\n//         <BigSubmitBrownButton onClick={onClick}>{message}</BigSubmitBrownButton>\r\n//       )}\r\n//       {type === \"smallBrown\" && (\r\n//         <SmallSubmitBrownButton onClick={onClick}>{message}</SmallSubmitBrownButton>\r\n//       )}\r\n//       {type === \"modal\" && <ModalGrayButton onClick={onClick}>{message}</ModalGrayButton>}\r\n//       {type === \"bigTransparent\" && (\r\n//         <BigTransparentButton onClick={onClick}>{message}</BigTransparentButton>\r\n//       )}\r\n//       {type === \"smallTransparent\" && (\r\n//         <SmallTransparentButton onClick={onClick}>{message}</SmallTransparentButton>\r\n//       )}\r\n//       {type === \"smallDark\" && (\r\n//         <SmallDarkButton onClick={onClick}>{message}</SmallDarkButton>\r\n//       )}\r\n//       {type === \"smallGray\" && (\r\n//         <SmallGrayButton onClick={onClick}>{message}</SmallGrayButton>\r\n//       )}\r\n//       {type === \"miniBlue\" && (\r\n//         <MiniBlueButton onClick={onClick}>{message}</MiniBlueButton>\r\n//       )}\r\n//       {type === \"miniRed\" && <MiniRedButton onClick={onClick}>{message}</MiniRedButton>}\r\n//     </>\r\n//   );\r\n// };\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { FlexBox } from \"@/styles/FlexStyle\";\r\n\r\nconst HeaderTab = ({ type = \"default\" }) => {\r\n  const location = useLocation();\r\n  const [clickedTab, setClickedTab] = useState(false);\r\n  const tabsRef = useRef([React.createRef(), React.createRef(), React.createRef()]);\r\n\r\n  useEffect(() => {\r\n    const path = location.pathname;\r\n    if (path.includes(\"notice\")) {\r\n      setClickedTab(0);\r\n    } else if (path.includes(\"inquiry\")) {\r\n      setClickedTab(1);\r\n    } else if (path.includes(\"member\")) {\r\n      setClickedTab(2);\r\n    }\r\n  }, [location]);\r\n\r\n  const handleClick = (e) => {\r\n    const tabIdx = tabsRef.current.findIndex((tab) => tab.current === e.target);\r\n    setClickedTab(tabIdx);\r\n  };\r\n\r\n  return (\r\n    <TabWrapper\r\n      align=\"flex-end\"\r\n      width=\"20rem\"\r\n      row={type === \"guest\" ? \"end\" : \"between\"}\r\n      onClick={handleClick}\r\n    >\r\n      {type === \"clearTab\" || type === \"detail\" ? (\r\n        <>\r\n          <BottomLink to=\"/notice/list\">\r\n            <SpringTab type={type} ref={tabsRef.current[0]} clicked={clickedTab === 0}>\r\n              공지\r\n            </SpringTab>\r\n          </BottomLink>\r\n          <BottomLink to=\"/inquiry/list\">\r\n            <SpringTab type={type} ref={tabsRef.current[1]} clicked={clickedTab === 1}>\r\n              1:1 문의\r\n            </SpringTab>\r\n          </BottomLink>\r\n          <BottomLink to=\"/member/myInfo\">\r\n            <SpringTab type={type} ref={tabsRef.current[2]} clicked={clickedTab === 2}>\r\n              내 정보\r\n            </SpringTab>\r\n          </BottomLink>\r\n        </>\r\n      ) : (\r\n        <BottomLink to=\"/member/join\">\r\n          <SpringTab type={type} ref={tabsRef.current[2]} clicked={clickedTab === 2}>\r\n            회원가입\r\n          </SpringTab>\r\n        </BottomLink>\r\n      )}\r\n    </TabWrapper>\r\n  );\r\n};\r\n\r\n// 탭을 감싸는 태그\r\nconst TabWrapper = styled(FlexBox)`\r\n  flex-basis: ${(props) => props.width || auto};\r\n  align-self: ${(props) => props.align || auto};\r\n`;\r\n\r\n// 아래로 향하는 링크\r\nconst BottomLink = styled(Link)`\r\n  align-self: flex-end;\r\n`;\r\n\r\n// 탭 버튼\r\nconst SpringTab = styled(FlexBox).attrs({ row: \"center\", col: \"center\" })`\r\n  width: 6.3rem;\r\n  height: ${(props) => (props.clicked ? \"2.25rem\" : \"3rem\")};\r\n  background-color: ${(props) => {\r\n    if (props.type === \"detail\") {\r\n      return props.clicked ? props.theme.colors.content : props.theme.colors.paleBlueGray;\r\n    } else {\r\n      return \"transparent\";\r\n    }\r\n  }};\r\n  border-radius: 15px 15px 0 0;\r\n  padding-top: ${({ type }) => (type === \"clearTab\" ? \"0\" : \"14px\")};\r\n  font-family: \"Noto Sans KR\";\r\n  font-weight: 600;\r\n  font-size: 19px;\r\n  color: #4e4e4e;\r\n  align-self: flex-end;\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n    background-color: ${(props) => {\r\n      if (props.type === \"detail\") {\r\n        return props.clicked ? \"#F2F2F2\" : \"#94a7c1\";\r\n      } else {\r\n        return \"transparent\";\r\n      }\r\n    }};\r\n  }\r\n`;\r\n\r\nHeaderTab.propTypes = {\r\n  type: PropTypes.string\r\n};\r\n\r\nexport default HeaderTab;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useSetRecoilState } from \"recoil\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport useAxios from \"@/hooks/useAxios\";\r\nimport { FlexBox } from \"@/styles/FlexStyle\";\r\nimport HeaderTab from \"./HeaderTab\";\r\nimport logo from \"@/assets/images/logo.png\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlay, faSignOut } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { userInfoState } from \"@/recoil/userState\";\r\n\r\nconst Header = ({ type = \"default\" }) => {\r\n  const setUser = useSetRecoilState(userInfoState);\r\n  const [headerBgColor, setHeaderBgColor] = useState(\"transparent\");\r\n  const [headerShadow, setHeaderShadow] = useState();\r\n  const navigate = useNavigate();\r\n  const [cookies, , removeCookie] = useCookies([\"sessionId\"]);\r\n  const [apiConfig, setApiConfig] = useState(null);\r\n  const { response, loading, error, fetchData } = useAxios(apiConfig, false);\r\n\r\n  useEffect(() => {\r\n    if (apiConfig !== null) {\r\n      fetchData();\r\n    }\r\n  }, [apiConfig]);\r\n\r\n  useEffect(() => {\r\n    if (response !== null) {\r\n      setUser(null);\r\n      removeCookie(\"sessionId\", { path: \"/\" });\r\n      if (cookies?.userRole) {\r\n        removeCookie(\"userRole\", { path: \"/\" });\r\n      }\r\n      navigate(\"/\");\r\n    }\r\n  }, [response]);\r\n\r\n  const checkScrollTop = () => {\r\n    if (window.scrollY > 0) {\r\n      setHeaderBgColor(\"#EAEFF9\");\r\n      setHeaderShadow(\"-14px 15px 30px #EAEFF9\");\r\n    } else {\r\n      setHeaderBgColor(\"transparent\");\r\n      setHeaderShadow(\"none\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", checkScrollTop);\r\n    return () => window.removeEventListener(\"scroll\", checkScrollTop);\r\n  }, []);\r\n\r\n  return (\r\n    <FixedHeader color={headerBgColor} shadow={headerShadow}>\r\n      <HeaderContent type={type}>\r\n        <Link to=\"/\">\r\n          <LogoImg src={logo} type={type} />\r\n        </Link>\r\n        {(type === \"detail\" || type === \"clearTab\" || type === \"guest\") && (\r\n          <HeaderTab type={type}></HeaderTab>\r\n        )}\r\n        {(type === \"admin\" || type === \"admin-detail\") && (\r\n          <ButtonWrapper>\r\n            <Link to=\"/game\">\r\n              <GameButton>\r\n                <FontAwesomeIcon icon={faPlay} color=\"#FAC138\" />\r\n                게임시작\r\n              </GameButton>\r\n            </Link>\r\n            <LogoutButton\r\n              onClick={() =>\r\n                setApiConfig({\r\n                  method: \"get\",\r\n                  url: \"/user/signout\",\r\n                  headers: {\r\n                    sessionId: cookies.sessionId\r\n                  }\r\n                })\r\n              }\r\n            >\r\n              <LogoutIcon icon={faSignOut} />\r\n            </LogoutButton>\r\n          </ButtonWrapper>\r\n        )}\r\n      </HeaderContent>\r\n    </FixedHeader>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  type: PropTypes.string\r\n};\r\n\r\nconst FixedHeader = styled(FlexBox).attrs(() => ({\r\n  as: \"header\",\r\n  row: \"center\"\r\n}))`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  background-color: ${({ color }) => color};\r\n  box-shadow: ${({ shadow }) => shadow};\r\n  z-index: 3;\r\n`;\r\n\r\nconst HeaderContent = styled(FlexBox).attrs(({ type }) => ({\r\n  row: type === \"big\" ? \"center\" : \"between\",\r\n  col: \"center\"\r\n}))`\r\n  width: ${({ type }) =>\r\n    type === \"admin\" ? \"100%\" : type === \"admin-detail\" ? \"84rem\" : \"75rem\"};\r\n  height: ${({ type }) =>\r\n    type === \"big\"\r\n      ? \"10rem\"\r\n      : type === \"guest\"\r\n        ? \"8.5rem\"\r\n        : type === \"admin-detail\"\r\n          ? \"6.5rem\"\r\n          : \"7.5rem\"};\r\n  padding: ${({ type }) => (type === \"admin\" ? \"0 60px\" : \"0 30px\")};\r\n`;\r\n\r\n// 로고 이미지 사이즈 조정\r\nconst setLogoSize = (type) => {\r\n  switch (type) {\r\n    case \"big\":\r\n      return ` width: 5.5rem; `;\r\n    default:\r\n      return ` width: 4rem; `;\r\n  }\r\n};\r\n\r\n// 로고 이미지\r\nconst LogoImg = styled.img`\r\n  ${({ type }) => setLogoSize(type)};\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst ButtonWrapper = styled(FlexBox)``;\r\n\r\nconst GameButton = styled.button`\r\n  width: 11.8rem;\r\n  height: 4.5rem;\r\n  font-family: \"Pretendard Variable\";\r\n  font-size: 25px;\r\n  font-weight: 800;\r\n  background-color: #fce8b7;\r\n  border: 5px solid #ffd46c;\r\n  border-radius: 22px;\r\n  border-top-right-radius: 0;\r\n  border-bottom-right-radius: 0;\r\n  color: #403a34;\r\n\r\n  & > svg {\r\n    margin-right: 12px;\r\n  }\r\n\r\n  &:hover {\r\n    background-color: rgb(255 211 104);\r\n  }\r\n`;\r\n\r\nconst LogoutButton = styled.button`\r\n  width: 5rem;\r\n  height: 4.5rem;\r\n  font-family: \"Pretendard Variable\";\r\n  font-size: 25px;\r\n  font-weight: 800;\r\n  background-color: rgb(219 219 219);\r\n  border: 5px solid rgb(187 187 187);\r\n  border-radius: 22px;\r\n  border-top-left-radius: 0;\r\n  border-bottom-left-radius: 0;\r\n\r\n  &:hover {\r\n    background-color: rgb(207 207 207);\r\n  }\r\n`;\r\n\r\nconst LogoutIcon = styled(FontAwesomeIcon)`\r\n  font-size: 25px;\r\n  color: ${({ theme }) => theme.colors.text.main};\r\n`;\r\n\r\nexport default Header;\r\n","import styled from \"styled-components\";\r\n\r\nexport const FlexBox = styled.div`\r\n  display: flex;\r\n  flex-direction: ${({ dir }) => setFlexDirection(dir)};\r\n  justify-content: ${({ row }) => setJustifyContent(row)};\r\n  align-items: ${({ col }) => setAlignItems(col)};\r\n  position: ${({ position }) => position};\r\n  top: ${({ top }) => top};\r\n  bottom: ${({ bottom }) => bottom};\r\n  left: ${({ left }) => left};\r\n  right: ${({ right }) => right};\r\n  width: ${({ width }) => width};\r\n  height: ${({ height }) => height};\r\n  margin: ${({ margin }) => margin};\r\n  padding: ${({ padding }) => padding};\r\n  flex: ${({ flex }) => flex};\r\n  background-color: ${({ bgColor }) => bgColor};\r\n  box-shadow: ${({ shadow }) => shadow};\r\n  border: ${({ border }) => border};\r\n  border-top: ${({ borderTop }) => borderTop};\r\n  border-right: ${({ borderRight }) => borderRight};\r\n  border-bottom: ${({ borderBottom }) => borderBottom};\r\n  border-left: ${({ borderLeft }) => borderLeft};\r\n  border-radius: ${({ borderRadius }) => borderRadius};\r\n  z-index: ${({ zIndex }) => zIndex};\r\n\r\n  ${({ clicky }) =>\r\n    clicky &&\r\n    `\r\n    :hover {\r\n      cursor: pointer;\r\n    }\r\n  `}\r\n`;\r\n\r\n// flex-box의 flex-direction 설정\r\nconst setFlexDirection = (dir) => {\r\n  switch (dir) {\r\n    case \"col\":\r\n      return \"column\";\r\n  }\r\n};\r\n\r\n// flex-box 안의 justify-content 값 설정\r\nconst setJustifyContent = (row) => {\r\n  switch (row) {\r\n    case \"center\":\r\n      return \"center\";\r\n    case \"start\":\r\n      return \"flex-start\";\r\n    case \"end\":\r\n      return \"flex-end\";\r\n    case \"between\":\r\n      return \"space-between\";\r\n    case \"around\":\r\n      return \"space-around\";\r\n    case \"evenly\":\r\n      return \"space-evenly\";\r\n    default:\r\n      return \"flex-start\";\r\n  }\r\n};\r\n\r\n// flex-box 안의 align-items 값 설정\r\nconst setAlignItems = (col) => {\r\n  switch (col) {\r\n    case \"center\":\r\n      return \"center\";\r\n    case \"start\":\r\n      return \"flex-start\";\r\n    case \"end\":\r\n      return \"flex-end\";\r\n    case \"baseline\":\r\n      return \"baseline\";\r\n    case \"stretch\":\r\n      return \"stretch\";\r\n    default:\r\n      return \"stretch\";\r\n  }\r\n};\r\n\r\nexport default FlexBox;\r\n","import { useRef, useEffect, useState, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../services/const\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: BASE_URL\r\n  // withCredentials: true\r\n});\r\n\r\n// config = { method, url, headers, data }\r\nconst useAxios = (config, executeOnMount = true) => {\r\n  const isDataFetched = useRef(false);\r\n  const [response, setResponse] = useState(null);\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const fetchData = useCallback(async () => {\r\n    setLoading(true);\r\n    setError(\"\");\r\n    try {\r\n      const res = await instance.request(config);\r\n      setResponse(res.data);\r\n    } catch (error) {\r\n      setError(error.response?.data.error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [config]);\r\n\r\n  useEffect(() => {\r\n    if (isDataFetched.current) return;\r\n\r\n    if (executeOnMount) {\r\n      fetchData();\r\n      isDataFetched.current = true;\r\n    }\r\n  }, [executeOnMount]);\r\n\r\n  return { response, error, loading, fetchData };\r\n};\r\n\r\nexport default useAxios;\r\n","import { atom, selector, selectorFamily } from \"recoil\";\r\n\r\nexport const userInfoState = atom({\r\n  key: \"userInfoState\",\r\n  default: null // e.g., { username: \"username\", nickname: \"nickname\", role: \"admin\", level: 1, winRate: 0.0, exp: 0, avatarUrl: \"\" }\r\n});\r\n\r\n// userState -> avatarUrl만 추출\r\nexport const avatarUrlState = selector({\r\n  key: \"avatarUrlState\",\r\n  get: ({ get }) => {\r\n    const user = get(userInfoState);\r\n    return user?.avatarUrl;\r\n  }\r\n});\r\n\r\n// userState -> isActive(활성화 여부)만 추출\r\nexport const isActiveAccountState = atom({\r\n  key: \"isActiveAccountState\",\r\n  default: true\r\n});\r\n\r\n// read-only\r\n// export const isActiveAccountState = selector({\r\n//   key: \"isActiveAccountState\",\r\n//   get: ({ get }) => {\r\n//     const user = get(userInfoState);\r\n//     return user.isActive;\r\n//   }\r\n// });\r\n\r\n// 대기실 플레이어들의 상태 목록\r\nexport const waitingPlayerListState = atom({\r\n  key: \"waitingPlayerListState\",\r\n  default: []\r\n});\r\n\r\n// 대기실 플레이어의 상태\r\nexport const waitingPlayerState = atom({\r\n  key: \"waitingPlayerState\",\r\n  default: {\r\n    isReady: false,\r\n    isHost: true\r\n  }\r\n});\r\n\r\n// 인게임 플레이어들의 상태 목록\r\nexport const playingPlayerListState = atom({\r\n  key: \"playingPlayerListState\",\r\n  default: []\r\n});\r\n\r\n// 인게임 플레이어의 상태\r\nexport const playingPlayerState = atom({\r\n  key: \"playingPlayerState\",\r\n  default: {\r\n    myTurn: false,\r\n    score: 0\r\n  }\r\n\r\n  // get:\r\n  //   () =>\r\n  //   ({ get }) => {\r\n  //     const user = get(userInfoState);\r\n  //     return {\r\n  //       ...user,\r\n  //       myTurn: false,\r\n  //       roundScore: [],\r\n  //       totalScore: 0\r\n  //     };\r\n  //   },\r\n  // set:\r\n  //   () =>\r\n  //   ({ set }, newValue) => {\r\n  //     set(playingPlayerState(), newValue);\r\n  //   }\r\n});\r\n\r\n// 인게임 플레이어 -> 인게임 플레이어들 목록 동기화\r\nexport const syncPlayingPlayerToListState = selector({\r\n  key: \"syncPlayingPlayerToListState\",\r\n  get: ({ get }) => {\r\n    const playerList = get(playingPlayerListState);\r\n    const currPlayer = get(playingPlayerState);\r\n    return playerList.map((player) =>\r\n      player.id === currPlayer.id ? currPlayer : player\r\n    );\r\n  },\r\n  set: ({ set }, newValue) => {\r\n    set(playingPlayerListState, newValue);\r\n  }\r\n});\r\n"],"names":["getDimensions","type","width","height","getColors","bgColor","textColor","hoverBgColor","getFonts","size","weight","getBorder","style","color","StyledButton","styled","button","border","radius","Button","onClick","message","_jsx","children","propTypes","PropTypes","HeaderTab","location","useLocation","clickedTab","setClickedTab","useState","tabsRef","useRef","React","useEffect","path","pathname","includes","TabWrapper","align","row","e","tabIdx","current","findIndex","tab","target","_jsxs","_Fragment","BottomLink","to","SpringTab","ref","clicked","FlexBox","props","auto","Link","attrs","col","theme","colors","content","paleBlueGray","Header","setUser","useSetRecoilState","userInfoState","headerBgColor","setHeaderBgColor","headerShadow","setHeaderShadow","navigate","useNavigate","cookies","removeCookie","useCookies","apiConfig","setApiConfig","response","loading","error","fetchData","useAxios","userRole","checkScrollTop","window","scrollY","addEventListener","removeEventListener","FixedHeader","shadow","HeaderContent","LogoImg","src","ButtonWrapper","GameButton","FontAwesomeIcon","icon","faPlay","LogoutButton","method","url","headers","sessionId","LogoutIcon","faSignOut","as","img","setLogoSize","text","main","div","dir","setFlexDirection","setJustifyContent","setAlignItems","position","top","bottom","left","right","margin","padding","flex","borderTop","borderRight","borderBottom","borderLeft","borderRadius","zIndex","clicky","instance","axios","create","baseURL","BASE_URL","config","executeOnMount","arguments","length","undefined","isDataFetched","setResponse","setError","setLoading","useCallback","async","res","request","data","_error$response","atom","key","default","isActiveAccountState","selector","get","_ref","user","avatarUrl","waitingPlayerListState","playingPlayerListState","isReady","isHost","playingPlayerState","myTurn","score","syncPlayingPlayerToListState","_ref2","playerList","currPlayer","map","player","id","set","_ref3","newValue"],"sourceRoot":""}