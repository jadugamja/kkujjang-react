{"version":3,"file":"static/js/755.35a2f942.chunk.js","mappings":"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","sources":["assets/images/acc_angel-ring.svg","assets/images/acc_shining.svg","assets/images/acc_cowboy-hat.svg","assets/images/acc_frustration.svg","assets/images/acc_water-drop.svg","assets/images/acc_heart-sunglasses.svg","assets/images/acc_sunglasses.svg","assets/images/acc_bandage.svg","assets/images/acc_tomato-top.svg","components/Game/Shared/AvatarCanvas.jsx","components/Game/Shared/VolumeControl.jsx","components/Game/Shared/GameModal.jsx","components/Game/Shared/GameModalStyle.jsx","components/Game/Shared/Player.jsx","components/Game/Shared/Profile.jsx","components/Game/Shared/TitleBar.jsx","components/Web/Shared/Form/ValidationMessageStyle.jsx","components/Web/Shared/Form/ValidationMessage.jsx","router/GameRoutes.jsx","styles/FlexStyle.jsx","hooks/useAxios.js","recoil/boardState.js","recoil/roomState.js","recoil/userState.js","services/regexp.js","services/socket.js","services/user.js"],"sourcesContent":["var _path, _g, _defs;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgAccAngelRing(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 135,\n    height: 75,\n    viewBox: \"0 0 135 75\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M112 39V70\",\n    stroke: \"white\",\n    strokeWidth: 4,\n    strokeLinecap: \"round\"\n  })), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    filter: \"url(#filter0_d_2027_3646)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M112 37.5C112 38.9558 111.174 40.6173 109.06 42.3903C106.957 44.1547 103.795 45.8335 99.7116 47.2824C91.563 50.1739 80.1746 52 67.5 52C54.8254 52 43.437 50.1739 35.2884 47.2824C31.2051 45.8335 28.0427 44.1547 25.9396 42.3903C23.8262 40.6173 23 38.9558 23 37.5C23 36.0442 23.8262 34.3827 25.9396 32.6097C28.0427 30.8453 31.2051 29.1665 35.2884 27.7176C43.437 24.8261 54.8254 23 67.5 23C80.1746 23 91.563 24.8261 99.7116 27.7176C103.795 29.1665 106.957 30.8453 109.06 32.6097C111.174 34.3827 112 36.0442 112 37.5Z\",\n    stroke: \"white\",\n    strokeWidth: 4,\n    shapeRendering: \"crispEdges\"\n  }))), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"filter\", {\n    id: \"filter0_d_2027_3646\",\n    x: 0,\n    y: 0,\n    width: 135,\n    height: 75,\n    filterUnits: \"userSpaceOnUse\",\n    colorInterpolationFilters: \"sRGB\"\n  }, /*#__PURE__*/React.createElement(\"feFlood\", {\n    floodOpacity: 0,\n    result: \"BackgroundImageFix\"\n  }), /*#__PURE__*/React.createElement(\"feColorMatrix\", {\n    in: \"SourceAlpha\",\n    type: \"matrix\",\n    values: \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\",\n    result: \"hardAlpha\"\n  }), /*#__PURE__*/React.createElement(\"feMorphology\", {\n    radius: 12,\n    operator: \"dilate\",\n    in: \"SourceAlpha\",\n    result: \"effect1_dropShadow_2027_3646\"\n  }), /*#__PURE__*/React.createElement(\"feOffset\", null), /*#__PURE__*/React.createElement(\"feGaussianBlur\", {\n    stdDeviation: 4.5\n  }), /*#__PURE__*/React.createElement(\"feComposite\", {\n    in2: \"hardAlpha\",\n    operator: \"out\"\n  }), /*#__PURE__*/React.createElement(\"feColorMatrix\", {\n    type: \"matrix\",\n    values: \"0 0 0 0 0.953747 0 0 0 0 0.871166 0 0 0 0 0.437617 0 0 0 0.25 0\"\n  }), /*#__PURE__*/React.createElement(\"feBlend\", {\n    mode: \"normal\",\n    in2: \"BackgroundImageFix\",\n    result: \"effect1_dropShadow_2027_3646\"\n  }), /*#__PURE__*/React.createElement(\"feBlend\", {\n    mode: \"normal\",\n    in: \"SourceGraphic\",\n    in2: \"effect1_dropShadow_2027_3646\",\n    result: \"shape\"\n  })))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgAccAngelRing);\nexport default __webpack_public_path__ + \"static/media/acc_angel-ring.655c7156a3a92109e55814e2f1c8326e.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2, _path3;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgAccShining(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 36,\n    height: 93,\n    viewBox: \"0 0 36 93\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M7.65939 0L9.57547 20.5189L14.5 22.7075L9.57547 25.8538L7.65939 40.4906L5.19811 25.8538L0 22.7075L5.19811 20.5189L7.65939 0Z\",\n    fill: \"#F2EC57\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M28.6594 23L30.5755 43.5189L35.5 45.7075L30.5755 48.8538L28.6594 63.4906L26.1981 48.8538L21 45.7075L26.1981 43.5189L28.6594 23Z\",\n    fill: \"#F2EC57\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M11.6594 52L13.5755 72.5189L18.5 74.7075L13.5755 77.8538L11.6594 92.4906L9.19811 77.8538L4 74.7075L9.19811 72.5189L11.6594 52Z\",\n    fill: \"#F2EC57\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgAccShining);\nexport default __webpack_public_path__ + \"static/media/acc_shining.dd090ffaf537a34ab6c391cfbe4fde03.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _rect, _rect2, _path2, _path3, _path4, _path5, _path6, _path7;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgAccCowboyHat(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 169,\n    height: 45,\n    viewBox: \"0 0 169 45\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M31 3C31 1.34315 32.3431 0 34 0H136C137.657 0 139 1.34315 139 3V26H31V3Z\",\n    fill: \"#BF6F38\"\n  })), _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    y: 27,\n    width: 169,\n    height: 18,\n    rx: 1,\n    fill: \"#B05C22\"\n  })), _rect2 || (_rect2 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 31,\n    y: 23,\n    width: 108,\n    height: 5,\n    fill: \"#EFE84C\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M126.5 3L127.061 4.38197H128.878L127.408 5.23607L127.969 6.61803L126.5 5.76393L125.031 6.61803L125.592 5.23607L124.122 4.38197H125.939L126.5 3Z\",\n    fill: \"#F4F4F4\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M133.5 6L134.061 7.38197H135.878L134.408 8.23607L134.969 9.61803L133.5 8.76393L132.031 9.61803L132.592 8.23607L131.122 7.38197H132.939L133.5 6Z\",\n    fill: \"#F4F4F4\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M134.5 12L135.061 13.382H136.878L135.408 14.2361L135.969 15.618L134.5 14.7639L133.031 15.618L133.592 14.2361L132.122 13.382H133.939L134.5 12Z\",\n    fill: \"#F4F4F4\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M120.5 8L121.061 9.38197H122.878L121.408 10.2361L121.969 11.618L120.5 10.7639L119.031 11.618L119.592 10.2361L118.122 9.38197H119.939L120.5 8Z\",\n    fill: \"#F4F4F4\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M120.5 14L121.061 15.382H122.878L121.408 16.2361L121.969 17.618L120.5 16.7639L119.031 17.618L119.592 16.2361L118.122 15.382H119.939L120.5 14Z\",\n    fill: \"#F4F4F4\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M127.5 17L128.061 18.382H129.878L128.408 19.2361L128.969 20.618L127.5 19.7639L126.031 20.618L126.592 19.2361L125.122 18.382H126.939L127.5 17Z\",\n    fill: \"#F4F4F4\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgAccCowboyHat);\nexport default __webpack_public_path__ + \"static/media/acc_cowboy-hat.9734c8ec5aa229837c3f25f7c7fd2aee.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2, _path3, _path4, _path5;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgAccFrustration(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 39,\n    height: 46,\n    viewBox: \"0 0 39 46\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2 28.02L2 3.00002\",\n    stroke: \"#4B458E\",\n    strokeWidth: 3,\n    strokeLinecap: \"round\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M10 36.02L10 8.00002\",\n    stroke: \"#4B458E\",\n    strokeWidth: 3,\n    strokeLinecap: \"round\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M19 30.02V2.00002\",\n    stroke: \"#4B458E\",\n    strokeWidth: 3,\n    strokeLinecap: \"round\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M28 36.02V8.00002\",\n    stroke: \"#4B458E\",\n    strokeWidth: 3,\n    strokeLinecap: \"round\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M37 44.02V16\",\n    stroke: \"#4B458E\",\n    strokeWidth: 3,\n    strokeLinecap: \"round\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgAccFrustration);\nexport default __webpack_public_path__ + \"static/media/acc_frustration.184a09263c2541c3fac7ef7d6e792c9e.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgAccWaterDrop(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 40,\n    height: 63,\n    viewBox: \"0 0 40 63\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M20.0026 5.36499C27.7809 21.187 31.6693 32.4444 31.6693 39.1395C31.6693 43.9628 30.4401 48.5885 28.2522 51.9991C26.0643 55.4097 23.0968 57.3258 20.0026 57.3258C16.9084 57.3258 13.941 55.4097 11.753 51.9991C9.5651 48.5885 8.33594 43.9628 8.33594 39.1395C8.33594 32.4444 12.2243 21.187 20.0026 5.36499Z\",\n    fill: \"#A7DFEB\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgAccWaterDrop);\nexport default __webpack_public_path__ + \"static/media/acc_water-drop.f79690ccac4943b0f4aed250e8e56ad7.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2, _path3, _path4, _path5;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgAccHeartSunglasses(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 128,\n    height: 60,\n    viewBox: \"0 0 128 60\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    opacity: 0.2,\n    d: \"M54.375 22.0312C54.375 37.5 30 50.625 30 50.625C30 50.625 5.625 37.5 5.625 22.0312C5.625 18.6746 6.95842 15.4554 9.33193 13.0819C11.7054 10.7084 14.9246 9.375 18.2812 9.375C23.5758 9.375 28.1109 12.2602 30 16.875C31.8891 12.2602 36.4242 9.375 41.7188 9.375C45.0754 9.375 48.2946 10.7084 50.6681 13.0819C53.0416 15.4554 54.375 18.6746 54.375 22.0312Z\",\n    fill: \"#DF7676\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M41.7188 7.5C36.8789 7.5 32.6414 9.58125 30 13.0992C27.3586 9.58125 23.1211 7.5 18.2812 7.5C14.4287 7.50434 10.7351 9.0367 8.0109 11.7609C5.2867 14.4851 3.75434 18.1787 3.75 22.0312C3.75 38.4375 28.0758 51.7172 29.1117 52.2656C29.3848 52.4125 29.69 52.4894 30 52.4894C30.31 52.4894 30.6152 52.4125 30.8883 52.2656C31.9242 51.7172 56.25 38.4375 56.25 22.0312C56.2457 18.1787 54.7133 14.4851 51.9891 11.7609C49.2649 9.0367 45.5713 7.50434 41.7188 7.5ZM30 48.4688C25.7203 45.975 7.5 34.6148 7.5 22.0312C7.50372 19.173 8.64079 16.4329 10.6619 14.4119C12.6829 12.3908 15.423 11.2537 18.2812 11.25C22.8398 11.25 26.6672 13.6781 28.2656 17.5781C28.4069 17.922 28.6472 18.2162 28.956 18.4232C29.2648 18.6302 29.6282 18.7407 30 18.7407C30.3718 18.7407 30.7352 18.6302 31.044 18.4232C31.3528 18.2162 31.5931 17.922 31.7344 17.5781C33.3328 13.6711 37.1602 11.25 41.7188 11.25C44.577 11.2537 47.3171 12.3908 49.3381 14.4119C51.3592 16.4329 52.4963 19.173 52.5 22.0312C52.5 34.5961 34.275 45.9727 30 48.4688Z\",\n    fill: \"#F47B7B\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    opacity: 0.2,\n    d: \"M122.375 22.0312C122.375 37.5 98 50.625 98 50.625C98 50.625 73.625 37.5 73.625 22.0312C73.625 18.6746 74.9584 15.4554 77.3319 13.0819C79.7054 10.7084 82.9246 9.375 86.2812 9.375C91.5758 9.375 96.1109 12.2602 98 16.875C99.8891 12.2602 104.424 9.375 109.719 9.375C113.075 9.375 116.295 10.7084 118.668 13.0819C121.042 15.4554 122.375 18.6746 122.375 22.0312Z\",\n    fill: \"#DF7676\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M109.719 7.5C104.879 7.5 100.641 9.58125 98 13.0992C95.3586 9.58125 91.1211 7.5 86.2812 7.5C82.4287 7.50434 78.7351 9.0367 76.0109 11.7609C73.2867 14.4851 71.7543 18.1787 71.75 22.0312C71.75 38.4375 96.0758 51.7172 97.1117 52.2656C97.3848 52.4125 97.69 52.4894 98 52.4894C98.31 52.4894 98.6152 52.4125 98.8883 52.2656C99.9242 51.7172 124.25 38.4375 124.25 22.0312C124.246 18.1787 122.713 14.4851 119.989 11.7609C117.265 9.0367 113.571 7.50434 109.719 7.5ZM98 48.4688C93.7203 45.975 75.5 34.6148 75.5 22.0312C75.5037 19.173 76.6408 16.4329 78.6619 14.4119C80.6829 12.3908 83.423 11.2537 86.2812 11.25C90.8398 11.25 94.6672 13.6781 96.2656 17.5781C96.4069 17.922 96.6472 18.2162 96.956 18.4232C97.2648 18.6302 97.6282 18.7407 98 18.7407C98.3718 18.7407 98.7352 18.6302 99.044 18.4232C99.3528 18.2162 99.5931 17.922 99.7344 17.5781C101.333 13.6711 105.16 11.25 109.719 11.25C112.577 11.2537 115.317 12.3908 117.338 14.4119C119.359 16.4329 120.496 19.173 120.5 22.0312C120.5 34.5961 102.275 45.9727 98 48.4688Z\",\n    fill: \"#F47B7B\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M55 19.5163C55 19.5163 60.5949 16.224 64.4593 16.5159C68.1319 16.7933 73.5 19.5163 73.5 19.5163\",\n    stroke: \"#F47B7B\",\n    strokeWidth: 3\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgAccHeartSunglasses);\nexport default __webpack_public_path__ + \"static/media/acc_heart-sunglasses.f0eb018cd7387d10bab022092526d81e.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2, _rect;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgAccSunglasses(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 106,\n    height: 13,\n    viewBox: \"0 0 106 13\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M21.2176 12.75L35.7188 9.75L42.4352 0H0L5.71875 9.75L21.2176 12.75Z\",\n    fill: \"#4D4532\",\n    fillOpacity: 0.92\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M84.7176 12.75L99.2188 9.75L105.935 0H63.5L69.2188 9.75L84.7176 12.75Z\",\n    fill: \"#4D4532\",\n    fillOpacity: 0.92\n  })), _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 40,\n    width: 26,\n    height: 2,\n    fill: \"#4D4532\",\n    fillOpacity: 0.92\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgAccSunglasses);\nexport default __webpack_public_path__ + \"static/media/acc_sunglasses.9d0f9e2922985517b556693492b7f3c6.svg\";\nexport { ForwardRef as ReactComponent };","var _rect, _rect2;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgAccBandage(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 41,\n    height: 22,\n    viewBox: \"0 0 41 22\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    y: 11.4026,\n    width: 39,\n    height: 11,\n    rx: 5.5,\n    transform: \"rotate(-17 0 11.4026)\",\n    fill: \"#EF9D22\"\n  })), _rect2 || (_rect2 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 12,\n    y: 9.3855,\n    width: 15,\n    height: 8,\n    transform: \"rotate(-17 12 9.3855)\",\n    fill: \"#FCEDDB\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgAccBandage);\nexport default __webpack_public_path__ + \"static/media/acc_bandage.c95d91931ee72b27de6e7f37bd3c27fc.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2, _path3;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgAccTomatoTop(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 48,\n    height: 27,\n    viewBox: \"0 0 48 27\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M24 1.5L29.3883 10.1373H46.8254L32.7185 15.4754L38.1068 24.1127L24 18.7746L9.89315 24.1127L15.2815 15.4754L1.17464 10.1373H18.6117L24 1.5Z\",\n    fill: \"#254818\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M24 4.5L27.8167 10.0279H40.168L30.1756 13.4443L33.9923 18.9721L24 15.5557L14.0077 18.9721L17.8244 13.4443L7.83204 10.0279H20.1833L24 4.5Z\",\n    fill: \"#256614\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M25.5 0L24.6641 10.5H22.6641L21.5 0H25.5Z\",\n    fill: \"#367C25\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgAccTomatoTop);\nexport default __webpack_public_path__ + \"static/media/acc_tomato-top.b0a6bab0547af40ef253706c2ee6e097.svg\";\nexport { ForwardRef as ReactComponent };","import { useRef, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport accFx1 from \"@/assets/images/acc_angel-ring.svg\";\r\nimport accFx2 from \"@/assets/images/acc_shining.svg\";\r\nimport accHead1 from \"@/assets/images/acc_cowboy-hat.svg\";\r\nimport accEmo1 from \"@/assets/images/acc_frustration.svg\";\r\nimport accEmo2 from \"@/assets/images/acc_water-drop.svg\";\r\nimport accEye1 from \"@/assets/images/acc_heart-sunglasses.svg\";\r\nimport accEye2 from \"@/assets/images/acc_sunglasses.svg\";\r\nimport accEye3 from \"@/assets/images/acc_bandage.svg\";\r\nimport accHead2 from \"@/assets/images/acc_tomato-top.svg\";\r\n\r\nconst getAccessoryImg = (item) => {\r\n  switch (item) {\r\n    case \"emo1\":\r\n      return accEmo1;\r\n    case \"emo2\":\r\n      return accEmo2;\r\n    case \"eye1\":\r\n      return accEye1;\r\n    case \"eye2\":\r\n      return accEye2;\r\n    case \"eye3\":\r\n      return accEye3;\r\n    case \"head1\":\r\n      return accHead1;\r\n    case \"head2\":\r\n      return accHead2;\r\n    case \"fx1\":\r\n      return accFx1;\r\n    case \"fx2\":\r\n      return accFx2;\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n\r\nconst getPosition = (item, width, height) => {\r\n  switch (item) {\r\n    case \"emo1\":\r\n      return { top: 0, left: width * 0.6 };\r\n    case \"emo2\":\r\n      return { top: 0, left: 0 };\r\n    case \"eye1\":\r\n      return { top: height * 0.14, left: width * 0.06 };\r\n    case \"eye2\":\r\n      return { top: height * 0.35, left: width * 0.13 };\r\n    case \"eye3\":\r\n      return { top: height * 0.08, left: width * 0.1 };\r\n    case \"head1\":\r\n      return { top: -10, left: -10 };\r\n    case \"head2\":\r\n      return { top: -2, left: 50 };\r\n    case \"fx1\":\r\n      return { top: -40, left: 5 };\r\n    case \"fx2\":\r\n      return { top: 10, left: 125 };\r\n    default:\r\n      return { top: 0, left: 0 };\r\n  }\r\n};\r\n\r\nconst AvatarCanvas = ({ item, avatar, setAvatarImage, width = \"120px\" }) => {\r\n  const canvasRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext(\"2d\");\r\n\r\n    const avatarImg = new Image();\r\n    const accessoryImg = new Image();\r\n\r\n    avatarImg.onload = () => {\r\n      canvas.width = avatarImg.width / 1.5 + 20;\r\n      canvas.height = avatarImg.height / 1.5 + 40;\r\n      ctx.drawImage(avatarImg, 10, 20, canvas.width - 20, canvas.height - 40);\r\n\r\n      if (getAccessoryImg(item)) {\r\n        accessoryImg.onload = () => {\r\n          const position = getPosition(item, canvas.width, canvas.height);\r\n          ctx.drawImage(\r\n            accessoryImg,\r\n            position.left + 10,\r\n            position.top + 20,\r\n            accessoryImg.width,\r\n            accessoryImg.height\r\n          );\r\n          setAvatarImage(canvas.toDataURL());\r\n        };\r\n        accessoryImg.src = getAccessoryImg(item);\r\n      } else {\r\n        setAvatarImage(canvas.toDataURL());\r\n      }\r\n    };\r\n    avatarImg.src = avatar;\r\n  }, [item, avatar]);\r\n\r\n  return <canvas ref={canvasRef} style={{ width: width }} />;\r\n};\r\n\r\nAvatarCanvas.propTypes = {\r\n  avatar: PropTypes.string,\r\n  item: PropTypes.string,\r\n  setAvatarImage: PropTypes.func,\r\n  width: PropTypes.string\r\n};\r\n\r\nexport default AvatarCanvas;\r\n","import PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { FlexBox } from \"@/styles/FlexStyle\";\r\n\r\nconst VolumeControl = ({ label, currVolume, setCurrVolume }) => {\r\n  return (\r\n    <VolumeSliderWrapper dir=\"col\">\r\n      <VolumeLabel>\r\n        {label}\r\n        <VolumeSliderRail />\r\n        <VolumeSliderFillTrack width={`${currVolume * 100}%`} />\r\n        <VolumeSlider\r\n          min=\"0\"\r\n          max=\"1\"\r\n          step=\"0.01\"\r\n          defaultValue={currVolume}\r\n          onChange={(e) => setCurrVolume(parseFloat(e.target.value))}\r\n        />\r\n      </VolumeLabel>\r\n    </VolumeSliderWrapper>\r\n  );\r\n};\r\n\r\nVolumeControl.propTypes = {\r\n  label: PropTypes.string,\r\n  currVolume: PropTypes.number,\r\n  setCurrVolume: PropTypes.func\r\n};\r\n\r\nconst VolumeSliderWrapper = styled(FlexBox)`\r\n  position: relative;\r\n  width: 100%;\r\n`;\r\n\r\nconst VolumeLabel = styled(FlexBox).attrs({ as: \"label\" })`\r\n  flex-basis: 60px;\r\n  color: #fff;\r\n  font-size: 17px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst VolumeSliderRail = styled.div`\r\n  position: absolute;\r\n  top: calc(50% + 4px);\r\n  width: 100%;\r\n  height: 14px;\r\n  background-color: #e5e5e5;\r\n  border: 1px solid #aaa;\r\n  border-radius: 6px;\r\n`;\r\n\r\nconst VolumeSliderFillTrack = styled.div`\r\n  position: absolute;\r\n  top: 35.8px;\r\n  width: ${(props) => props.width};\r\n  height: 12px;\r\n  margin-left: 1px;\r\n  background-color: #0075ff;\r\n  border-radius: 5px 0 0 5px;\r\n`;\r\n\r\nconst VolumeSlider = styled.input.attrs(() => ({ type: \"range\" }))`\r\n  position: absolute;\r\n  top: calc(50% + -5px);\r\n  width: 100%;\r\n  background-color: transparent;\r\n  -webkit-appearance: none;\r\n  appearance: none;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n\r\n  &::-webkit-slider-thumb {\r\n    -webkit-appearance: none;\r\n    appearance: none;\r\n    width: 20px;\r\n    height: 27px;\r\n    background-color: #0075ff;\r\n    border: 2px solid #aaa;\r\n    border-radius: 6px;\r\n  }\r\n\r\n  &::-moz-range-thumb {\r\n    width: 20px;\r\n    height: 27px;\r\n    background-color: #0075ff;\r\n    border: 2px solid #aaa;\r\n    border-radius: 6px;\r\n  }\r\n`;\r\n\r\nexport default VolumeControl;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useRecoilState, useSetRecoilState, useRecoilValue } from \"recoil\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { userInfoState, waitingPlayerListState } from \"@/recoil/userState\";\r\nimport { roomIdState, roomInfoListState, roomInfoState } from \"@/recoil/roomState\";\r\nimport { bgVolumeState, fxVolumeState } from \"@/recoil/soundState\";\r\nimport { remoteApiConfigState } from \"@/recoil/boardState\";\r\nimport VolumeControl from \"./VolumeControl\";\r\nimport Profile from \"./Profile\";\r\nimport ValidationMessage from \"@/components/Web/Shared/Form/ValidationMessage\";\r\nimport {\r\n  GameModalBackground,\r\n  GameModalContent,\r\n  GameModalHeader,\r\n  GameModalBody,\r\n  GameModalMessage,\r\n  GameModalLongMessage,\r\n  GameModalButton,\r\n  GameModalSelect,\r\n  GameModalInputWrapper,\r\n  GameModalInput,\r\n  ArrowIconImage,\r\n  ExitMiniCircle,\r\n  Table,\r\n  Tbody,\r\n  Tr,\r\n  TdLabel,\r\n  TdContent,\r\n  ButtonWrapper,\r\n  Label,\r\n  Textarea\r\n} from \"./GameModalStyle\";\r\nimport leftArrow from \"@/assets/images/left-arrow.png\";\r\nimport rightArrow from \"@/assets/images/right-arrow.png\";\r\nimport avatar from \"@/assets/images/avatar.png\";\r\nimport AvatarCanvas from \"../Shared/AvatarCanvas\";\r\nimport {\r\n  createRoom,\r\n  changeRoomConfig,\r\n  leaveRoom,\r\n  joinRoom,\r\n  loadRoom\r\n} from \"@/services/socket\";\r\nimport useAxios from \"@/hooks/useAxios\";\r\nimport { getPlayerInfoByUserId, updateCurrentUserAvatar } from \"@/services/user\";\r\nimport { NICKNAME_REGEX, SPECIAL_CHARACTERS_REGEX } from \"@/services/regexp\";\r\n\r\nconst GameModal = ({\r\n  type,\r\n  setType,\r\n  isOpen,\r\n  setIsOpen,\r\n  setIsPlaying,\r\n  userId,\r\n  roomId,\r\n  setIsDataFetched,\r\n  height = \"\",\r\n  children\r\n}) => {\r\n  // ====== room ======\r\n  const [roomInfoList, setRoomInfoList] = useRecoilState(roomInfoListState);\r\n  const [roomInfo, setRoomInfo] = useRecoilState(roomInfoState);\r\n  const setRoomId = useSetRecoilState(roomIdState);\r\n  const setWaitingPlayerList = useSetRecoilState(waitingPlayerListState);\r\n  const setRemoteApiConfig = useSetRecoilState(remoteApiConfigState);\r\n  const [roomNumber, setRoomNumber] = useState(null);\r\n\r\n  const [bgCurrVolume, setBgCurrVolume] = useRecoilState(bgVolumeState);\r\n  const [fxCurrVolume, setFxCurrVolume] = useRecoilState(fxVolumeState);\r\n  const [user, setUser] = useRecoilState(userInfoState);\r\n  const [isTitleEmpty, setIsTitleEmpty] = useState(false);\r\n  const [password, setPassword] = useState(\"\");\r\n  const [isCorrectPassword, setIsCorrectPassword] = useState(true);\r\n  const [avatarImage, setAvatarImage] = useState(null);\r\n  const [currAvatar, setCurrAvatar] = useState(0);\r\n  const [isProfileEditMode, setIsProfileEditMode] = useState(null);\r\n  const [modalMessage, setModalMessage] = useState(\"\");\r\n\r\n  const [cookies, setCookie] = useCookies([\"sessionId\", \"userId\"]);\r\n  const [apiConfig, setApiConfig] = useState(null);\r\n  const { response, loading, error, fetchData } = useAxios(apiConfig, false);\r\n\r\n  let titleText = \"\";\r\n\r\n  switch (type) {\r\n    case \"alert\":\r\n      titleText = \"경고\";\r\n      height !== \"\" ? height : \"14rem\";\r\n      break;\r\n    case \"alarm\":\r\n      titleText = \"안내\";\r\n      height = \"14rem\";\r\n      break;\r\n    case \"avatar\":\r\n      titleText = \"아바타 설정하기\";\r\n      height = \"21rem\";\r\n      break;\r\n    case \"password\":\r\n      height = \"17.75rem\";\r\n      break;\r\n    case \"room\":\r\n      titleText = !roomId ? \"방 만들기\" : \"방 설정\";\r\n      height = \"28.3rem\";\r\n      break;\r\n    case \"profile\":\r\n      titleText = !isProfileEditMode ? \"프로필\" : \"프로필 수정\";\r\n      height = \"15rem\";\r\n      break;\r\n    case \"report\":\r\n      titleText = \"신고하기\";\r\n      height = \"29.9rem\";\r\n      break;\r\n    case \"setting\":\r\n      titleText = \"환경설정\";\r\n      height = \"19rem\";\r\n      break;\r\n    case \"help\":\r\n      titleText = \"도움말\";\r\n      height = \"25.625rem\";\r\n      break;\r\n    case \"result\":\r\n      titleText = \"게임 결과\";\r\n      height = \"20rem\";\r\n      break;\r\n    case \"error\":\r\n      titleText = \"경고\";\r\n      height !== \"\" ? height : \"18rem\";\r\n      break;\r\n  }\r\n\r\n  const accessories = [\r\n    \"\",\r\n    \"emo1\",\r\n    \"emo2\",\r\n    \"eye1\",\r\n    \"eye2\",\r\n    \"eye3\",\r\n    \"head1\",\r\n    \"head2\",\r\n    \"fx1\",\r\n    \"fx2\"\r\n  ];\r\n\r\n  useEffect(() => {\r\n    if (type === \"room\" && !roomId) {\r\n      setRoomInfo({\r\n        title: \"\",\r\n        password: \"\",\r\n        maxUserCount: 8,\r\n        maxRound: 5,\r\n        roundTimeLimit: 90000\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (apiConfig !== null) {\r\n      fetchData();\r\n    }\r\n  }, [apiConfig]);\r\n\r\n  useEffect(() => {\r\n    if (response !== null) {\r\n      if (type === \"report\") {\r\n        setType(\"alarm\");\r\n        setModalMessage(\"신고가 등록되었습니다.\");\r\n      }\r\n    }\r\n  }, [response]);\r\n\r\n  // roomInfo -> roomInfoList\r\n  useEffect(() => {\r\n    if (roomInfo?.id) {\r\n      if (roomInfoList.some((room) => room.id === roomInfo.id)) {\r\n        // 방 정보 PUT API 호출\r\n        setRoomInfoList((prev) =>\r\n          prev.map((room) => (room.id === roomInfo.id ? { ...room, ...roomInfo } : room))\r\n        );\r\n      } else {\r\n        // 방 정보 POST API 호출\r\n        setRoomInfoList((prev) => [...prev, { ...roomInfo }]);\r\n      }\r\n    }\r\n  }, [roomInfo]);\r\n\r\n  useEffect(() => {\r\n    if (roomNumber !== null) {\r\n      setIsOpen(false);\r\n      navigate(`/game/${roomNumber}`);\r\n    }\r\n  }, [roomNumber]);\r\n\r\n  useEffect(() => {\r\n    if (roomId && roomId !== roomInfo?.id) {\r\n      setRoomInfo({\r\n        title: \"\",\r\n        password: \"\",\r\n        currentUserCount: 1,\r\n        maxUserCount: 8,\r\n        maxRound: 5,\r\n        roundTimeLimit: 90,\r\n        state: \"preparing\"\r\n      });\r\n    }\r\n  }, [roomId, roomInfo?.id]);\r\n\r\n  const onConfirmAvatarUrl = async () => {\r\n    if (user.nickname === \"\" || user.avatarUrl === \"\" || !NICKNAME_REGEX.test(user.nickname)) return;\r\n\r\n    const res = await updateCurrentUserAvatar(user.avatarUrl, user.nickname);\r\n\r\n    if (res) {\r\n      setUser((prev) => ({\r\n        ...prev,\r\n        avatarUrl: user.avatarUrl,\r\n        nickname: user.nickname\r\n      }));\r\n      setRemoteApiConfig({\r\n        method: \"get\",\r\n        url: \"/user/me\",\r\n        headers: { sessionId: cookies.sessionId }\r\n      })\r\n      setIsOpen(false);\r\n    }\r\n  };\r\n\r\n  // ====== report ======\r\n  const onReportSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    setApiConfig({\r\n      method: \"post\",\r\n      url: \"/report\",\r\n      headers: {\r\n        sessionId: cookies.sessionId\r\n      },\r\n      data: {\r\n        nickname: user.nickname,\r\n        isOffensive: e.target.isOffensive.checked,\r\n        isPoorManner: e.target.isPoorManner.checked,\r\n        isCheating: e.target.isCheating.checked,\r\n        note: e.target.note.value,\r\n        reporteeId: userId\r\n      }\r\n    });\r\n  };\r\n\r\n  // ====== room ======\r\n  const navigate = useNavigate();\r\n  const onValidateChange = (e) => {\r\n    const t = e.target;\r\n    let v = parseInt(t.value);\r\n\r\n    if (isNaN(parseInt(v))) {\r\n      return;\r\n    }\r\n\r\n    if (SPECIAL_CHARACTERS_REGEX.test(v)) {\r\n      return;\r\n    }\r\n\r\n    if (v < parseInt(t.min)) {\r\n      v = parseInt(t.min);\r\n    } else if (v > parseInt(t.max)) {\r\n      v = parseInt(t.max);\r\n    }\r\n\r\n    setRoomInfo({\r\n      ...roomInfo,\r\n      [t.name]: v\r\n    });\r\n  };\r\n\r\n  const onValidateSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!roomInfo.title) {\r\n      setIsTitleEmpty(true);\r\n      return;\r\n    }\r\n\r\n    if (roomInfoList.some((room) => room.id === roomId)) {\r\n      let { title, password, maxUserCount, maxRound, roundTimeLimit } = roomInfo;\r\n      password = password || \"\";\r\n      changeRoomConfig(\r\n        { title, password, maxUserCount, maxRound, roundTimeLimit },\r\n        (room) => {\r\n          setRoomInfo(room);\r\n          setIsOpen(false);\r\n        }\r\n      );\r\n      setRoomInfoList((prev) =>\r\n        prev.map((room) =>\r\n          room.id === roomId ? { ...room, ...roomInfo, id: roomId } : room\r\n        )\r\n      );\r\n    } else {\r\n      createRoom(roomInfo, () => {\r\n        loadRoom((room) => {\r\n          setRoomNumber(room.roomNumber);\r\n          setRoomId(room.id);\r\n          setRoomInfo(room);\r\n          setCookie(\"userId\", room.roomOwnerUserId, { path: \"/\" });\r\n          setUser((prev) => ({ userId: room.roomOwnerUserId, ...prev }));\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  // ====== password ======\r\n  const onCheckSamePassword = () => {\r\n    const authorization = { roomId, password };\r\n    joinRoom(\r\n      authorization,\r\n      () => {\r\n        loadRoom((room) => {\r\n          setRoomNumber(room.roomNumber);\r\n          setRoomId(room.id);\r\n          setRoomInfo(room);\r\n          setCookie(\"userId\", room.userList[room.userList.length - 1].userId, {\r\n            path: \"/\"\r\n          });\r\n          setUser((prev) => ({\r\n            userId: room.userList[room.userList.length - 1].userId,\r\n            ...prev\r\n          }));\r\n        });\r\n      },\r\n      (error) => {\r\n        console.log(`[Error]: ${error}`);\r\n        setIsCorrectPassword(false);\r\n        return;\r\n      }\r\n    );\r\n  };\r\n\r\n  // ====== exit ======\r\n  const onExitRoom = () => {\r\n    leaveRoom(() => {\r\n      setWaitingPlayerList(null);\r\n      setIsOpen(false);\r\n      navigate(\"/game\");\r\n    });\r\n  };\r\n\r\n  const onSaveVolume = () => {\r\n    localStorage.setItem(\"bgVolume\", bgCurrVolume.toString());\r\n    localStorage.setItem(\"fxVolume\", fxCurrVolume.toString());\r\n    setIsOpen(false);\r\n  };\r\n\r\n  return (\r\n    isOpen && (\r\n      <>\r\n        <GameModalBackground />\r\n        <GameModalContent dir=\"col\" col=\"center\" height={height}>\r\n          <GameModalHeader row={titleText !== \"\" ? \"between\" : \"end\"} col=\"center\">\r\n            {titleText !== \"\" && <span>{titleText}</span>}\r\n            {![\"result\", \"error\"].includes(type) && (\r\n              <ExitMiniCircle onClick={() => setIsOpen(false)} />\r\n            )}\r\n          </GameModalHeader>\r\n\r\n          {/* 아바타 설정 modal */}\r\n          {type === \"avatar\" && (\r\n            <GameModalBody top=\"0\" marginTop=\"0\">\r\n              <ButtonWrapper row=\"start\" col=\"center\" margin=\"9px 0 0\">\r\n                <GameModalMessage fontSize=\"22px\">캐릭터</GameModalMessage>\r\n              </ButtonWrapper>\r\n              <ButtonWrapper row=\"center\" col=\"center\" margin=\"0\">\r\n                <ArrowIconImage src={leftArrow} onClick={onAvatarLeftClick} />\r\n                <AvatarCanvas\r\n                  avatar={avatar}\r\n                  item={accessories[currAvatar]}\r\n                  setAvatarImage={setAvatarImage}\r\n                />\r\n                <ArrowIconImage src={rightArrow} onClick={onAvatarRightClick} />\r\n              </ButtonWrapper>\r\n              <ButtonWrapper row=\"center\" col=\"center\" margin=\"10px 0 0\">\r\n                <GameModalButton onClick={onConfirmAvatarUrl}>확인</GameModalButton>\r\n              </ButtonWrapper>\r\n            </GameModalBody>\r\n          )}\r\n\r\n          {/* 비밀번호 입력 modal */}\r\n          {type === \"password\" && (\r\n            <GameModalBody top=\"0\">\r\n              <GameModalInputWrapper paddingTop=\"25px\" paddingBottom=\"15px\">\r\n                <GameModalMessage paddingBottom=\"15px\">\r\n                  비밀번호를 입력하세요.\r\n                </GameModalMessage>\r\n                <GameModalInput\r\n                  marginBottom=\"10px\"\r\n                  maxLength={30}\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n                {!isCorrectPassword && (\r\n                  <ValidationMessage message=\"비밀번호가 일치하지 않습니다.\" />\r\n                )}\r\n              </GameModalInputWrapper>\r\n              <ButtonWrapper row=\"center\" col=\"center\">\r\n                <GameModalButton onClick={onCheckSamePassword}>확인</GameModalButton>\r\n              </ButtonWrapper>\r\n            </GameModalBody>\r\n          )}\r\n\r\n          {/* 방 만들기 modal */}\r\n          {type === \"room\" && (\r\n            <form onSubmit={onValidateSubmit}>\r\n              <Table>\r\n                <Tbody>\r\n                  <Tr col=\"center\">\r\n                    <TdLabel>\r\n                      <GameModalMessage>방 제목</GameModalMessage>\r\n                    </TdLabel>\r\n                    <TdContent>\r\n                      <GameModalInput\r\n                        type=\"text\"\r\n                        placeholder=\"방 제목\"\r\n                        maxLength={20}\r\n                        name=\"title\"\r\n                        value={roomInfo?.title}\r\n                        onChange={(e) =>\r\n                          setRoomInfo({ ...roomInfo, title: e.target.value })\r\n                        }\r\n                      />\r\n                    </TdContent>\r\n                  </Tr>\r\n                  {isTitleEmpty && (\r\n                    <Tr col=\"center\">\r\n                      <TdLabel />\r\n                      <TdContent>\r\n                        <ValidationMessage message=\"제목을 입력하세요.\" fontSize=\"14px\" />\r\n                      </TdContent>\r\n                    </Tr>\r\n                  )}\r\n                  <Tr col=\"center\">\r\n                    <TdLabel>\r\n                      <GameModalMessage>비밀번호</GameModalMessage>\r\n                    </TdLabel>\r\n                    <TdContent>\r\n                      <GameModalInput\r\n                        type=\"text\"\r\n                        placeholder=\"비밀번호\"\r\n                        maxLength={30}\r\n                        value={password}\r\n                        onChange={(e) => {\r\n                          setPassword(e.target.value);\r\n                          setRoomInfo({ ...roomInfo, password: e.target.value });\r\n                        }}\r\n                      />\r\n                    </TdContent>\r\n                  </Tr>\r\n                  <Tr col=\"center\">\r\n                    <TdLabel>\r\n                      <GameModalMessage>플레이어 수</GameModalMessage>\r\n                    </TdLabel>\r\n                    <TdContent>\r\n                      <GameModalInput\r\n                        type=\"number\"\r\n                        max={8}\r\n                        min={2}\r\n                        step={1}\r\n                        name=\"maxUserCount\"\r\n                        value={roomInfo?.maxUserCount}\r\n                        onChange={(e) => onValidateChange(e)}\r\n                      />\r\n                    </TdContent>\r\n                  </Tr>\r\n                  <Tr col=\"center\">\r\n                    <TdLabel>\r\n                      <GameModalMessage>라운드 수</GameModalMessage>\r\n                    </TdLabel>\r\n                    <TdContent>\r\n                      <GameModalInput\r\n                        type=\"number\"\r\n                        max={8}\r\n                        min={2}\r\n                        step={1}\r\n                        name=\"maxRound\"\r\n                        value={roomInfo?.maxRound}\r\n                        onChange={(e) => onValidateChange(e)}\r\n                      />\r\n                    </TdContent>\r\n                  </Tr>\r\n                  <Tr col=\"center\">\r\n                    <TdLabel>\r\n                      <GameModalMessage>라운드 시간</GameModalMessage>\r\n                    </TdLabel>\r\n                    <TdContent>\r\n                      <GameModalSelect\r\n                        name=\"roundTimeLimit\"\r\n                        value={roomInfo?.roundTimeLimit}\r\n                        onChange={(e) => onValidateChange(e)}\r\n                      >\r\n                        <option value={60000}>60초</option>\r\n                        <option value={90000}>90초</option>\r\n                        <option value={120000}>120초</option>\r\n                        <option value={150000}>150초</option>\r\n                      </GameModalSelect>\r\n                    </TdContent>\r\n                  </Tr>\r\n                </Tbody>\r\n              </Table>\r\n              <ButtonWrapper\r\n                row=\"center\"\r\n                col=\"center\"\r\n                margin={isTitleEmpty ? \"22px 0 0\" : \"42px 0 0\"}\r\n              >\r\n                <GameModalButton type=\"submit\">확인</GameModalButton>\r\n              </ButtonWrapper>\r\n            </form>\r\n          )}\r\n\r\n          {/* 환경 설정 modal */}\r\n          {type === \"setting\" && (\r\n            <GameModalBody>\r\n              <VolumeControl\r\n                label=\"배경음 조절\"\r\n                currVolume={bgCurrVolume}\r\n                setCurrVolume={setBgCurrVolume}\r\n              />\r\n              <VolumeControl\r\n                label=\"효과음 조절\"\r\n                currVolume={fxCurrVolume}\r\n                setCurrVolume={setFxCurrVolume}\r\n              />\r\n              <ButtonWrapper row=\"center\" col=\"center\" margin=\"30px 0px 20px\">\r\n                <GameModalButton onClick={onSaveVolume}>저장</GameModalButton>\r\n              </ButtonWrapper>\r\n            </GameModalBody>\r\n          )}\r\n\r\n          {/* 프로필 modal */}\r\n          {type === \"profile\" && (\r\n            <GameModalBody top=\"0\" padding=\"0 14px\">\r\n              <Profile type=\"modal\" userId={userId} isEditMode={isProfileEditMode} />\r\n              <ButtonWrapper row=\"end\" col=\"center\" margin=\"0px 0px 18px\">\r\n                {userId !== cookies.userId ? (\r\n                  <GameModalButton onClick={() => setType(\"report\")}>\r\n                    신고\r\n                  </GameModalButton>\r\n                ) : !isProfileEditMode ? (\r\n                  <GameModalButton onClick={() => setIsProfileEditMode(true)}>\r\n                    수정\r\n                  </GameModalButton>\r\n                ) : (\r\n                  <GameModalButton onClick={onConfirmAvatarUrl}>저장</GameModalButton>\r\n                )}\r\n              </ButtonWrapper>\r\n            </GameModalBody>\r\n          )}\r\n\r\n          {/* 신고 modal */}\r\n          {type === \"report\" && (\r\n            <GameModalBody top=\"0\" padding=\"0 14px\">\r\n              <form onSubmit={(e) => onReportSubmit(e)}>\r\n                <Table margin=\"1rem 0\">\r\n                  <Tbody>\r\n                    <Tr>\r\n                      <TdLabel>\r\n                        <GameModalMessage>신고 대상</GameModalMessage>\r\n                      </TdLabel>\r\n                      <TdContent row=\"end\" color=\"#fff\" fontSize=\"19px\">\r\n                        {user?.nickname}\r\n                      </TdContent>\r\n                    </Tr>\r\n                    <Tr dir=\"col\" row=\"start\" col=\"start\">\r\n                      <TdLabel>\r\n                        <GameModalMessage>신고 사유</GameModalMessage>\r\n                      </TdLabel>\r\n                      <TdContent dir=\"col\" color=\"#fff\" fontSize=\"17px\">\r\n                        <Label htmlFor=\"isOffensive\" margin=\"5px 0\">\r\n                          <input type=\"checkbox\" id=\"isOffensive\" value=\"isOffensive\" />\r\n                          공격적인 언어 사용 (도배, 욕설, 음담패설, 혐오 표현 사용 등)\r\n                        </Label>\r\n                        <Label htmlFor=\"isPoorManner\">\r\n                          <input type=\"checkbox\" id=\"isPoorManner\" value=\"isPoorManner\" />\r\n                          비매너 행위 (고의적인 게임 진행 방해, 스토킹, 시스템 악용 등)\r\n                        </Label>\r\n                        <Label htmlFor=\"isCheating\">\r\n                          <input type=\"checkbox\" id=\"isCheating\" value=\"isCheating\" />\r\n                          사기 행위 (계정/현금 거래/상업 광고/사기 및 사칭)\r\n                        </Label>\r\n                        <Label htmlFor=\"note\">\r\n                          - 기타 (하단 입력란에 신고 사유를 입력하세요.)\r\n                        </Label>\r\n                        <Textarea\r\n                          margin=\"0\"\r\n                          height=\"5.4rem\"\r\n                          fontSize=\"15px\"\r\n                          id=\"note\"\r\n                          name=\"note\"\r\n                          placeholder=\"신고하게 된 계기를 자세하게 입력해주세요.\"\r\n                        />\r\n                      </TdContent>\r\n                    </Tr>\r\n                  </Tbody>\r\n                </Table>\r\n                <ButtonWrapper row=\"end\" col=\"center\" margin=\"0\">\r\n                  <GameModalButton type=\"submit\">신고</GameModalButton>\r\n                </ButtonWrapper>\r\n              </form>\r\n            </GameModalBody>\r\n          )}\r\n\r\n          {/* 도움말 modal */}\r\n          {type === \"help\" && <GameModalLongMessage>{children}</GameModalLongMessage>}\r\n\r\n          {/* 경고 modal */}\r\n          {type === \"alert\" && (\r\n            <GameModalBody top=\"43px\">\r\n              <GameModalMessage fontSize=\"20px\" fontWeight=\"500\">\r\n                {children}\r\n              </GameModalMessage>\r\n              <ButtonWrapper row=\"center\" col=\"center\" margin=\"40px 0px 0px\">\r\n                <GameModalButton onClick={() => setIsOpen(false)}>확인</GameModalButton>\r\n              </ButtonWrapper>\r\n            </GameModalBody>\r\n          )}\r\n\r\n          {/* 안내 modal */}\r\n          {type === \"alarm\" && (\r\n            <GameModalBody top=\"43px\">\r\n              <GameModalMessage fontSize=\"20px\" fontWeight=\"500\">\r\n                {modalMessage}\r\n              </GameModalMessage>\r\n              <ButtonWrapper row=\"center\" col=\"center\" margin=\"30px 0px 32px\">\r\n                <GameModalButton onClick={() => setIsOpen(false)}>확인</GameModalButton>\r\n              </ButtonWrapper>\r\n            </GameModalBody>\r\n          )}\r\n\r\n          {/* 퇴장 modal */}\r\n          {type === \"exit\" && (\r\n            <GameModalBody top=\"43px\">\r\n              <GameModalMessage fontSize=\"20px\" fontWeight=\"500\">\r\n                {children}\r\n              </GameModalMessage>\r\n              <ButtonWrapper row=\"center\" col=\"center\" margin=\"50px 0px 32px\">\r\n                <GameModalButton onClick={onExitRoom}>확인</GameModalButton>\r\n              </ButtonWrapper>\r\n            </GameModalBody>\r\n          )}\r\n\r\n          {/* 게임 결과 modal */}\r\n          {type === \"result\" && (\r\n            <GameModalBody row=\"between\">\r\n              <Table>\r\n                <Tbody>\r\n                  {children?.map(({ userId, score }, idx) => (\r\n                    <Tr key={idx} bgColor=\"#fff\" col=\"center\">\r\n                      <TdLabel width=\"2.5rem\" textAlign=\"center\">\r\n                        {idx + 1}\r\n                      </TdLabel>\r\n                      <TdContent flexBasis=\"18rem\" flexGrow=\"0\" padding=\"0 5px\">\r\n                        {userId}\r\n                      </TdContent>\r\n                      <TdContent>{score}점</TdContent>\r\n                    </Tr>\r\n                  ))}\r\n                </Tbody>\r\n              </Table>\r\n              <ButtonWrapper row=\"center\" col=\"center\" margin=\"10px 0px 45px\">\r\n                <GameModalButton\r\n                  onClick={() => {\r\n                    loadRoom();\r\n                    setIsOpen(false);\r\n                    setIsPlaying(false);\r\n                    // 모든 플레이어의 isReady: false로...\r\n                  }}\r\n                >\r\n                  확인\r\n                </GameModalButton>\r\n              </ButtonWrapper>\r\n            </GameModalBody>\r\n          )}\r\n\r\n          {/* 에러 modal */}\r\n          {type === \"error\" && (\r\n            <GameModalBody top=\"43px\">\r\n              <GameModalMessage fontSize=\"20px\" fontWeight=\"500\">\r\n                {children}\r\n              </GameModalMessage>\r\n              <ButtonWrapper row=\"center\" col=\"center\" margin=\"50px 0px 32px\">\r\n                <GameModalButton\r\n                  onClick={() => {\r\n                    setIsOpen(false);\r\n                    navigate(\"/\");\r\n                  }}\r\n                >\r\n                  확인\r\n                </GameModalButton>\r\n              </ButtonWrapper>\r\n            </GameModalBody>\r\n          )}\r\n        </GameModalContent>\r\n      </>\r\n    )\r\n  );\r\n};\r\n\r\nGameModal.propTypes = {\r\n  type: PropTypes.oneOf([\r\n    \"alert\",\r\n    \"alarm\",\r\n    \"password\",\r\n    \"room\",\r\n    \"profile\",\r\n    \"report\",\r\n    \"setting\",\r\n    \"help\",\r\n    \"exit\",\r\n    \"avatar\",\r\n    \"error\",\r\n    \"result\"\r\n  ]),\r\n  setType: PropTypes.func,\r\n  isOpen: PropTypes.bool.isRequired,\r\n  setIsOpen: PropTypes.func,\r\n  setIsPlaying: PropTypes.func,\r\n  userId: PropTypes.number,\r\n  roomId: PropTypes.string,\r\n  setIsDataFetched: PropTypes.func,\r\n  height: PropTypes.string,\r\n  children: PropTypes.node\r\n};\r\n\r\nexport default GameModal;\r\n","import styled from \"styled-components\";\r\nimport { FlexBox } from \"@/styles/FlexStyle\";\r\n\r\nexport const GameModalBackground = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: #000000;\r\n  opacity: 0.7;\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  z-index: 10;\r\n`;\r\n\r\nexport const GameModalContent = styled(FlexBox)`\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  width: ${(props) => props.width || \"26rem\"};\r\n  height: ${(props) => props.height || \"15.625rem\"};\r\n  border-radius: ${(props) => props.borderRadius || \"10px\"};\r\n  background-color: #23282d;\r\n  z-index: 11;\r\n`;\r\n\r\nexport const GameModalHeader = styled(FlexBox)`\r\n  width: ${(props) => props.width || \"25.188rem\"};\r\n  height: ${(props) => props.width || \"1.5rem\"};\r\n  border-radius: ${(props) => props.borderRadius || \"6px\"};\r\n  background-color: #d5ecf890;\r\n  padding: 0 6px;\r\n  margin-top: 7px;\r\n  flex-shrink: 0;\r\n`;\r\n\r\nexport const GameModalBody = styled(FlexBox)`\r\n  position: relative;\r\n  top: ${({ top }) => top || \"26px\"};\r\n  flex-direction: column;\r\n  width: 100%;\r\n  margin: ${({ margin }) => margin};\r\n  padding: ${({ padding }) => padding || \"10px 14px\"};\r\n  flex-grow: 1;\r\n\r\n  & > * + * {\r\n    margin-top: ${({ marginTop }) => marginTop || \"22px\"};\r\n  }\r\n`;\r\n\r\nexport const GameModalMessage = styled.p`\r\n  height: ${(props) => props.height || \"fit-content\"};\r\n  font-size: ${({ fontSize, theme }) => fontSize || theme.fontSize.xxxs};\r\n  font-weight: ${({ fontWeight }) => fontWeight || \"600\"};\r\n  color: #fff4e3;\r\n  margin: 0;\r\n  padding-bottom: ${(props) => props.paddingBottom || null};\r\n  padding-right: ${(props) => props.paddingRight || null};\r\n`;\r\n\r\nexport const GameModalSubMessage = styled.p`\r\n  width: ${(props) => props.width || \"fit-content\"};\r\n  height: ${(props) => props.height || \"fit-content\"};\r\n  font-size: ${(props) => props.fontSize || \"18px\"};\r\n  color: #fff;\r\n  margin: 0;\r\n`;\r\n\r\nexport const GameModalLongMessage = styled.textarea.attrs({ readonly: true })`\r\n  flex: 1;\r\n  width: 100%;\r\n  background-color: transparent;\r\n  font-size: ${({ theme }) => theme.fontSize.xxxs};\r\n  font-weight: 500;\r\n  color: #fff4e3;\r\n  margin: 0;\r\n  padding: 0 15px;\r\n  border: 0;\r\n`;\r\n\r\nexport const ButtonWrapper = styled(FlexBox)`\r\n  width: 100%;\r\n  margin: ${({ margin }) => margin || \"10px 0px 32px\"};\r\n`;\r\n\r\nexport const GameModalButton = styled.button`\r\n  width: ${(props) => props.width || \"7rem\"};\r\n  height: ${(props) => props.width || \"2.75rem\"};\r\n  font-size: ${({ theme }) => theme.fontSize.xxxs};\r\n  font-weight: 700;\r\n  background-color: transparent;\r\n  color: #fff;\r\n  border: 1px solid #aaa;\r\n\r\n  &:hover {\r\n    background-color: #ffffff32;\r\n  }\r\n`;\r\n\r\nexport const GameModalSelect = styled.select`\r\n  width: ${(props) => props.width || \"16.063rem\"};\r\n  height: ${(props) => props.height || \"3rem\"};\r\n  background-color: #e5e5e5;\r\n  font-size: 16px;\r\n`;\r\n\r\nexport const VolumeWrapper = styled(FlexBox)`\r\n  position: absolute;\r\n  width: calc(100% - 20px);\r\n  height: 156px;\r\n  padding: 5px;\r\n`;\r\n\r\nexport const GameModalInputWrapper = styled.div`\r\n  height: ${(props) => props.height || \"fit-content\"};\r\n  padding: 10px;\r\n  padding-top: ${(props) => props.paddingTop || null};\r\n  padding-bottom: ${(props) => props.paddingBottom || null};\r\n`;\r\n\r\nexport const GameModalInput = styled.input`\r\n  width: ${(props) => props.width || \"100%\"};\r\n  height: ${(props) => props.height || \"3rem\"};\r\n  margin-bottom: ${(props) => props.marginBottom || null};\r\n  padding: ${({ padding }) => padding || \"10px\"};\r\n  border: 0;\r\n  background-color: ${({ bgColor }) => bgColor || \"#e5e5e5\"};\r\n  color: ${({ color }) => color};\r\n  font-size: ${({ fontSize }) => fontSize || \"16px\"};\r\n`;\r\n\r\nexport const ArrowIconImage = styled.img`\r\n  width: ${(props) => props.width || \"35px\"};\r\n  height: ${(props) => props.width || \"48px\"};\r\n  margin: ${(props) => props.margin};\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const ExitMiniCircle = styled.button`\r\n  width: 1.125rem;\r\n  height: 1.125rem;\r\n  background-color: ${({ theme }) => theme.colors.error};\r\n  border-radius: 50%;\r\n\r\n  &:hover {\r\n    background-color: #cf5757;\r\n  }\r\n`;\r\n\r\nexport const Table = styled.table`\r\n  max-width: 100%;\r\n  width: 100%;\r\n  margin: ${({ margin }) => margin || \"1.3rem 0\"};\r\n`;\r\n\r\nexport const Tbody = styled.tbody`\r\n  & > * + * {\r\n    margin-top: 7px;\r\n  }\r\n`;\r\n\r\nexport const Tr = styled(FlexBox).attrs({ as: \"tr\" })`\r\n  background-color: ${({ bgColor }) => bgColor || \"transparent\"};\r\n`;\r\n\r\nexport const TdLabel = styled.td`\r\n  width: ${({ width }) => width || \"7.5rem\"};\r\n  text-align: ${({ textAlign }) => textAlign || \"left\"};\r\n  flex-shrink: 0;\r\n`;\r\n\r\nexport const TdContent = styled(FlexBox).attrs({ as: \"td\" })`\r\n  padding: ${({ padding }) => padding};\r\n  flex-basis: ${({ flexBasis }) => flexBasis};\r\n  flex-grow: ${({ flexGrow }) => flexGrow || 1};\r\n  font-size: ${({ fontSize }) => fontSize};\r\n  color: ${({ color }) => color};\r\n\r\n  & > * + * {\r\n    margin-bottom: 10px;\r\n  }\r\n`;\r\n\r\nexport const Textarea = styled.textarea`\r\n  width: 100%;\r\n  height: ${({ height }) => height};\r\n  padding: 4px 5px;\r\n  font-size: ${({ fontSize }) => fontSize};\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  margin: ${({ margin }) => margin};\r\n`;\r\n","import PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { FlexBox } from \"@/styles/FlexStyle\";\r\n\r\nconst Player = ({ type = \"wait\", avatarUrl, nickname, level }) => {\r\n  return (\r\n    <PlayerWrapper type={type} dir=\"col\" row=\"center\" col=\"center\">\r\n      <AvatarImage type={type} src={avatarUrl} />\r\n      <PlayerInfoWrapper col=\"center\">\r\n        <LevelBadge>{level}</LevelBadge>\r\n        <NicknameText>{nickname}</NicknameText>\r\n      </PlayerInfoWrapper>\r\n    </PlayerWrapper>\r\n  );\r\n};\r\n\r\nPlayer.propTypes = {\r\n  type: PropTypes.string,\r\n  avatarUrl: PropTypes.string,\r\n  nickname: PropTypes.string,\r\n  level: PropTypes.number\r\n};\r\n\r\nconst PlayerWrapper = styled(FlexBox)`\r\n  width: ${({ type }) => type !== \"play\" && \"9rem\"};\r\n  height: ${({ type }) => (type === \"play\" ? \"9.75rem\" : \"11.2rem\")};\r\n`;\r\n\r\nconst AvatarImage = styled(FlexBox).attrs({\r\n  as: \"img\"\r\n})`\r\n  width: ${({ type }) => (type === \"play\" ? \"6.75rem\" : \"7.25rem\")};\r\n  height: ${({ type }) => type === \"play\" && \"auto\"};\r\n`;\r\n\r\nconst PlayerInfoWrapper = styled(FlexBox)`\r\n  width: ${(props) => props.width || \"7.5rem\"};\r\n  margin-top: 7px;\r\n  font-size: ${(props) => props.size || \"16px\"};\r\n`;\r\n\r\nexport const LevelBadge = styled(FlexBox).attrs({\r\n  row: \"center\",\r\n  col: \"center\"\r\n})`\r\n  width: ${(props) => props.width || \"23px\"};\r\n  height: ${(props) => props.height || \"26px\"};\r\n  margin: 0px 6px 0 2px;\r\n  border: 1px solid ${({ theme }) => theme.colors.gray600};\r\n  border-radius: 5px;\r\n  font-size: 15px;\r\n  font-weight: 700;\r\n`;\r\n\r\nconst NicknameText = styled.span`\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n  word-break: break-all;\r\n`;\r\n\r\nexport default Player;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useRecoilValue, useSetRecoilState } from \"recoil\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport avatar from \"@/assets/images/avatar.png\";\r\nimport leftArrow from \"@/assets/images/left-arrow.png\";\r\nimport rightArrow from \"@/assets/images/right-arrow.png\";\r\nimport { FlexBox } from \"@/styles/FlexStyle\";\r\nimport useAxios from \"@/hooks/useAxios\";\r\nimport { userInfoState } from \"@/recoil/userState\";\r\nimport Player from \"./Player\";\r\nimport GameModal from \"./GameModal\";\r\nimport { ArrowIconImage, GameModalInput } from \"./GameModalStyle\";\r\nimport TitleBar from \"./TitleBar\";\r\nimport AvatarCanvas from \"./AvatarCanvas\";\r\nimport ValidationMessage from \"@/components/Web/Shared/Form/ValidationMessage\";\r\nimport { NICKNAME_REGEX } from \"../../../services/regexp\";\r\nimport { remoteApiConfigState } from \"@/recoil/boardState\";\r\n\r\nconst init = {\r\n  avatarUrl: avatar,\r\n  nickname: [\"닉네임\", \"닉네임\"],\r\n  level: [\"레벨\", 0],\r\n  winRate: [\"승률\", 0],\r\n  exp: [\"경험치\", \"30%\"],\r\n  isBanned: \"false\",\r\n  bannedReson: \"\"\r\n};\r\n\r\nconst accessories = [\r\n  \"\",\r\n  \"emo1\",\r\n  \"emo2\",\r\n  \"eye1\",\r\n  \"eye2\",\r\n  \"eye3\",\r\n  \"head1\",\r\n  \"head2\",\r\n  \"fx1\",\r\n  \"fx2\"\r\n];\r\n\r\nconst Profile = ({ type = \"default\", userId, profileInfos = init, isEditMode }) => {\r\n  const setUser = useSetRecoilState(userInfoState);\r\n  const [profile, setProfile] = useState(profileInfos);\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [isIncludingKey, setIsIncludingKey] = useState(false);\r\n  const [isWrongNickname, setIsWrongNickname] = useState(false);\r\n  const [modalType, setModalType] = useState(\"profile\");\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [currAvatar, setCurrAvatar] = useState(0);\r\n  const [avatarImage, setAvatarImage] = useState(null);\r\n  const [cookies] = useCookies([\"sessionId\", \"userId\"]);\r\n  const [apiConfig, setApiConfig] = useState({\r\n    method: \"get\",\r\n    url: `/user/${!userId ? \"me\" : userId}`,\r\n    headers: { sessionId: cookies.sessionId }\r\n  });\r\n  const remoteApiConfig = useRecoilValue(remoteApiConfigState);\r\n  const { response, loading, error, fetchData } = useAxios(apiConfig, false);\r\n\r\n  useEffect(() => {\r\n    if (apiConfig !== null) {\r\n      fetchData();\r\n    }\r\n  }, [apiConfig]);\r\n\r\n  useEffect(() => {\r\n    if (remoteApiConfig !== null) {\r\n      setApiConfig(remoteApiConfig);\r\n    }\r\n  }, [remoteApiConfig]);\r\n\r\n  useEffect(() => {\r\n    if (response !== null) {\r\n      const data = response.result;\r\n      setProfile({\r\n        nickname: [\"닉네임\", data.nickname],\r\n        level: [\"레벨\", data.level],\r\n        winRate: [\"승률\", data.winRate],\r\n        exp: [\"경험치\", data.exp],\r\n        avatarUrl: data.avatarAccessoryIndex\r\n      });\r\n      setUser((prev) => ({\r\n        ...prev,\r\n        nickname: data.nickname?.split(\"#\")[0],\r\n        level: data.level,\r\n        winRate: data.winRate,\r\n        exp: data.exp,\r\n        avatarUrl: data.avatarAccessoryIndex\r\n      }));\r\n      setCurrAvatar(data.avatarAccessoryIndex);\r\n    }\r\n  }, [response]);\r\n\r\n  const onNicknameChange = (e) => {\r\n    setProfile({\r\n      ...profile,\r\n      nickname: [\"닉네임\", e.target.value]\r\n    });\r\n    setUser((prev) => ({ ...prev, nickname: e.target.value }));\r\n  };\r\n\r\n  const onNicknameBlur = (e) => {\r\n    if (!NICKNAME_REGEX.test(e.target.value)) {\r\n      setUser((prev) => ({ ...prev, nickname: \"\" }));\r\n      setIsWrongNickname(true);\r\n      return;\r\n    } else {\r\n      setIsWrongNickname(false);\r\n    }\r\n  };\r\n\r\n  const onSwitchAvatarClick = (dir) => {\r\n    let index;\r\n    if (dir === \"left\") {\r\n      index = currAvatar > 0 ? currAvatar - 1 : accessories.length - 1;\r\n    } else if (dir === \"right\") {\r\n      index = (currAvatar + 1) % accessories.length;\r\n    }\r\n\r\n    setCurrAvatar(index);\r\n    setProfile((prev) => ({ ...prev, avatarUrl: index }));\r\n    setUser((prev) => ({ ...prev, avatarUrl: index }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isPlaying ? (\r\n        <Player\r\n          avatarUrl={profile.avatarUrl}\r\n          nickname={profile.nickname[1]}\r\n          level={profile.level[1]}\r\n        />\r\n      ) : type === \"modal\" ? (\r\n        <ProfileWrapper type={type} dir=\"col\">\r\n          <ProfileUpperWrapper type={type}>\r\n            {isEditMode ? (\r\n              <FlexBox col=\"center\">\r\n                <ArrowIconImage\r\n                  src={leftArrow}\r\n                  onClick={() => onSwitchAvatarClick(\"left\")}\r\n                />\r\n                <AvatarCanvas\r\n                  avatar={avatar}\r\n                  item={accessories[profile.avatarUrl]}\r\n                  setAvatarImage={setAvatarImage}\r\n                />\r\n                <ArrowIconImage\r\n                  src={rightArrow}\r\n                  onClick={() => onSwitchAvatarClick(\"right\")}\r\n                />\r\n              </FlexBox>\r\n            ) : (\r\n              <AvatarCanvas\r\n                avatar={avatar}\r\n                item={accessories[profile.avatarUrl]}\r\n                setAvatarImage={setAvatarImage}\r\n                width=\"7rem\"\r\n              />\r\n            )}\r\n            <ProfileInfoWrapper dir=\"col\" row=\"center\" marginLeft={isEditMode && \"16px\"}>\r\n              {isIncludingKey\r\n                ? Object.entries(profile)?.map(([key, [title, value]]) => (\r\n                    <ProfileInfoField row=\"between\" key={key}>\r\n                      <ProfileInfoKey>{title}</ProfileInfoKey>\r\n                      <ProfileInfo>{value}</ProfileInfo>\r\n                    </ProfileInfoField>\r\n                  ))\r\n                : Object.entries(profile)\r\n                    .filter(([key]) => [\"nickname\", \"level\", \"winRate\"].includes(key))\r\n                    ?.map(([key, [title, value]]) => (\r\n                      <div key={key}>\r\n                        <span>{key !== \"nickname\" && title}</span>\r\n                        {isEditMode && key === \"nickname\" ? (\r\n                          <>\r\n                            <GameModalInput\r\n                              type=\"text\"\r\n                              value={value.replace(/#[\\s\\S]*$/, \"\")}\r\n                              onChange={onNicknameChange}\r\n                              onBlur={onNicknameBlur}\r\n                              height=\"1.5rem\"\r\n                              padding=\"0\"\r\n                              bgColor=\"transparent\"\r\n                              color=\"#fff\"\r\n                              fontSize=\"20px\"\r\n                            />\r\n                            {isWrongNickname && (\r\n                              <ValidationMessage\r\n                                message=\"잘못된 닉네임입니다.\"\r\n                                fontSize=\"14px\"\r\n                                margin=\"0\"\r\n                              />\r\n                            )}\r\n                          </>\r\n                        ) : (\r\n                          <ProfileInfo\r\n                            margin={key !== \"nickname\" && \"0 0 0 15px\"}\r\n                            fontSize={key === \"nickname\" && \"20px\"}\r\n                          >\r\n                            {value}\r\n                          </ProfileInfo>\r\n                        )}\r\n                      </div>\r\n                    ))}\r\n            </ProfileInfoWrapper>\r\n          </ProfileUpperWrapper>\r\n        </ProfileWrapper>\r\n      ) : (\r\n        <>\r\n          <ProfileWrapper dir=\"col\">\r\n            <TitleBar type=\"profile\" />\r\n            <ProfileUpperWrapper\r\n              onClick={() => {\r\n                setModalType(\"profile\");\r\n                setIsModalOpen(true);\r\n              }}\r\n            >\r\n              <AvatarCanvas\r\n                avatar={avatar}\r\n                item={accessories[profile.avatarUrl]}\r\n                setAvatarImage={setAvatarImage}\r\n                width=\"5.4rem\"\r\n              />\r\n              <ProfileInfoWrapper dir=\"col\" row=\"center\">\r\n                {isIncludingKey\r\n                  ? Object.entries(profile)?.map(([key, [title, value]], idx) => (\r\n                      <ProfileInfoField row=\"between\" key={idx}>\r\n                        <ProfileInfoKey>{title}</ProfileInfoKey>\r\n                        <ProfileInfo>{value}</ProfileInfo>\r\n                      </ProfileInfoField>\r\n                    ))\r\n                  : Object.entries(profile)\r\n                      .filter(([key]) => [\"nickname\", \"level\"].includes(key))\r\n                      ?.map(([key, [title, value]], idx) => (\r\n                        <ProfileInfo key={idx}>\r\n                          {key === \"nickname\" ? value : `${title} ${value}`}\r\n                        </ProfileInfo>\r\n                      ))}\r\n              </ProfileInfoWrapper>\r\n            </ProfileUpperWrapper>\r\n            {!isIncludingKey && (\r\n              <ExpWrapper row=\"center\" col=\"center\">\r\n                <ExpBar>\r\n                  <ProgressToNextLevel exp={profile?.exp[1]} />\r\n                  <ExpText>{profile?.exp[1]}</ExpText>\r\n                </ExpBar>\r\n              </ExpWrapper>\r\n            )}\r\n          </ProfileWrapper>\r\n          {isModalOpen && (\r\n            <GameModal\r\n              type={modalType}\r\n              setType={setModalType}\r\n              isOpen={isModalOpen}\r\n              setIsOpen={setIsModalOpen}\r\n              userId={cookies.userId}\r\n              height=\"14rem\"\r\n            />\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  type: PropTypes.string,\r\n  userId: PropTypes.number,\r\n  profileInfos: PropTypes.object,\r\n  isEditMode: PropTypes.bool\r\n};\r\n\r\nconst ProfileWrapper = styled(FlexBox)`\r\n  padding: 3px 5px;\r\n  background-color: ${({ type }) =>\r\n    type === \"modal\" ? \"transparent\" : \"rgb(227 227 227)\"};\r\n  flex-grow: 1;\r\n  border: ${({ type }) => type !== \"modal\" && \"1px solid #ccc\"};\r\n  color: ${({ type }) => type === \"modal\" && \"#fff\"};\r\n`;\r\n\r\nconst ProfileUpperWrapper = styled(FlexBox)`\r\n  min-height: 6rem;\r\n  padding: 8px;\r\n\r\n  &:hover {\r\n    cursor: ${({ type }) => type !== \"modal\" && \"pointer\"};\r\n  }\r\n`;\r\n\r\nconst ProfileInfoWrapper = styled(FlexBox)`\r\n  margin-left: ${({ marginLeft }) => marginLeft || \"10px\"};\r\n`;\r\n\r\nconst ProfileInfoField = styled(FlexBox)`\r\n  width: 31.375rem;\r\n`;\r\n\r\nconst ProfileInfoKey = styled.span``;\r\n\r\nconst ProfileInfo = styled.span`\r\n  margin: ${({ margin }) => margin};\r\n  font-size: ${({ fontSize }) => fontSize};\r\n`;\r\n\r\nconst AvatarImage = styled(FlexBox).attrs({\r\n  as: \"img\"\r\n})`\r\n  width: ${(props) => (props.type === \"player\" ? \"7.75rem\" : \"5.3rem\")};\r\n  height: ${(props) => (props.type === \"player\" ? \"auto\" : \"\")};\r\n`;\r\n\r\n// ============ Exp ============\r\nconst ExpWrapper = styled(FlexBox)`\r\n  width: ${(props) => props.width || \"100%\"};\r\n  height: 2.625rem;\r\n`;\r\n\r\nconst ExpBar = styled.div`\r\n  width: 92%;\r\n  height: 100%;\r\n  border: 1px solid ${({ theme }) => theme.colors.gray600};\r\n  border-radius: 15px;\r\n`;\r\n\r\nconst ProgressToNextLevel = styled.div`\r\n  width: ${({ exp }) => exp};\r\n  height: 100%;\r\n  background-color: ${({ theme }) => theme.colors.gray600};\r\n  border-radius: 13px 0 0 13px;\r\n`;\r\n\r\nconst ExpText = styled.span`\r\n  position: relative;\r\n  left: 43%;\r\n  bottom: 33px;\r\n  color: #fff;\r\n  font-weight: 700;\r\n`;\r\n\r\nexport default Profile;\r\n","import styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { FlexBox } from \"@/styles/FlexStyle\";\r\nimport { faListUl, faTrophy, faUserLarge } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst TitleBar = ({\r\n  type,\r\n  info = {},\r\n  showWaitingRoom,\r\n  setShowWaitingRoom,\r\n  showOpenRoom,\r\n  setShowOpenRoom\r\n}) => {\r\n  const {\r\n    roomNumber,\r\n    id,\r\n    title,\r\n    currentUserCount,\r\n    maxUserCount,\r\n    maxRound,\r\n    roundTimeLimit\r\n  } = info;\r\n  return (\r\n    <StyledTitleBar row=\"between\" key={id && id}>\r\n      {/* Left */}\r\n      {type === \"list\" && (\r\n        <div>\r\n          <TitleIcon icon={faListUl} />\r\n          <span>방 목록</span>\r\n        </div>\r\n      )}\r\n      {type === \"rank\" && (\r\n        <div>\r\n          <TitleIcon size=\"xs\" icon={faTrophy} />\r\n          <span>랭킹</span>\r\n        </div>\r\n      )}\r\n      {type === \"profile\" && (\r\n        <div>\r\n          <TitleIcon size=\"xs\" icon={faUserLarge} />\r\n          <span>프로필</span>\r\n        </div>\r\n      )}\r\n      {type === \"room\" && <span>{`[${roomNumber}] ${title}`}</span>}\r\n\r\n      {/* Right */}\r\n      {type === \"list\" && (\r\n        <TitleRightSideWrapper left=\"10px\">\r\n          <label>\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={showWaitingRoom}\r\n              onChange={(e) => setShowWaitingRoom(e.target.checked)}\r\n            />\r\n            대기방만 보기\r\n          </label>\r\n          <label>\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={showOpenRoom}\r\n              onChange={(e) => setShowOpenRoom(e.target.checked)}\r\n            />\r\n            열린 방만 보기\r\n          </label>\r\n        </TitleRightSideWrapper>\r\n      )}\r\n      {type === \"room\" && (\r\n        <TitleRightSideWrapper left=\"28px\">\r\n          <span>{`참여자 ${currentUserCount}/${maxUserCount}`}</span>\r\n          <span>{`라운드 ${maxRound}`}</span>\r\n          <span>{`${roundTimeLimit / 1000}초`}</span>\r\n        </TitleRightSideWrapper>\r\n      )}\r\n    </StyledTitleBar>\r\n  );\r\n};\r\n\r\nTitleBar.propTypes = {\r\n  type: PropTypes.string,\r\n  info: PropTypes.shape({\r\n    id: PropTypes.string,\r\n    title: PropTypes.string,\r\n    currentUserCount: PropTypes.number,\r\n    maxUserCount: PropTypes.number,\r\n    maxRound: PropTypes.number,\r\n    roundTimeLimit: PropTypes.number\r\n  }),\r\n  showWaitingRoom: PropTypes.bool,\r\n  setShowWaitingRoom: PropTypes.func,\r\n  showOpenRoom: PropTypes.bool,\r\n  setShowOpenRoom: PropTypes.func\r\n};\r\n\r\nconst StyledTitleBar = styled(FlexBox).attrs({\r\n  col: \"center\"\r\n})`\r\n  width: 100%;\r\n  height: 1.5rem;\r\n  padding: 0 7px;\r\n  background-color: rgba(221, 221, 221, 0.5);\r\n  border-radius: 4px;\r\n  box-shadow: 2px 2px 1px #00000025;\r\n  font-size: 14px;\r\n  font-weight: 700;\r\n  opacity: 0.8;\r\n\r\n  & > * + * {\r\n    margin-left: 5px;\r\n  }\r\n`;\r\n\r\nconst TitleRightSideWrapper = styled(FlexBox)`\r\n  & > * + * {\r\n    margin-left: ${({ left }) => left};\r\n  }\r\n`;\r\n\r\n// Cf. FontAwesomeIcon에서 size 클래스 제공하고 있음\r\n// xs: 12px\r\nconst TitleIcon = styled(FontAwesomeIcon)`\r\n  margin-right: 5px;\r\n  font-size: \"14px\";\r\n`;\r\n\r\nexport default TitleBar;\r\n","import styled from \"styled-components\";\r\n\r\nexport const ValidationMessageWrapper = styled.div`\r\n  width: ${(props) => props.width || \"fit-content\"};\r\n  height: ${(props) => props.height || \"fit-content\"};\r\n`;\r\n\r\nexport const ValidationMessageP = styled.p`\r\n  font-size: ${({ fontSize }) => fontSize || \"16px\"};\r\n  font-weight: ${({ fontWeight }) => fontWeight};\r\n  color: ${({ color, theme }) => (color ? color : theme.colors.error)};\r\n  margin: ${({ margin }) => margin || \"0 3px\"};\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { ValidationMessageWrapper, ValidationMessageP } from \"./ValidationMessageStyle\";\r\n\r\nconst ValidationMessage = ({ message, fontSize, fontWeight, color, margin }) => {\r\n  return (\r\n    <ValidationMessageWrapper>\r\n      <ValidationMessageP\r\n        fontSize={fontSize}\r\n        fontWeight={fontWeight}\r\n        color={color}\r\n        margin={margin}\r\n      >\r\n        {message}\r\n      </ValidationMessageP>\r\n    </ValidationMessageWrapper>\r\n  );\r\n};\r\n\r\nValidationMessage.propTypes = {\r\n  message: PropTypes.string,\r\n  fontSize: PropTypes.string,\r\n  fontWeight: PropTypes.string,\r\n  color: PropTypes.string,\r\n  margin: PropTypes.string\r\n};\r\n\r\nexport default ValidationMessage;\r\n","import { lazy, useState, useEffect } from \"react\";\r\nimport { Routes, Route } from \"react-router-dom\";\r\nimport { useSetRecoilState } from \"recoil\";\r\nimport { initSocket, disconnectSocket, onBanned } from \"../services/socket\";\r\nimport Modal from \"../components/Game/Shared/GameModal\";\r\nimport { audioPlayState } from \"../recoil/soundState\";\r\nconst Lobby = lazy(() => import(\"@/pages/Game/Lobby\"));\r\nconst GameRoom = lazy(() => import(\"@/pages/Game/GameRoom\"));\r\n\r\nconst GameRoute = () => {\r\n  const setAudioPlay = useSetRecoilState(audioPlayState);\r\n  const [error, setError] = useState(null);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setAudioPlay(true);\r\n    initSocket(\r\n      () => {},\r\n      (error) => {\r\n        setError(error);\r\n        setIsModalOpen(true);\r\n        return;\r\n      }\r\n    );\r\n\r\n    onBanned((bannedData) => {\r\n      setError(bannedData);\r\n      setIsModalOpen(true);\r\n      return;\r\n    });\r\n\r\n    return () => {\r\n      setAudioPlay(false);\r\n      disconnectSocket();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Routes>\r\n      {isModalOpen && (\r\n        <Modal\r\n          type=\"error\"\r\n          isOpen={isModalOpen}\r\n          setIsOpen={setIsModalOpen}\r\n          height=\"14rem\"\r\n        >\r\n          {error}\r\n        </Modal>\r\n      )}\r\n      <Route path=\"/\" element={<Lobby />} />\r\n      <Route path=\":roomId\" element={<GameRoom />} />\r\n    </Routes>\r\n  );\r\n};\r\n\r\nexport default GameRoute;\r\n","import styled from \"styled-components\";\r\n\r\nexport const FlexBox = styled.div`\r\n  display: flex;\r\n  flex-direction: ${({ dir }) => setFlexDirection(dir)};\r\n  justify-content: ${({ row }) => setJustifyContent(row)};\r\n  align-items: ${({ col }) => setAlignItems(col)};\r\n  position: ${({ position }) => position};\r\n  top: ${({ top }) => top};\r\n  bottom: ${({ bottom }) => bottom};\r\n  left: ${({ left }) => left};\r\n  right: ${({ right }) => right};\r\n  width: ${({ width }) => width};\r\n  height: ${({ height }) => height};\r\n  margin: ${({ margin }) => margin};\r\n  padding: ${({ padding }) => padding};\r\n  flex: ${({ flex }) => flex};\r\n  background-color: ${({ bgColor }) => bgColor};\r\n  box-shadow: ${({ shadow }) => shadow};\r\n  border: ${({ border }) => border};\r\n  border-top: ${({ borderTop }) => borderTop};\r\n  border-right: ${({ borderRight }) => borderRight};\r\n  border-bottom: ${({ borderBottom }) => borderBottom};\r\n  border-left: ${({ borderLeft }) => borderLeft};\r\n  border-radius: ${({ borderRadius }) => borderRadius};\r\n  z-index: ${({ zIndex }) => zIndex};\r\n\r\n  ${({ clicky }) =>\r\n    clicky &&\r\n    `\r\n    :hover {\r\n      cursor: pointer;\r\n    }\r\n  `}\r\n`;\r\n\r\n// flex-box의 flex-direction 설정\r\nconst setFlexDirection = (dir) => {\r\n  switch (dir) {\r\n    case \"col\":\r\n      return \"column\";\r\n  }\r\n};\r\n\r\n// flex-box 안의 justify-content 값 설정\r\nconst setJustifyContent = (row) => {\r\n  switch (row) {\r\n    case \"center\":\r\n      return \"center\";\r\n    case \"start\":\r\n      return \"flex-start\";\r\n    case \"end\":\r\n      return \"flex-end\";\r\n    case \"between\":\r\n      return \"space-between\";\r\n    case \"around\":\r\n      return \"space-around\";\r\n    case \"evenly\":\r\n      return \"space-evenly\";\r\n    default:\r\n      return \"flex-start\";\r\n  }\r\n};\r\n\r\n// flex-box 안의 align-items 값 설정\r\nconst setAlignItems = (col) => {\r\n  switch (col) {\r\n    case \"center\":\r\n      return \"center\";\r\n    case \"start\":\r\n      return \"flex-start\";\r\n    case \"end\":\r\n      return \"flex-end\";\r\n    case \"baseline\":\r\n      return \"baseline\";\r\n    case \"stretch\":\r\n      return \"stretch\";\r\n    default:\r\n      return \"stretch\";\r\n  }\r\n};\r\n\r\nexport default FlexBox;\r\n","import { useRef, useEffect, useState, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../services/const\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: BASE_URL\r\n  // withCredentials: true\r\n});\r\n\r\n// config = { method, url, headers, data }\r\nconst useAxios = (config, executeOnMount = true) => {\r\n  const isDataFetched = useRef(false);\r\n  const [response, setResponse] = useState(null);\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const fetchData = useCallback(async () => {\r\n    setLoading(true);\r\n    setError(\"\");\r\n    try {\r\n      const res = await instance.request(config);\r\n      setResponse(res.data);\r\n    } catch (error) {\r\n      setError(error.response?.data.error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [config]);\r\n\r\n  useEffect(() => {\r\n    if (isDataFetched.current) return;\r\n\r\n    if (executeOnMount) {\r\n      fetchData();\r\n      isDataFetched.current = true;\r\n    }\r\n  }, [executeOnMount]);\r\n\r\n  return { response, error, loading, fetchData };\r\n};\r\n\r\nexport default useAxios;\r\n","import { atom } from \"recoil\";\r\n\r\nexport const isAnswerCompletedState = atom({\r\n  key: \"isAnswerCompletedState\",\r\n  default: {} // e.g., { 'item1': true, 'item2': false }\r\n});\r\n\r\n// 게시물 id\r\nexport const itemIdState = atom({\r\n  key: \"itemIdState\",\r\n  default: null\r\n});\r\n\r\nexport const remoteApiConfigState = atom({\r\n  key: \"remoteApiConfigState\",\r\n  default: null\r\n});\r\n\r\nexport const selectedBoardItemIdState = atom({\r\n  key: \"selectedBoardItemIdState\",\r\n  default: null\r\n});\r\n","import { atom } from \"recoil\";\r\n\r\nexport const roomInfoListState = atom({\r\n  key: \"roomInfoListState\",\r\n  default: []\r\n});\r\n\r\nexport const roomIdState = atom({\r\n  key: \"roomIdState\",\r\n  default: null\r\n});\r\n\r\nexport const roomInfoState = atom({\r\n  key: \"roomInfoState\",\r\n  default: {\r\n    title: \"\",\r\n    password: \"\",\r\n    maxUserCount: 8,\r\n    maxRound: 5,\r\n    roundTimeLimit: 90000\r\n  }\r\n});\r\n\r\nexport const isPlayingRoomState = atom({\r\n  key: \"isPlayingRoomState\",\r\n  default: false\r\n});\r\n","import { atom, selector, selectorFamily } from \"recoil\";\r\n\r\nexport const userInfoState = atom({\r\n  key: \"userInfoState\",\r\n  default: null // e.g., { username: \"username\", nickname: \"nickname\", role: \"admin\", level: 1, winRate: 0.0, exp: 0, avatarUrl: \"\" }\r\n});\r\n\r\n// userState -> avatarUrl만 추출\r\nexport const avatarUrlState = selector({\r\n  key: \"avatarUrlState\",\r\n  get: ({ get }) => {\r\n    const user = get(userInfoState);\r\n    return user?.avatarUrl;\r\n  }\r\n});\r\n\r\n// userState -> isActive(활성화 여부)만 추출\r\nexport const isActiveAccountState = atom({\r\n  key: \"isActiveAccountState\",\r\n  default: true\r\n});\r\n\r\n// read-only\r\n// export const isActiveAccountState = selector({\r\n//   key: \"isActiveAccountState\",\r\n//   get: ({ get }) => {\r\n//     const user = get(userInfoState);\r\n//     return user.isActive;\r\n//   }\r\n// });\r\n\r\n// 대기실 플레이어들의 상태 목록\r\nexport const waitingPlayerListState = atom({\r\n  key: \"waitingPlayerListState\",\r\n  default: []\r\n});\r\n\r\n// 대기실 플레이어의 상태\r\nexport const waitingPlayerState = atom({\r\n  key: \"waitingPlayerState\",\r\n  default: {\r\n    isReady: false,\r\n    isHost: true\r\n  }\r\n});\r\n\r\n// 인게임 플레이어들의 상태 목록\r\nexport const playingPlayerListState = atom({\r\n  key: \"playingPlayerListState\",\r\n  default: []\r\n});\r\n\r\n// 인게임 플레이어의 상태\r\nexport const playingPlayerState = atom({\r\n  key: \"playingPlayerState\",\r\n  default: {\r\n    myTurn: false,\r\n    score: 0\r\n  }\r\n\r\n  // get:\r\n  //   () =>\r\n  //   ({ get }) => {\r\n  //     const user = get(userInfoState);\r\n  //     return {\r\n  //       ...user,\r\n  //       myTurn: false,\r\n  //       roundScore: [],\r\n  //       totalScore: 0\r\n  //     };\r\n  //   },\r\n  // set:\r\n  //   () =>\r\n  //   ({ set }, newValue) => {\r\n  //     set(playingPlayerState(), newValue);\r\n  //   }\r\n});\r\n\r\n// 인게임 플레이어 -> 인게임 플레이어들 목록 동기화\r\nexport const syncPlayingPlayerToListState = selector({\r\n  key: \"syncPlayingPlayerToListState\",\r\n  get: ({ get }) => {\r\n    const playerList = get(playingPlayerListState);\r\n    const currPlayer = get(playingPlayerState);\r\n    return playerList.map((player) =>\r\n      player.id === currPlayer.id ? currPlayer : player\r\n    );\r\n  },\r\n  set: ({ set }, newValue) => {\r\n    set(playingPlayerListState, newValue);\r\n  }\r\n});\r\n","export const NICKNAME_REGEX = /^[a-zA-Z0-9가-힣]{1,15}$/;\r\nexport const POST_TITLE_REGEX = /^[a-zA-Z0-9가-힣 -~]{1,100}/;\r\nexport const POST_SEARCH_WORD_REGEX = /^[a-zA-Z가-힣0-9 -~].+$/;\r\nexport const SPECIAL_CHARACTERS_REGEX = /[-!$%^&*()_+|~=`{}\\[\\]:\";'<>?,.\\/]/;\r\n","import io from \"socket.io-client\";\r\nimport { Cookies } from \"react-cookie\";\r\nimport { SOCKET_URL } from \"./const\";\r\n\r\nconst cookies = new Cookies();\r\n\r\nconst client = io(SOCKET_URL, {\r\n  path: \"/game/socket.io/\",\r\n  // transports: [\"websocket\"],\r\n  reconnection: false,\r\n  extraHeaders: {\r\n    sessionId: cookies.get(\"sessionId\")\r\n  }\r\n});\r\n\r\n// ====== 소켓 초기화 ======\r\nexport const initSocket = (callBack, errorCallBack) => {\r\n  client.on(\"connect\", () => {\r\n    console.log(\"[log] Connect to the Server...\");\r\n    callBack();\r\n  });\r\n\r\n  client.on(\"error\", (error) => {\r\n    console.error(`[Error]: ${error}`);\r\n    if (!!errorCallBack) errorCallBack(error);\r\n  });\r\n};\r\n\r\n// ====== 방 목록 조회 ======\r\nexport const loadRoomList = (callBack) => {\r\n  client.emit(\"load room list\");\r\n\r\n  client.off(\"complete load room list\");\r\n  client.on(\"complete load room list\", (roomList) => {\r\n    console.log(\"[log] Complete Load Room List: \", roomList);\r\n    callBack(roomList);\r\n  });\r\n};\r\n\r\n// ====== 방 목록 갱신: 추가 ======\r\nexport const onLoadNewRoom = (callBack) => {\r\n  client.on(\"load new room\", (newRoom) => {\r\n    console.log(\"[log] Load New Room: \", newRoom);\r\n    callBack(newRoom);\r\n  });\r\n};\r\n\r\n// ====== 방 목록 갱신: 삭제 ======\r\nexport const onDestroyRoom = (callBack) => {\r\n  client.on(\"destroy room\", (roomId) => {\r\n    console.log(\"[log] Destroy Room: \", roomId);\r\n    callBack(roomId);\r\n  });\r\n};\r\n\r\n// ====== 방 목록 갱신: 참여 인원 변경 ======\r\nexport const onUpdateCurrentPlayerCount = (callBack) => {\r\n  client.on(\"update room member count\", (data) => {\r\n    console.log(\"[log] update room member count: \", data);\r\n    callBack(data);\r\n  });\r\n};\r\n\r\n// ====== 방 목록 갱신: 방 설정 변경 ======\r\nexport const onUpdateRoomConfig = (callBack) => {\r\n  client.on(\"update room config\", (newRoom) => {\r\n    console.log(\"[log] update room config: \", newRoom);\r\n    callBack(newRoom);\r\n  });\r\n};\r\n\r\n// ====== 방 생성 ======\r\nexport const createRoom = (roomData, callBack) => {\r\n  client.emit(\"create room\", roomData);\r\n\r\n  client.off(\"complete create room\");\r\n  client.on(\"complete create room\", () => {\r\n    console.log(\"[log] complete create room...\");\r\n    callBack();\r\n  });\r\n\r\n  client.off(\"error\");\r\n  client.on(\"error\", (error) => {\r\n    console.error(`[Error]: ${error}`);\r\n  });\r\n};\r\n\r\n// ====== 방 수정 ======\r\nexport const changeRoomConfig = (roomData, callBack) => {\r\n  client.emit(\"change room config\", roomData);\r\n\r\n  client.off(\"complete change room config\");\r\n  client.on(\"complete change room config\", (room) => {\r\n    console.log(\"[log] complete change room config: \", room);\r\n    callBack(room);\r\n  });\r\n};\r\n\r\nexport const onChangeRoomConfig = (callBack) => {\r\n  client.on(\"complete change room config\", (room) => {\r\n    console.log(\"[log] complete change room config: \", room);\r\n    callBack(room);\r\n  });\r\n};\r\n\r\n// ====== 방 참가 ======\r\nexport const joinRoom = (authorization, callBack, errorCallBack) => {\r\n  client.emit(\"join room\", authorization);\r\n\r\n  client.off(\"complete join room\");\r\n  client.on(\"complete join room\", () => {\r\n    console.log(\"[log] complete join room... \");\r\n    callBack();\r\n  });\r\n\r\n  client.off(\"error\");\r\n  client.on(\"error\", (error) => {\r\n    console.error(`[Error]: ${error}`);\r\n    if (!!errorCallBack) errorCallBack(error);\r\n  });\r\n};\r\n\r\n// 다른 유저 참가 알림\r\nexport const onUserJoinRoom = (callBack) => {\r\n  client.on(\"some user join room\", (userId) => {\r\n    console.log(\"[log] some user join room: \", userId);\r\n    callBack(userId);\r\n  });\r\n};\r\n\r\n// ====== 방 조회 ======\r\nexport const loadRoom = (callBack, errorCallBack) => {\r\n  client.emit(\"load room\");\r\n\r\n  client.off(\"complete load room\");\r\n  client.on(\"complete load room\", (room) => {\r\n    console.log(\"[log] complete load room: \", room);\r\n    if (!!callBack) callBack(room);\r\n  });\r\n\r\n  client.off(\"error\");\r\n  client.on(\"error\", (error) => {\r\n    console.error(`[Error]: ${error}`);\r\n    if (!!errorCallBack) errorCallBack(error);\r\n  });\r\n};\r\n\r\nexport const onLoadRoom = (callBack, errorCallBack) => {\r\n  client.off(\"complete load room\");\r\n  client.on(\"complete load room\", (room) => {\r\n    console.log(\"[log] complete load room: \", room);\r\n    callBack(room);\r\n  });\r\n\r\n  client.off(\"error\");\r\n  client.on(\"error\", (error) => {\r\n    console.error(`[Error]: ${error}`);\r\n    if (errorCallBack) errorCallBack(error);\r\n  });\r\n};\r\n\r\n// ====== 방 퇴장 ======\r\nexport const leaveRoom = (callBack, errorCallBack) => {\r\n  client.emit(\"leave room\");\r\n\r\n  client.off(\"complete leave room\");\r\n  client.on(\"complete leave room\", () => {\r\n    console.log(\"[log] complete leave room... \");\r\n    callBack();\r\n  });\r\n\r\n  client.off(\"error\");\r\n  client.on(\"error\", (error) => {\r\n    console.error(`[Error]: ${error}`);\r\n    if (errorCallBack) errorCallBack(error);\r\n  });\r\n};\r\n\r\n// 다른 유저 퇴장 알림\r\nexport const onUserLeaveRoom = (callBack) => {\r\n  client.off(\"some user leave room\");\r\n  client.on(\"some user leave room\", (roomStatus) => {\r\n    console.log(\"[log] some user leave room, userId: \", roomStatus);\r\n    callBack(roomStatus);\r\n  });\r\n};\r\n\r\n// 방장 변경\r\nexport const onChangeRoomOwner = (callBack) => {\r\n  client.on(\"change room owner\", (newOwnerIdx) => {\r\n    console.log(\"[log] change room owner, newOwnerIdx: \", newOwnerIdx);\r\n    callBack(newOwnerIdx);\r\n  });\r\n};\r\n\r\n// ====== 준비 요청 ======\r\nexport const switchReadyState = (newState, callBack) => {\r\n  client.emit(\"switch ready state\", newState);\r\n\r\n  client.off(\"complete switch ready state\");\r\n  client.on(\"complete switch ready state\", (data) => {\r\n    console.log(\"[log] complete switch ready state, data: \", data);\r\n    callBack(data);\r\n  });\r\n\r\n  client.off(\"error\");\r\n  client.on(\"error\", (error) => {\r\n    console.error(`[Error]: ${error}`);\r\n    if (errorCallBack) errorCallBack(error);\r\n  });\r\n};\r\n\r\nexport const onSwitchReadyState = (callBack) => {\r\n  client.on(\"complete switch ready state\", (data) => {\r\n    console.log(\"[log] complete switch ready state, data: \", data);\r\n    callBack(data);\r\n  });\r\n};\r\n\r\n// ====== 게임 시작 ======\r\nexport const gameStart = () => {\r\n  client.emit(\"game start\");\r\n};\r\n\r\nexport const onGameStart = (callBack, errorCallBack) => {\r\n  client.off(\"complete game start\");\r\n  client.on(\"complete game start\", (room) => {\r\n    console.log(\"[log] complete game start, room\", room);\r\n    callBack(room);\r\n  });\r\n\r\n  client.off(\"error\");\r\n  client.on(\"error\", (error) => {\r\n    console.log(\"[Error] error: \", error);\r\n    errorCallBack(error);\r\n  });\r\n};\r\n\r\n// ====== 라운드 시작 요청 ======\r\nexport const roundStart = () => {\r\n  client.emit(\"round start\");\r\n};\r\n\r\nexport const onRoundStart = (callBack) => {\r\n  client.off(\"complete round start\");\r\n  client.on(\"complete round start\", (gameStatus) => {\r\n    console.log(\"[log] complete round start, room: \", gameStatus);\r\n    callBack(gameStatus);\r\n  });\r\n};\r\n\r\n// ====== 턴 시작 요청 ======\r\nexport const turnStart = () => {\r\n  client.emit(\"turn start\");\r\n};\r\n\r\nexport const onTurnStart = (callBack, errorCallBack) => {\r\n  client.off(\"complete turn start\");\r\n  client.on(\"complete turn start\", (gameStatus) => {\r\n    console.log(\"[log] complete turn start, room: \", gameStatus);\r\n    callBack(gameStatus);\r\n  });\r\n\r\n  client.off(\"error\");\r\n  client.on(\"error\", (error) => {\r\n    console.log(\"[Error]: \", error);\r\n    errorCallBack(error);\r\n  });\r\n};\r\n\r\n// ====== 채팅 ======\r\nexport const sendMessage = (message) => {\r\n  if (client.connected) {\r\n    client.emit(\"chat\", message);\r\n  }\r\n};\r\n\r\nexport const receiveMessage = (callBack) => {\r\n  client.off(\"chat\");\r\n  client.on(\"chat\", (data) => {\r\n    console.log(\"[log] chat, chatData: \", data);\r\n    callBack(data);\r\n  });\r\n};\r\n\r\nexport const receiveSayWordFail = (callBack) => {\r\n  client.off(\"say word fail\");\r\n  client.on(\"say word fail\", (word) => {\r\n    console.log(\"[log] say word fail: \", word);\r\n    callBack(word);\r\n  });\r\n};\r\n\r\nexport const receiveSayWordSucceed = (callBack) => {\r\n  client.off(\"say word succeed\");\r\n  client.on(\"say word succeed\", (data) => {\r\n    console.log(\"[log] say word succeed: \", data);\r\n    callBack(data);\r\n  });\r\n};\r\n\r\n// ====== 타이머 ======\r\nexport const onTimer = (callBack) => {\r\n  client.off(\"timer\");\r\n  client.on(\"timer\", (data) => {\r\n    console.log(\"[log] timer: \", data);\r\n    callBack(data);\r\n  });\r\n};\r\n\r\n// ====== 턴 종료 ======\r\nexport const onTurnEnd = (callBack) => {\r\n  client.on(\"turn end\", () => {\r\n    console.log(\"[log] turn end... \");\r\n    callBack();\r\n  });\r\n};\r\n\r\n// ====== 라운드 종료 ======\r\nexport const onRoundEnd = (callBack) => {\r\n  client.off(\"round end\");\r\n  client.on(\"round end\", (roundResult) => {\r\n    console.log(\"[log] round end... roundResult: \", roundResult);\r\n    callBack(roundResult);\r\n  });\r\n};\r\n\r\n// ====== 게임 종료 ======\r\nexport const onGameEnd = (callBack) => {\r\n  client.on(\"game end\", (ranking) => {\r\n    console.log(`[log] game end...: ${JSON.stringify(ranking)}`);\r\n    callBack(ranking);\r\n  });\r\n};\r\n\r\n// ====== 소켓 연결 종료 ======\r\nexport const disconnectSocket = () => {\r\n  debugger;\r\n  if (client.connected) {\r\n    client.disconnect(\"[log] Disconnected from the Server...\");\r\n    // 재연결 시도\r\n    // setTimeout(initSocket, 1000);\r\n  }\r\n};\r\n\r\nexport const onBanned = (callBack) => {\r\n  client.on(\"banned\", (bannedData) => {\r\n    console.log(\"[log] bannedData: \", bannedData);\r\n    callBack(bannedData);\r\n  });\r\n};\r\n\r\nexport const onError = (callBack) => {\r\n  client.on(\"error\", (error) => {\r\n    console.trace(`[Error]: ${error}`);\r\n    if (callBack) callBack(error);\r\n  });\r\n};\r\n","import axios from \"axios\";\r\nimport { Cookies } from \"react-cookie\";\r\nimport { BASE_URL } from \"./const\";\r\n\r\nconst cookies = new Cookies();\r\n\r\nexport const getCurrentUserInfo = async () => {\r\n  const userInfoRes = await axios.get(`${BASE_URL}/user/me`, {\r\n    headers: { sessionId: cookies.get(\"sessionId\") }\r\n  });\r\n\r\n  if (userInfoRes.statusText === \"OK\") {\r\n    return userInfoRes.data.result;\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nexport const updateCurrentUserAvatar = async (accIdx, nickname = \"테스트\") => {\r\n  const res = await axios.put(\r\n    `${BASE_URL}/user`,\r\n    { avatarAccessoryIndex: accIdx, nickname: nickname },\r\n    { headers: { sessionId: cookies.get(\"sessionId\") } }\r\n  );\r\n\r\n  if (res.statusText === \"OK\") {\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n};\r\n\r\nexport const getPlayerInfoByUserId = async (userId) => {\r\n  const res = await axios.get(`${BASE_URL}/user/${userId}`, {\r\n    headers: { sessionId: cookies.get(\"sessionId\") }\r\n  });\r\n\r\n  if (res.statusText === \"OK\") {\r\n    return res.data.result;\r\n  }\r\n\r\n  return null;\r\n};\r\n"],"names":["getAccessoryImg","item","accEmo1","accEmo2","accEye1","accEye2","accEye3","accHead1","accHead2","accFx1","accFx2","AvatarCanvas","avatar","setAvatarImage","width","canvasRef","useRef","useEffect","canvas","current","ctx","getContext","avatarImg","Image","accessoryImg","onload","height","drawImage","position","getPosition","top","left","toDataURL","src","_jsx","ref","style","propTypes","PropTypes","VolumeControl","label","currVolume","setCurrVolume","VolumeSliderWrapper","dir","children","_jsxs","VolumeLabel","VolumeSliderRail","VolumeSliderFillTrack","VolumeSlider","min","max","step","defaultValue","onChange","e","parseFloat","target","value","styled","FlexBox","attrs","as","div","props","input","type","GameModal","setType","isOpen","setIsOpen","setIsPlaying","userId","roomId","setIsDataFetched","roomInfoList","setRoomInfoList","useRecoilState","roomInfoListState","roomInfo","setRoomInfo","roomInfoState","setRoomId","useSetRecoilState","roomIdState","setWaitingPlayerList","waitingPlayerListState","setRemoteApiConfig","remoteApiConfigState","roomNumber","setRoomNumber","useState","bgCurrVolume","setBgCurrVolume","bgVolumeState","fxCurrVolume","setFxCurrVolume","fxVolumeState","user","setUser","userInfoState","isTitleEmpty","setIsTitleEmpty","password","setPassword","isCorrectPassword","setIsCorrectPassword","avatarImage","currAvatar","setCurrAvatar","isProfileEditMode","setIsProfileEditMode","modalMessage","setModalMessage","cookies","setCookie","useCookies","apiConfig","setApiConfig","response","loading","error","fetchData","useAxios","titleText","title","maxUserCount","maxRound","roundTimeLimit","id","some","room","prev","map","navigate","currentUserCount","state","onConfirmAvatarUrl","async","nickname","avatarUrl","NICKNAME_REGEX","test","updateCurrentUserAvatar","method","url","headers","sessionId","useNavigate","onValidateChange","t","v","parseInt","isNaN","SPECIAL_CHARACTERS_REGEX","name","_Fragment","GameModalBackground","GameModalContent","col","GameModalHeader","row","includes","ExitMiniCircle","onClick","GameModalBody","marginTop","ButtonWrapper","margin","GameModalMessage","fontSize","ArrowIconImage","leftArrow","onAvatarLeftClick","rightArrow","onAvatarRightClick","GameModalButton","GameModalInputWrapper","paddingTop","paddingBottom","GameModalInput","marginBottom","maxLength","ValidationMessage","message","onCheckSamePassword","authorization","joinRoom","loadRoom","userList","length","path","console","log","onSubmit","preventDefault","changeRoomConfig","createRoom","roomOwnerUserId","Table","Tbody","Tr","TdLabel","TdContent","placeholder","GameModalSelect","onSaveVolume","localStorage","setItem","toString","padding","Profile","isEditMode","data","isOffensive","checked","isPoorManner","isCheating","note","reporteeId","onReportSubmit","color","Label","htmlFor","Textarea","GameModalLongMessage","fontWeight","onExitRoom","leaveRoom","score","idx","bgColor","textAlign","flexBasis","flexGrow","isRequired","borderRadius","p","theme","xxxs","paddingRight","textarea","readonly","button","select","img","colors","table","tbody","td","Player","level","PlayerWrapper","AvatarImage","PlayerInfoWrapper","LevelBadge","NicknameText","size","gray600","span","init","winRate","exp","isBanned","bannedReson","accessories","profileInfos","profile","setProfile","isPlaying","isIncludingKey","setIsIncludingKey","isWrongNickname","setIsWrongNickname","modalType","setModalType","isModalOpen","setIsModalOpen","remoteApiConfig","useRecoilValue","result","avatarAccessoryIndex","split","onNicknameChange","onNicknameBlur","onSwitchAvatarClick","index","ProfileWrapper","ProfileUpperWrapper","ProfileInfoWrapper","marginLeft","Object","entries","key","ProfileInfoField","ProfileInfoKey","ProfileInfo","filter","replace","onBlur","TitleBar","ExpWrapper","ExpBar","ProgressToNextLevel","ExpText","info","showWaitingRoom","setShowWaitingRoom","showOpenRoom","setShowOpenRoom","StyledTitleBar","TitleIcon","icon","faListUl","faTrophy","faUserLarge","TitleRightSideWrapper","FontAwesomeIcon","ValidationMessageWrapper","ValidationMessageP","Lobby","lazy","GameRoom","GameRoute","setAudioPlay","audioPlayState","setError","initSocket","onBanned","bannedData","disconnectSocket","Routes","Modal","Route","element","setFlexDirection","setJustifyContent","setAlignItems","bottom","right","flex","shadow","border","borderTop","borderRight","borderBottom","borderLeft","zIndex","clicky","instance","axios","create","baseURL","BASE_URL","config","executeOnMount","arguments","undefined","isDataFetched","setResponse","setLoading","useCallback","res","request","_error$response","isAnswerCompletedState","atom","default","itemIdState","selectedBoardItemIdState","isActiveAccountState","selector","get","_ref","playingPlayerListState","isReady","isHost","playingPlayerState","myTurn","syncPlayingPlayerToListState","_ref2","playerList","currPlayer","player","set","_ref3","newValue","POST_TITLE_REGEX","POST_SEARCH_WORD_REGEX","Cookies","client","io","SOCKET_URL","reconnection","extraHeaders","callBack","errorCallBack","on","concat","loadRoomList","emit","off","roomList","onLoadNewRoom","newRoom","onDestroyRoom","onUpdateCurrentPlayerCount","onUpdateRoomConfig","roomData","onChangeRoomConfig","onUserJoinRoom","onLoadRoom","onUserLeaveRoom","roomStatus","onChangeRoomOwner","newOwnerIdx","switchReadyState","newState","onSwitchReadyState","gameStart","onGameStart","roundStart","onRoundStart","gameStatus","turnStart","onTurnStart","sendMessage","connected","receiveMessage","receiveSayWordFail","word","receiveSayWordSucceed","onTimer","onTurnEnd","onRoundEnd","roundResult","onGameEnd","ranking","JSON","stringify","disconnect","onError","trace","getCurrentUserInfo","userInfoRes","statusText","accIdx","put","getPlayerInfoByUserId"],"sourceRoot":""}