{"version":3,"file":"static/js/763.9f44da25.chunk.js","mappings":"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","sources":["components/Web/Admin/InquiryManagementList.jsx","components/Web/Shared/Board/Filter.jsx","components/Web/Shared/Board/ImageFileUpload.jsx","components/Web/Shared/Buttons/ButtonStyle.jsx","components/Web/Admin/InquiryManagementThread.jsx","pages/Web/Admin/InquiryManagement.jsx","recoil/displayState.js","services/date.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { useRecoilState, useRecoilValue } from \"recoil\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { isAnswerCompletedState, remoteApiConfigState } from \"@/recoil/boardState\";\r\nimport ManagementTitle from \"./ManagementTitle\";\r\nimport ManagementList from \"./ManagementList\";\r\nimport Filter from \"../Shared/Board/Filter\";\r\nimport Pagination from \"../Shared/Board/Pagination\";\r\nimport { FlexBox } from \"@/styles/FlexStyle\";\r\nimport { Box } from \"../../Game/Shared/Layout\";\r\nimport useAxios from \"@/hooks/useAxios\";\r\n\r\nconst InquiryManagementList = ({ type, onThreadOpen }) => {\r\n  const remoteApiConfig = useRecoilValue(remoteApiConfigState);\r\n  const [cookies] = useCookies([\"sessionId\"]);\r\n  const [listData, setListData] = useState([]);\r\n  const [selectedFilterOptions, setSelectedFilterOptions] = useState(null);\r\n  const [currPage, setCurrPage] = useState(1);\r\n  const [lastPageIdx, setLastPageIdx] = useState(30);\r\n  const [isAnswerCompleted, setIsAnswerCompleted] =\r\n    useRecoilState(isAnswerCompletedState);\r\n  const [apiConfig, setApiConfig] = useState({\r\n    method: \"get\",\r\n    url: `/inquiry/search?page=${currPage}`,\r\n    headers: {\r\n      sessionId: cookies.sessionId\r\n    }\r\n  });\r\n  const { response, loading, error, fetchData } = useAxios(apiConfig, false);\r\n\r\n  // 필터 key 데이터 추출\r\n  const filterKeys = [\"type\", \"needAnswer\"];\r\n\r\n  // 서버에서 받아온 데이터를 filterKeys의 값에 해당하는 것으로만 추출\r\n  const filterOptions = filterKeys?.map((key) => {\r\n    let uniqueValues;\r\n    if (key === \"type\") {\r\n      uniqueValues = [0, 1, 2, 5, 99];\r\n    } else if (key === \"needAnswer\") {\r\n      uniqueValues = [true, false];\r\n    }\r\n    return { key, values: uniqueValues };\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (apiConfig !== null) {\r\n      fetchData();\r\n    }\r\n  }, [apiConfig]);\r\n\r\n  useEffect(() => {\r\n    if (remoteApiConfig !== null) {\r\n      setApiConfig({\r\n        ...remoteApiConfig,\r\n        url: `/inquiry/search?page=${currPage}`\r\n      });\r\n    }\r\n  }, [remoteApiConfig]);\r\n\r\n  useEffect(() => {\r\n    if (response !== null) {\r\n      setLastPageIdx(response.result.lastPage === 0 ? 1 : response.result.lastPage);\r\n      setListData(\r\n        response.result.list?.map(\r\n          ({ updatedAt, createdAt, id, type, title, needAnswer }) => ({\r\n            id,\r\n            type,\r\n            title,\r\n            needAnswer\r\n          })\r\n        )\r\n      );\r\n    } else {\r\n      setLastPageIdx(1);\r\n      setListData([]);\r\n    }\r\n  }, [response]);\r\n\r\n  // 페이지, 필터 변경 시 호출\r\n  useEffect(() => {\r\n    if (selectedFilterOptions !== null) {\r\n      const queryString = Object.entries(selectedFilterOptions)\r\n        .map(([key, value]) => `${key}=${value}`)\r\n        .join(\"&\");\r\n\r\n      setApiConfig({\r\n        ...apiConfig,\r\n        url: `/inquiry/search?page=${currPage}&${queryString}`\r\n      });\r\n    } else {\r\n      setApiConfig({\r\n        ...apiConfig,\r\n        url: `/inquiry/search?page=${currPage}`\r\n      });\r\n    }\r\n  }, [currPage, selectedFilterOptions]);\r\n\r\n  return (\r\n    <>\r\n      {type !== \"home\" ? (\r\n        <Box>\r\n          <HeaderWrapper row=\"between\" col=\"center\">\r\n            <ManagementTitle title=\"inquiry\" />\r\n            <FilterWrapper marginTop=\"1.313rem\" marginRight=\"0.75rem\">\r\n              <Filter\r\n                filterOptions={filterOptions}\r\n                selectedFilterOptions={selectedFilterOptions}\r\n                setSelectedFilterOptions={setSelectedFilterOptions}\r\n              />\r\n            </FilterWrapper>\r\n          </HeaderWrapper>\r\n          <ManagementList\r\n            isHome={false}\r\n            title=\"inquiry\"\r\n            data={listData}\r\n            onSideOpen={onThreadOpen}\r\n            isAnswerCompleted={isAnswerCompleted}\r\n          />\r\n          <Pagination\r\n            currPage={currPage}\r\n            setCurrPage={setCurrPage}\r\n            lastPageIdx={lastPageIdx}\r\n          />\r\n        </Box>\r\n      ) : (\r\n        <Box type={type}>\r\n          <ManagementTitle type={type} title=\"inquiry\" />\r\n          <ManagementList\r\n            isHome={true}\r\n            title=\"inquiry\"\r\n            data={listData}\r\n            isAnswerCompleted={isAnswerCompleted}\r\n            onSideOpen={onThreadOpen}\r\n          />\r\n        </Box>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nInquiryManagementList.propTypes = {\r\n  type: PropTypes.string,\r\n  onThreadOpen: PropTypes.func,\r\n  isAnswerCompleted: PropTypes.object,\r\n  setIsAnswerCompleted: PropTypes.func\r\n};\r\n\r\nconst HeaderWrapper = styled(FlexBox)`\r\n  padding-bottom: 14px;\r\n`;\r\n\r\nconst FilterWrapper = styled.div`\r\n  margin-top: ${({ marginTop }) => marginTop};\r\n  margin-right: ${({ marginRight }) => marginRight};\r\n`;\r\n\r\nexport default InquiryManagementList;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { FlexBox } from \"@/styles/FlexStyle\";\r\nimport hoveredFilter from \"@/assets/images/icon-filter-gr.png\";\r\nimport defaultFilter from \"@/assets/images/icon-filter.png\";\r\n\r\nconst filterLabels = {\r\n  type: \"문의 유형\",\r\n  types: \"신고 유형\",\r\n  needAnswer: \"답변 여부\",\r\n  createdAt: \"정렬\"\r\n};\r\n\r\nconst Filter = ({ filterOptions, selectedFilterOptions, setSelectedFilterOptions }) => {\r\n  const [isClicked, setIsClicked] = useState(\r\n    filterOptions?.reduce((acc, key) => ({ ...acc, [key]: false }), {})\r\n  );\r\n  const [isChecked, setIsChecked] = useState(\r\n    filterOptions\r\n      ?.filter(({ key }) => key === \"types\")\r\n      ?.reduce(\r\n        (acc, option) => ({\r\n          ...acc,\r\n          [option.key]: option.values.reduce(\r\n            (obj, value) => ({ ...obj, [value]: false }),\r\n            {}\r\n          )\r\n        }),\r\n        {}\r\n      )\r\n  );\r\n\r\n  const onApplyFilter = (key, item) => {\r\n    if (key !== \"types\") {\r\n      const newFilterOptions = { ...selectedFilterOptions, [key]: item };\r\n      setSelectedFilterOptions(newFilterOptions);\r\n      setIsClicked((prev) => ({ ...prev, [key]: !prev[key] }));\r\n    }\r\n  };\r\n\r\n  const onCheckboxChange = (key, item) => {\r\n    setIsChecked((prev) => {\r\n      const updated = { ...prev, [key]: { ...prev[key], [item]: !prev[key][item] } };\r\n      setSelectedFilterOptions((prevOptions) => ({\r\n        ...prevOptions,\r\n        [key]: updated[key]\r\n      }));\r\n      return updated;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <FilterListWrapper>\r\n      {filterOptions?.map(({ key, values }, idx) => (\r\n        <FilterItemWrapper col=\"center\" key={key}>\r\n          <span>{getFilterLabel(key)}</span>\r\n          <FilterImage\r\n            src={defaultFilter}\r\n            onClick={() => setIsClicked((prev) => ({ ...prev, [key]: !prev[key] }))}\r\n            onMouseOver={(e) => e.target.setAttribute(\"src\", hoveredFilter)}\r\n            onMouseOut={(e) => e.target.setAttribute(\"src\", defaultFilter)}\r\n          />\r\n          {isClicked[key] && (\r\n            <FilterList marginLeft={idx === 1 ? \"30px\" : \"\"} dir=\"col\" col=\"center\">\r\n              {values?.map((item, idx) => (\r\n                <FilterListItem\r\n                  key={idx}\r\n                  value={item}\r\n                  onClick={() => onApplyFilter(key, item)}\r\n                >\r\n                  {key === \"types\" ? (\r\n                    <>\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={isChecked[key][item]}\r\n                        onChange={() => onCheckboxChange(key, item)}\r\n                      />\r\n                      {getFilterItemText(key, item)}\r\n                    </>\r\n                  ) : (\r\n                    getFilterItemText(key, item)\r\n                  )}\r\n                </FilterListItem>\r\n              ))}\r\n            </FilterList>\r\n          )}\r\n        </FilterItemWrapper>\r\n      ))}\r\n    </FilterListWrapper>\r\n  );\r\n};\r\n\r\nconst getFilterLabel = (key) => {\r\n  return filterLabels[key] || \"\";\r\n};\r\n\r\nconst getFilterItemText = (key, item) => {\r\n  switch (key) {\r\n    case \"type\":\r\n      switch (item) {\r\n        case 0:\r\n          return <span>{\"버그문의\"}</span>;\r\n        case 1:\r\n          return <span>{\"계정문의\"}</span>;\r\n        case 2:\r\n          return <span>{\"서비스문의\"}</span>;\r\n        case 5:\r\n          return <span>{\"단어추가문의\"}</span>;\r\n        case 99:\r\n          return <span>{\"기타문의\"}</span>;\r\n      }\r\n    case \"needAnswer\":\r\n      switch (item) {\r\n        case true:\r\n          return <span>{\"NO\"}</span>;\r\n        case false:\r\n          return <span>{\"YES\"}</span>;\r\n        default:\r\n          return \"\";\r\n      }\r\n    case \"types\":\r\n      switch (item) {\r\n        case \"isOffensive\":\r\n          return <span>{\"공격적인 언어 사용\"}</span>;\r\n        case \"isPoorManner\":\r\n          return <span>{\"비매너 행위\"}</span>;\r\n        case \"isCheating\":\r\n          return <span>{\"사기 행위\"}</span>;\r\n        default:\r\n          return \"\";\r\n      }\r\n    case \"createdAt\":\r\n      switch (item) {\r\n        case \"oldest\":\r\n          return <span>{\"과거순\"}</span>;\r\n        case \"latest\":\r\n          return <span>{\"최신순\"}</span>;\r\n      }\r\n  }\r\n};\r\n\r\nFilter.propTypes = {\r\n  filterOptions: PropTypes.array,\r\n  selectedFilterOptions: PropTypes.object,\r\n  setSelectedFilterOptions: PropTypes.func\r\n};\r\n\r\nconst FilterListWrapper = styled(FlexBox)`\r\n  & > * + * {\r\n    margin-left: 1.75rem;\r\n  }\r\n`;\r\n\r\nconst FilterItemWrapper = styled(FlexBox)``;\r\n\r\nconst FilterImage = styled.img`\r\n  width: 19px;\r\n  margin-left: 6px;\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst FilterList = styled(FlexBox).attrs({ as: \"ul\" })`\r\n  position: absolute;\r\n  top: 165px;\r\n  width: max-content;\r\n  align-self: baseline;\r\n  margin-top: 10px;\r\n  margin-left: ${(props) => props.marginLeft || \"\"};\r\n  background-color: ${({ theme }) => theme.colors.content};\r\n  border: 2px solid #a2a2a2;\r\n  border-radius: 1px;\r\n  box-shadow: 0 1px 4px #00000019;\r\n  text-align: center;\r\n`;\r\n\r\nconst FilterListItem = styled.li`\r\n  width: 100%;\r\n  min-width: 60px;\r\n  padding: 3px 10px;\r\n\r\n  &:hover {\r\n    background-color: #ebeae6;\r\n    font-weight: 700;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport default Filter;\r\n","import { useState, useRef, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faX } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FlexBox } from \"@/styles/FlexStyle\";\r\n\r\n// mode 0: default(with plus icon), mode 1: secondary(with text)\r\nconst ImageFileUpload = ({ appendFilesToFormData, width, height, mode = 0 }) => {\r\n  // 화면에 출력되는 이미지 썸네일\r\n  const [previewImgs, setPreviewImgs] = useState([]);\r\n  // 서버 전달용 파일 리스트\r\n  const [selectedFiles, setSelectedFiles] = useState([]);\r\n  const inputRef = useRef(null);\r\n\r\n  const onSelectFile = (e) => {\r\n    e.preventDefault();\r\n    e.persist();\r\n\r\n    // 유사 배열 객체인 File을 배열로 변환\r\n    const newSelectedFiles = Array.from(e.target.files);\r\n    const fileUrlList = [];\r\n\r\n    for (let i = 0; i < newSelectedFiles.length; i++) {\r\n      // 파일 크기 제한\r\n      if (newSelectedFiles[i].size > 1024 * 1024 * 5) {\r\n        alert(\"파일당 5MB를 초과할 수 없습니다.\");\r\n        return;\r\n      }\r\n\r\n      // 파일명 중복 체크\r\n      if (selectedFiles.some((file) => file.name === newSelectedFiles[i].name)) {\r\n        alert(\"같은 이름의 파일이 존재합니다.\");\r\n        return;\r\n      }\r\n\r\n      const currUrl = URL.createObjectURL(newSelectedFiles[i]);\r\n      fileUrlList.push(currUrl);\r\n    }\r\n\r\n    // 기존 파일 리스트에 새로운 파일 추가\r\n    setSelectedFiles((prevFiles) => {\r\n      appendFilesToFormData([...prevFiles, ...newSelectedFiles]);\r\n      return [...prevFiles, ...newSelectedFiles];\r\n    });\r\n\r\n    // 브라우저 상에 보여질 썸네일 이미지\r\n    const thumbnailImageArray = fileUrlList?.map((url, i) => {\r\n      return { name: newSelectedFiles[i].name, url: url };\r\n    });\r\n\r\n    // 첨부 파일 삭제 시\r\n    setPreviewImgs((prev) => prev.concat(thumbnailImageArray));\r\n    e.target.value = \"\";\r\n  };\r\n\r\n  const onDeleteFile = (fileName) => {\r\n    setSelectedFiles((prevFiles) => prevFiles?.filter((file) => file.name !== fileName));\r\n    setPreviewImgs((prevImage) => prevImage?.filter((image) => image.name !== fileName));\r\n  };\r\n\r\n  // 미리보기 이미지\r\n  const previewImg = previewImgs?.map((image, idx) => (\r\n    <div key={idx}>\r\n      <ThumbnailImage src={image.url} alt={image.name} />\r\n      <DeleteButton mode={mode} onClick={() => onDeleteFile(image.name)}>\r\n        <DeleteIcon icon={faX} />\r\n      </DeleteButton>\r\n    </div>\r\n  ));\r\n\r\n  // 미리보기 파일명\r\n  const previewName = selectedFiles?.map((file, idx) => (\r\n    <PreviewNameBox key={idx} col=\"center\">\r\n      <PreviewNameSpan>{file.name}</PreviewNameSpan>\r\n      <DeleteButton onClick={() => onDeleteFile(file.name)}>\r\n        <DeleteIcon icon={faX} />\r\n      </DeleteButton>\r\n    </PreviewNameBox>\r\n  ));\r\n\r\n  return (\r\n    <ImageFileUploadWrapper mode={mode} col={mode !== 0 && \"center\"}>\r\n      {mode === 0 && previewImgs.length !== 0 && (\r\n        <PreviewImgWrapper>{previewImg}</PreviewImgWrapper>\r\n      )}\r\n      {mode !== 0 && previewImgs.length !== 0 && (\r\n        <PreviewImgWrapper>{previewName}</PreviewImgWrapper>\r\n      )}\r\n      {previewImgs.length < 3 && (\r\n        <FileUploadButton\r\n          width={width}\r\n          height={height}\r\n          mode={mode}\r\n          onClick={() => inputRef.current && inputRef.current.click()}\r\n        >\r\n          {mode === 0 ? (\r\n            <PlusIcon icon={faPlus} />\r\n          ) : (\r\n            <AttachmentText>첨부파일</AttachmentText>\r\n          )}\r\n        </FileUploadButton>\r\n      )}\r\n      <UnvisibleInput\r\n        ref={inputRef}\r\n        name=\"images\"\r\n        onChange={onSelectFile}\r\n        accept=\"image/jpg, image/jpeg, image/png, image/bmp, image/webp\"\r\n      />\r\n    </ImageFileUploadWrapper>\r\n  );\r\n};\r\n\r\nImageFileUpload.propTypes = {\r\n  appendFilesToFormData: PropTypes.func,\r\n  width: PropTypes.string,\r\n  height: PropTypes.string,\r\n  mode: PropTypes.number\r\n};\r\n\r\nconst CommonWrapper = styled(FlexBox)`\r\n  & > * + * {\r\n    margin-left: 5px;\r\n  }\r\n`;\r\n\r\nconst ImageFileUploadWrapper = styled(CommonWrapper)`\r\n  width: ${({ mode }) => mode !== 0 && \"100%\"};\r\n  margin-left: ${({ mode }) => mode !== 0 && \"5px\"};\r\n  overflow-x: ${({ mode }) => mode !== 0 && \"auto\"};\r\n`;\r\n\r\nconst PreviewImgWrapper = styled(CommonWrapper)``;\r\n\r\n// ========= 파일명 미리보기 =========\r\nconst PreviewNameBox = styled(FlexBox)`\r\n  width: fit-content;\r\n  height: 2.25rem;\r\n  padding: 0 1.5rem 0 1rem;\r\n  background-color: #eee;\r\n  border-radius: 30px;\r\n`;\r\n\r\nconst PreviewNameSpan = styled.span`\r\n  width: 100%;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n`;\r\n\r\nconst AttachmentText = styled.span`\r\n  font-size: ${({ theme }) => theme.fontSize.xxxs};\r\n`;\r\n\r\n// ========= 이미지 미리보기 =========\r\nconst ThumbnailImage = styled.img`\r\n  width: 6.25rem;\r\n  height: 5.625rem;\r\n  object-fit: cover;\r\n`;\r\n\r\nconst DeleteButton = styled.button`\r\n  position: relative;\r\n  top: ${({ mode }) => (mode !== 0 ? \"0\" : \"-96px\")};\r\n  right: ${({ mode }) => (mode === 0 ? \"-73%\" : \"-12px\")};\r\n  background-color: #000;\r\n  opacity: 0.7;\r\n  border-radius: ${({ mode }) => mode !== 0 && \"50%\"};\r\n`;\r\n\r\nconst DeleteIcon = styled(FontAwesomeIcon)`\r\n  color: #fff;\r\n`;\r\n\r\n// ========= 파일 업로드 =========\r\nconst FileUploadButton = styled.button`\r\n  width: ${({ width }) => width || \"6.25rem\"};\r\n  height: ${({ height }) => height || \"5.625rem\"};\r\n  background-color: ${({ mode }) => (mode === 0 ? \"#585858\" : \"#EBE8E1\")};\r\n  color: ${({ mode }) => mode !== 0 && \"#3F3F3F\"};\r\n  font-size: ${({ mode, theme }) => mode !== 0 && theme.fontSize.xxxs};\r\n\r\n  min-width: ${({ mode }) => mode !== 0 && \"5.5rem\"};\r\n  margin-left: ${({ mode }) => mode !== 0 && \"auto\"};\r\n`;\r\n\r\nconst PlusIcon = styled(FontAwesomeIcon)`\r\n  font-size: ${({ theme }) => theme.fontSize.xxl};\r\n  color: #fff;\r\n`;\r\n\r\nconst UnvisibleInput = styled.input.attrs(() => ({ type: \"file\" }))`\r\n  display: none;\r\n  -webkit-appearance: none;\r\n  appearance: none;\r\n`;\r\n\r\nexport default ImageFileUpload;\r\n","import styled from \"styled-components\";\r\n\r\n// Web에서 주로 사용하는 갈색 Big Submit 버튼 (회원가입, 로그인, 탈퇴하기, 비밀번호 변경하기)\r\nexport const BigSubmitBrownButton = styled.button`\r\n  width: 100%;\r\n  height: 4.3rem;\r\n  background-color: ${({ theme }) => theme.colors.button.main.background};\r\n  color: ${({ theme }) => theme.colors.button.main.text};\r\n  font-size: 26px;\r\n  font-weight: 700;\r\n\r\n  &:hover {\r\n    background-color: ${({ theme }) => theme.colors.button.main.hover};\r\n  }\r\n`;\r\n\r\n// Web에서 사용하는 갈색 Small Submit 버튼\r\nexport const SmallSubmitBrownButton = styled.button`\r\n  width: 15rem;\r\n  height: 4.688rem;\r\n  background-color: ${({ theme }) => theme.colors.button.main.background};\r\n  color: ${({ theme }) => theme.colors.button.main.text};\r\n  font-size: ${({ theme }) => theme.fontSize.l};\r\n  font-weight: 700;\r\n\r\n  &:hover {\r\n    background-color: ${({ theme }) => theme.colors.button.main.hover};\r\n  }\r\n`;\r\n\r\n// Modal에서 주로 사용하는 회색 Submit 버튼\r\nexport const ModalGrayButton = styled.button`\r\n  width: 11rem;\r\n  height: ${(props) => props.width || \"3.625rem\"};\r\n  background-color: ${({ theme }) => theme.colors.gray100};\r\n  border: 1px solid ${({ theme }) => theme.colors.gray500};\r\n  color: ${({ theme }) => theme.colors.gray600};\r\n  font-size: ${({ theme }) => theme.fontSize.s};\r\n  font-weight: 500;\r\n\r\n  &:hover {\r\n    background-color: ${({ theme }) => theme.colors.gray400};\r\n  }\r\n`;\r\n\r\n// 큰 투명 버튼\r\nexport const BigTransparentButton = styled.button`\r\n  width: ${(props) => props.width || \"9rem\"};\r\n  height: ${(props) => props.height || \"4.3rem\"};\r\n  background-color: transparent;\r\n  border: 2px solid ${({ theme }) => theme.colors.gray600};\r\n  color: ${({ theme }) => theme.colors.text.sub};\r\n  font-size: ${({ theme }) => theme.fontSize.s};\r\n  font-weight: 700;\r\n\r\n  &:hover {\r\n    background-color: #ffffff32;\r\n  }\r\n`;\r\n\r\n// 작은 버튼\r\nexport const SmallButton = styled.button`\r\n  width: ${(props) => props.width || \"6rem\"};\r\n  height: ${(props) => props.height || \"3rem\"};\r\n  font-size: ${({ theme }) => theme.fontSize.xxxs};\r\n  font-weight: 700;\r\n`;\r\n\r\n// 작은 투명 버튼\r\nexport const SmallTransparentButton = styled(SmallButton)`\r\n  background-color: transparent;\r\n  color: #000;\r\n  border: 1px solid #000;\r\n\r\n  &:hover {\r\n    background-color: #ffffff32;\r\n  }\r\n`;\r\n\r\n// 짙은 회색 작은 버튼\r\nexport const SmallDarkButton = styled(SmallButton)`\r\n  background-color: #585858;\r\n  color: #fff;\r\n\r\n  &:hover {\r\n    background-color: ${({ theme }) => theme.colors.gray600};\r\n  }\r\n`;\r\n\r\n// 작은 옅은 회색 버튼\r\nexport const SmallGrayButton = styled(SmallButton)`\r\n  background-color: #aaa;\r\n  color: #000;\r\n\r\n  &:hover {\r\n    background-color: ${({ theme }) => theme.colors.gray400};\r\n  }\r\n`;\r\n\r\n// Admin에서 주로 사용하는 미니 버튼\r\nexport const MiniButton = styled.button`\r\n  width: ${(props) => props.width || \"2.875rem\"};\r\n  height: ${(props) => props.height || \"1.688rem\"};\r\n  background-color: transparent;\r\n  font-size: ${({ theme }) => theme.fontSize.xxxxs};\r\n  font-weight: 700;\r\n`;\r\n\r\n// 파랑 미니 버튼 (관리자 - 공지)\r\nexport const MiniBlueButton = styled(MiniButton)`\r\n  border: 1px solid ${({ theme }) => theme.colors.success};\r\n  color: ${({ theme }) => theme.colors.success};\r\n`;\r\n\r\n// 빨강 미니 버튼 (관리자 - 공지)\r\nexport const MiniRedButton = styled(MiniButton)`\r\n  border: 1px solid ${({ theme }) => theme.colors.error};\r\n  color: ${({ theme }) => theme.colors.error};\r\n`;\r\n","import { useState, useRef, useEffect, useCallback } from \"react\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { useRecoilState, useSetRecoilState } from \"recoil\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport { isAnswerCompletedState, remoteApiConfigState } from \"@/recoil/boardState\";\r\nimport { FlexBox } from \"@/styles/FlexStyle\";\r\nimport {\r\n  faUser,\r\n  faClock,\r\n  faHandHoldingHeart,\r\n  faBug,\r\n  faFileCirclePlus,\r\n  faGuitar\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { SmallDarkButton } from \"../Shared/Buttons/ButtonStyle\";\r\nimport ImageFileUpload from \"../Shared/Board/ImageFileUpload\";\r\nimport Modal from \"../Shared/Modal/WebModal\";\r\nimport useAxios from \"@/hooks/useAxios\";\r\nimport { formatDateToTimestamp } from \"@/services/date\";\r\n\r\nconst InquiryManagementThread = ({ data, fetchAnswer }) => {\r\n  const { threadId, type, threadTitle, nickname, updatedAt, list } = data;\r\n  const [cookies] = useCookies([\"sessionId\"]);\r\n  const setRemoteApiConfig = useSetRecoilState(remoteApiConfigState);\r\n  const [isAnswerCompleted, setIsAnswerCompleted] =\r\n    useRecoilState(isAnswerCompletedState);\r\n  const [isFirstAnswer, setIsFirstAnswer] = useState(\r\n    list?.some((item) => item.isAnswer === true)\r\n  );\r\n  const [answer, setAnswer] = useState(\"\");\r\n  const [answerFiles, setAnswerFiles] = useState([]);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [apiConfig, setApiConfig] = useState(null);\r\n  const [key, setKey] = useState(null);\r\n  const { response, error, loading, fetchData } = useAxios(apiConfig, false);\r\n\r\n  const answerRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (apiConfig !== null) {\r\n      fetchData();\r\n    }\r\n  }, [apiConfig]);\r\n\r\n  useEffect(() => {\r\n    if (response !== null) {\r\n      setIsFirstAnswer(false);\r\n      fetchAnswer(); // 등록 성공 시 조회 API 호출\r\n      setRemoteApiConfig({\r\n        method: \"get\",\r\n        url: `/inquiry/search?page=1`,\r\n        headers: {\r\n          sessionId: cookies.sessionId\r\n        }\r\n      });\r\n    }\r\n  }, [response]);\r\n\r\n  const getTypeIcon = (type) => {\r\n    switch (type) {\r\n      case 0:\r\n        return faBug;\r\n      case 1:\r\n        return faUser;\r\n      case 2:\r\n        return faHandHoldingHeart;\r\n      case 5:\r\n        return faFileCirclePlus;\r\n      case 99:\r\n        return faGuitar;\r\n      default:\r\n        return faGuitar;\r\n    }\r\n  };\r\n\r\n  const getTypeName = (type) => {\r\n    switch (type) {\r\n      case 0:\r\n        return \"버그문의\";\r\n      case 1:\r\n        return \"계정문의\";\r\n      case 2:\r\n        return \"서비스문의\";\r\n      case 5:\r\n        return \"단어추가문의\";\r\n      case 99:\r\n        return \"기타문의\";\r\n      default:\r\n        return \"기타\";\r\n    }\r\n  };\r\n\r\n  const appendFilesToFormData = useCallback(\r\n    (_files) => {\r\n      setAnswerFiles(_files);\r\n    },\r\n    [isAnswerCompleted, threadId]\r\n  );\r\n\r\n  const updateAnswerStatus = (id, status) => {\r\n    setIsAnswerCompleted((prevStatus) => ({ ...prevStatus, [id]: status }));\r\n  };\r\n\r\n  const onAnswerChange = (e) => {\r\n    setAnswer(e.target.value);\r\n  };\r\n\r\n  const onSubmitAnswer = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n\r\n      if (answer === \"\") {\r\n        setIsModalOpen(true);\r\n        return;\r\n      }\r\n\r\n      const formData = new FormData();\r\n      formData.append(\"type\", type);\r\n      formData.append(\"title\", threadTitle);\r\n      formData.append(\"content\", answer);\r\n      answerFiles?.forEach((file) => {\r\n        formData.append(\"files\", file);\r\n      });\r\n\r\n      setApiConfig({\r\n        method: \"post\",\r\n        url: `/inquiry/${threadId}?page=1`,\r\n        headers: {\r\n          sessionId: cookies.sessionId,\r\n          \"Content-Type\": \"multipart/form-data\"\r\n        },\r\n        data: formData\r\n      });\r\n\r\n      answerRef.current.value = \"\";\r\n      setKey(Date.now());\r\n    },\r\n    [threadId, updateAnswerStatus]\r\n  );\r\n\r\n  return (\r\n    <ThreadWrapper>\r\n      {isModalOpen && (\r\n        <Modal\r\n          hasButton={true}\r\n          setIsOpen={setIsModalOpen}\r\n          onClick={() => setIsModalOpen(false)}\r\n        >\r\n          답변을 입력하세요\r\n        </Modal>\r\n      )}\r\n      <TypeBar col=\"center\">\r\n        <ServiceTypeIcon icon={getTypeIcon(type)} />\r\n        <span>{getTypeName(type)}</span>\r\n      </TypeBar>\r\n\r\n      {/* 질문 */}\r\n      <QuestionWrapper>\r\n        <div>\r\n          <QnAText>Q.</QnAText>\r\n        </div>\r\n        <AnswerInputFieldWrapper>\r\n          <HeaderTextWrapper dir=\"col\">\r\n            <TitleWrapper col=\"center\">\r\n              <TitleText>{threadTitle}</TitleText>\r\n            </TitleWrapper>\r\n            <SubTextWrapper row=\"between\" col=\"center\">\r\n              <div>\r\n                <StyledIcon icon={faUser} />\r\n                <SubText>{nickname}</SubText>\r\n              </div>\r\n              <div>\r\n                <StyledIcon icon={faClock} />\r\n                <SubText>{updatedAt}</SubText>\r\n              </div>\r\n            </SubTextWrapper>\r\n          </HeaderTextWrapper>\r\n          <ContentWrapper>\r\n            <div>\r\n              <ContentText>{list?.[0].content}</ContentText>\r\n            </div>\r\n            <div>\r\n              {list?.[0].file?.length > 0 &&\r\n                list?.[0].file?.map((f, idx) => (\r\n                  <AttachedImg key={idx} src={f} width=\"fit-content\" height=\"auto\" />\r\n                ))}\r\n            </div>\r\n          </ContentWrapper>\r\n        </AnswerInputFieldWrapper>\r\n      </QuestionWrapper>\r\n\r\n      {list?.slice(1).map((item, idx) => {\r\n        if (!item.isAnswer) {\r\n          return (\r\n            <QuestionWrapper key={idx}>\r\n              <div>\r\n                <QnAText>Q.</QnAText>\r\n              </div>\r\n              <AnswerInputFieldWrapper>\r\n                <ContentWrapper>\r\n                  <div>\r\n                    <ContentText>{item?.content}</ContentText>\r\n                  </div>\r\n                  <div>\r\n                    {item?.file?.length > 0 &&\r\n                      item?.file?.map((f, idx) => (\r\n                        <AttachedImg\r\n                          key={idx}\r\n                          src={f}\r\n                          width=\"fit-content\"\r\n                          height=\"auto\"\r\n                        />\r\n                      ))}\r\n                  </div>\r\n                  <SubTextWrapper row=\"end\" col=\"center\">\r\n                    <div>\r\n                      <StyledIcon icon={faClock} />\r\n                      <SubText>{formatDateToTimestamp(item?.createdAt)}</SubText>\r\n                    </div>\r\n                  </SubTextWrapper>\r\n                </ContentWrapper>\r\n              </AnswerInputFieldWrapper>\r\n            </QuestionWrapper>\r\n          );\r\n        } else {\r\n          return (\r\n            <AnswerWrapper key={idx}>\r\n              <div>\r\n                <QnAText>A.</QnAText>\r\n              </div>\r\n              <AnswerInputFieldWrapper>\r\n                <Width100 marginTop=\"10px\">\r\n                  <AnswerText>{item?.content}</AnswerText>\r\n                </Width100>\r\n                <AttachedImgWrapper>\r\n                  {item?.file?.length > 0 &&\r\n                    item?.file?.map((file, idx) => (\r\n                      <AttachedImg key={idx} src={file} alt=\"첨부파일\" />\r\n                    ))}\r\n                </AttachedImgWrapper>\r\n                <SubTextWrapper row=\"end\" col=\"center\">\r\n                  <div>\r\n                    <StyledIcon icon={faClock} />\r\n                    <SubText>{formatDateToTimestamp(item?.createdAt)}</SubText>\r\n                  </div>\r\n                </SubTextWrapper>\r\n              </AnswerInputFieldWrapper>\r\n            </AnswerWrapper>\r\n          );\r\n        }\r\n      })}\r\n\r\n      {/* 답변 입력 */}\r\n      <AnswerWrapper>\r\n        <div>\r\n          <QnAText>A.</QnAText>\r\n        </div>\r\n        <AnswerInputFieldWrapper>\r\n          <StyledTextarea\r\n            placeholder=\"답변을 입력하세요.\"\r\n            onChange={onAnswerChange}\r\n            ref={answerRef}\r\n          />\r\n          <AttachmentWrapper row=\"between\" col=\"center\">\r\n            <Width100>\r\n              <ImageFileUpload\r\n                key={key}\r\n                width=\"7rem\"\r\n                height=\"2.9rem\"\r\n                mode={1}\r\n                appendFilesToFormData={appendFilesToFormData}\r\n              />\r\n            </Width100>\r\n          </AttachmentWrapper>\r\n          <ButtonWrapper row=\"end\">\r\n            <SaveButton width=\"7rem\" onClick={onSubmitAnswer}>\r\n              저장\r\n            </SaveButton>\r\n          </ButtonWrapper>\r\n        </AnswerInputFieldWrapper>\r\n      </AnswerWrapper>\r\n    </ThreadWrapper>\r\n  );\r\n};\r\n\r\nInquiryManagementThread.propTypes = {\r\n  data: PropTypes.object,\r\n  fetchAnswer: PropTypes.func\r\n};\r\n\r\nconst ThreadWrapper = styled.div`\r\n  margin: 0 14px;\r\n  max-width: 100%;\r\n  height: 100%;\r\n  overflow-x: hidden;\r\n  overflow-y: auto;\r\n`;\r\n\r\nconst TypeBar = styled(FlexBox)`\r\n  position: relative;\r\n  top: 30px;\r\n  width: calc(100% + 3rem);\r\n  margin-left: -1.5rem;\r\n  padding-left: 2rem;\r\n  height: 2rem;\r\n  background-color: #00000020;\r\n  font-weight: 700;\r\n\r\n  & > * + * {\r\n    margin-left: 10px;\r\n  }\r\n`;\r\n\r\n// ========== Question ==========\r\nconst QuestionWrapper = styled(FlexBox)`\r\n  width: 100%;\r\n  margin-top: 2.75rem;\r\n\r\n  & > * + * {\r\n    margin-left: 0.75rem;\r\n  }\r\n`;\r\n\r\nconst HeaderTextWrapper = styled(FlexBox)`\r\n  margin-top: 0.5rem;\r\n  margin-bottom: 1.2rem;\r\n`;\r\n\r\nconst TitleWrapper = styled(FlexBox)`\r\n  & > * + * {\r\n    margin-left: 10px;\r\n  }\r\n`;\r\n\r\nconst QnAText = styled.span`\r\n  font-family: \"Pretendard Variable\";\r\n  font-size: 53px;\r\n  font-weight: 800;\r\n`;\r\n\r\nconst TitleText = styled.span`\r\n  font-size: 1.5rem;\r\n  font-weight: 700;\r\n`;\r\n\r\nconst ContentText = styled.span`\r\n  font-size: ${({ theme }) => theme.fontSize.xxs};\r\n  font-weight: 500;\r\n`;\r\n\r\nconst SubTextWrapper = styled(FlexBox)`\r\n  margin-top: 4px;\r\n\r\n  & > * + * {\r\n    margin-left: 30px;\r\n  }\r\n`;\r\n\r\nconst SubText = styled.span`\r\n  margin-left: 9px;\r\n  font-size: 16px;\r\n  color: #a7a7a7;\r\n`;\r\n\r\nconst StyledIcon = styled(FontAwesomeIcon)`\r\n  font-size: 16px;\r\n  color: #a7a7a7;\r\n`;\r\n\r\nconst ServiceTypeIcon = styled(StyledIcon)`\r\n  color: ${({ theme }) => theme.colors.text.main};\r\n`;\r\n\r\nconst ContentWrapper = styled.div`\r\n  width: 100%;\r\n  height: fit-content;\r\n`;\r\n// ========== //Question ==========\r\n\r\n// ========== Answer ==========\r\nconst AnswerWrapper = styled(FlexBox)`\r\n  margin-top: 1rem;\r\n\r\n  & > * + * {\r\n    margin-left: 0.75rem;\r\n  }\r\n`;\r\n\r\nconst AnswerInputFieldWrapper = styled.div`\r\n  width: 100%;\r\n`;\r\n\r\nconst StyledTextarea = styled.textarea`\r\n  background-color: transparent;\r\n  border: 1px solid #ccc;\r\n  width: 100%;\r\n  height: ${({ height }) => height || \"12.5rem\"};\r\n  margin-top: 0.5rem;\r\n  padding: 10px 12px;\r\n  font-size: ${({ theme }) => theme.fontSize.xxs};\r\n`;\r\n\r\nconst AttachmentWrapper = styled(FlexBox)`\r\n  margin-top: ${({ marginTop }) => marginTop || \"6px\"};\r\n  height: ${({ height }) => height || \"3rem\"};\r\n  border: 1px solid #ccc;\r\n  overflow-x: auto;\r\n`;\r\n\r\nconst Width100 = styled(FlexBox)`\r\n  width: 100%;\r\n  margin-top: ${({ marginTop }) => marginTop || \"\"};\r\n`;\r\n\r\nconst AnswerText = styled.textarea.attrs({ readonly: true })`\r\n  width: 100%;\r\n  margin: 0;\r\n  border: 0;\r\n  background-color: transparent;\r\n  font-size: ${({ theme }) => theme.fontSize.xxs};\r\n`;\r\n\r\nconst AttachedImgWrapper = styled.div``;\r\n\r\n// 이미지 크기 임시 고정\r\nconst AttachedImg = styled.img`\r\n  width: ${({ width }) => width || \"100px\"};\r\n  height: ${({ height }) => height || \"100px\"};\r\n  max-width: 100%;\r\n`;\r\n\r\n// ========== //Answer ==========\r\nconst ButtonWrapper = styled(FlexBox)`\r\n  margin-top: 1rem;\r\n`;\r\n\r\nconst SaveButton = styled(SmallDarkButton)``;\r\n\r\nexport default InquiryManagementThread;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { isActiveSideContentTypeState } from \"@/recoil/displayState\";\r\nimport { itemIdState } from \"@/recoil/boardState\";\r\nimport { isAnswerCompletedState } from \"@/recoil/boardState\";\r\nimport InquiryManagementList from \"@/components/Web/Admin/InquiryManagementList\";\r\nimport InquiryManagementThread from \"@/components/Web/Admin/InquiryManagementThread\";\r\nimport Header from \"@/components/Web/Shared/Layout/Header\";\r\nimport { FlexBox } from \"@/styles/FlexStyle\";\r\nimport { Box } from \"../../../components/Game/Shared/Layout\";\r\nimport { ContentWrapper, WideContent, Main } from \"@/styles/CommonStyle\";\r\nimport useAxios from \"@/hooks/useAxios\";\r\n\r\nconst InquiryManagement = ({ type }) => {\r\n  // 0: is not active, 1: active\r\n  const [isAcitveSideContentType, setIsActiveSideContentType] = useRecoilState(\r\n    isActiveSideContentTypeState\r\n  );\r\n  const [itemId, setItemId] = useRecoilState(itemIdState);\r\n  const [cookies] = useCookies([\"sessionId\"]);\r\n  const [threadData, setThreadData] = useState(null);\r\n  const [isAnswerCompleted, setIsAnswerCompleted] =\r\n    useRecoilState(isAnswerCompletedState);\r\n  const [apiConfig, setApiConfig] = useState(null);\r\n  const { response, loading, error, fetchData } = useAxios(apiConfig, false);\r\n\r\n  useEffect(() => {\r\n    if (itemId === null) {\r\n      setIsActiveSideContentType(0);\r\n    } else {\r\n      setApiConfig({\r\n        method: \"get\",\r\n        url: `/inquiry/${itemId}?page=1`,\r\n        headers: {\r\n          sessionId: cookies.sessionId\r\n        }\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (apiConfig !== null) {\r\n      fetchData();\r\n    }\r\n  }, [apiConfig]);\r\n\r\n  useEffect(() => {\r\n    if (response !== null) {\r\n      setThreadData(response.result);\r\n    }\r\n  }, [response]);\r\n\r\n  useEffect(() => {\r\n    if (threadData !== null) {\r\n      setIsActiveSideContentType(1);\r\n    }\r\n  }, [threadData]);\r\n\r\n  const onThreadOpen = (id) => {\r\n    setApiConfig({\r\n      method: \"get\",\r\n      url: `/inquiry/${id}?page=1`,\r\n      headers: {\r\n        sessionId: cookies.sessionId\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <ContentWrapper row=\"center\" col=\"center\">\r\n      <WideContent width=\"82rem\" dir=\"col\">\r\n        <Header type=\"admin-detail\" />\r\n        <Main type=\"admin\" row=\"between\">\r\n          <ListWrapper row=\"between\">\r\n            <InquiryManagementList\r\n              type={type}\r\n              onThreadOpen={onThreadOpen}\r\n              isAnswerCompleted={isAnswerCompleted}\r\n              setIsAnswerCompleted={setIsAnswerCompleted}\r\n            />\r\n            {isAcitveSideContentType === 1 && (\r\n              <Box>\r\n                <InquiryManagementThread\r\n                  key={threadData?.threadId}\r\n                  data={threadData}\r\n                  fetchAnswer={fetchData}\r\n                />\r\n              </Box>\r\n            )}\r\n          </ListWrapper>\r\n        </Main>\r\n      </WideContent>\r\n    </ContentWrapper>\r\n  );\r\n};\r\n\r\nInquiryManagement.propTypes = {\r\n  type: PropTypes.string\r\n};\r\n\r\nconst ListWrapper = styled(FlexBox)``;\r\n\r\nexport default InquiryManagement;\r\n","import { atom } from \"recoil\";\r\n\r\n// 0: not active, 1: Detail, 2: Create\r\nexport const isActiveSideContentTypeState = atom({\r\n  key: \"isActiveSideContentTypeState\",\r\n  default: 0\r\n});\r\n","export const formatDateToTimestamp = (dateString) => {\r\n  const date = new Date(dateString);\r\n  const yyyy = date.getFullYear();\r\n  const MM = String(date.getMonth() + 1).padStart(2, \"0\");\r\n  const dd = String(date.getDate()).padStart(2, \"0\");\r\n  const hh = String(date.getHours()).padStart(2, \"0\");\r\n  const mm = String(date.getMinutes()).padStart(2, \"0\");\r\n  const ss = String(date.getSeconds()).padStart(2, \"0\");\r\n\r\n  return `${yyyy}-${MM}-${dd} ${hh}:${mm}:${ss}`;\r\n};\r\n"],"names":["InquiryManagementList","type","onThreadOpen","remoteApiConfig","useRecoilValue","remoteApiConfigState","cookies","useCookies","listData","setListData","useState","selectedFilterOptions","setSelectedFilterOptions","currPage","setCurrPage","lastPageIdx","setLastPageIdx","isAnswerCompleted","setIsAnswerCompleted","useRecoilState","isAnswerCompletedState","apiConfig","setApiConfig","method","url","headers","sessionId","response","loading","error","fetchData","useAxios","filterOptions","map","key","uniqueValues","values","useEffect","result","lastPage","list","updatedAt","createdAt","id","title","needAnswer","queryString","Object","entries","value","join","_jsx","_Fragment","children","_jsxs","Box","HeaderWrapper","row","col","ManagementTitle","FilterWrapper","marginTop","marginRight","Filter","ManagementList","isHome","data","onSideOpen","Pagination","propTypes","PropTypes","styled","FlexBox","div","filterLabels","types","isClicked","setIsClicked","reduce","acc","isChecked","setIsChecked","filter","option","obj","FilterListWrapper","idx","FilterItemWrapper","getFilterLabel","FilterImage","src","defaultFilter","onClick","prev","onMouseOver","e","target","setAttribute","onMouseOut","FilterList","marginLeft","dir","item","FilterListItem","onApplyFilter","newFilterOptions","checked","onChange","onCheckboxChange","updated","prevOptions","getFilterItemText","img","attrs","as","props","theme","colors","content","li","ImageFileUpload","appendFilesToFormData","width","height","mode","previewImgs","setPreviewImgs","selectedFiles","setSelectedFiles","inputRef","useRef","onDeleteFile","fileName","prevFiles","file","name","prevImage","image","previewImg","ThumbnailImage","alt","DeleteButton","DeleteIcon","icon","faX","previewName","PreviewNameBox","PreviewNameSpan","ImageFileUploadWrapper","length","PreviewImgWrapper","FileUploadButton","current","click","PlusIcon","faPlus","AttachmentText","UnvisibleInput","ref","preventDefault","persist","newSelectedFiles","Array","from","files","fileUrlList","i","size","alert","some","currUrl","URL","createObjectURL","push","thumbnailImageArray","concat","accept","CommonWrapper","span","fontSize","xxxs","button","FontAwesomeIcon","xxl","input","main","background","text","hover","l","gray100","gray500","gray600","s","gray400","sub","SmallButton","SmallDarkButton","MiniButton","xxxxs","success","InquiryManagementThread","fetchAnswer","threadId","threadTitle","nickname","setRemoteApiConfig","useSetRecoilState","isFirstAnswer","setIsFirstAnswer","isAnswer","answer","setAnswer","answerFiles","setAnswerFiles","isModalOpen","setIsModalOpen","setKey","answerRef","useCallback","_files","onSubmitAnswer","formData","FormData","append","forEach","Date","now","updateAnswerStatus","status","prevStatus","ThreadWrapper","Modal","hasButton","setIsOpen","TypeBar","ServiceTypeIcon","faBug","faUser","faHandHoldingHeart","faFileCirclePlus","faGuitar","getTypeIcon","getTypeName","QuestionWrapper","QnAText","AnswerInputFieldWrapper","HeaderTextWrapper","TitleWrapper","TitleText","SubTextWrapper","StyledIcon","SubText","faClock","ContentWrapper","ContentText","f","AttachedImg","slice","AnswerWrapper","Width100","AnswerText","AttachedImgWrapper","formatDateToTimestamp","StyledTextarea","placeholder","AttachmentWrapper","ButtonWrapper","SaveButton","xxs","textarea","readonly","InquiryManagement","isAcitveSideContentType","setIsActiveSideContentType","isActiveSideContentTypeState","itemId","setItemId","itemIdState","threadData","setThreadData","WideContent","Header","Main","ListWrapper","atom","default","dateString","date","yyyy","getFullYear","MM","String","getMonth","padStart","dd","getDate","hh","getHours","mm","getMinutes","ss","getSeconds"],"sourceRoot":""}