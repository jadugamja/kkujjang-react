{"version":3,"file":"static/js/769.6959d078.chunk.js","mappings":"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","sources":["components/Game/Shared/Button.jsx","assets/data/const.js","components/Game/Shared/GameHeader.jsx","components/Game/Shared/Layout.jsx","components/Game/Shared/Tab.jsx","components/Web/Shared/Layout/Footer.jsx","components/Game/Lobby/Ranking.jsx","components/Game/Lobby/LobbyRoomItem.jsx","components/Game/Lobby/LobbyRoomList.jsx","pages/Game/Lobby.jsx","styles/CommonStyle.jsx","styles/GridStyle.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { GUIDE } from \"@/assets/data/const\";\r\nimport { faCircleQuestion, faGear, faX } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Modal from \"./GameModal\";\r\n\r\nconst StyledSmallButton = styled.button`\r\n  width: 50px;\r\n  height: 42px;\r\n  background-color: ${({ type }) => getColors(type).bgColor || \"initial\"};\r\n  border-radius: 15px 15px 0 0;\r\n\r\n  &:hover {\r\n    background-color: ${({ type }) => getColors(type).hoverBgColor};\r\n  }\r\n`;\r\n\r\nconst StyledButtonIcon = styled(FontAwesomeIcon)`\r\n  color: ${({ type }) => getColors(type).color || \"initial\"};\r\n  font-size: ${({ type }) => getColors(type).fontSize || \"20px\"};\r\n`;\r\n\r\nexport const StyledMiniButton = styled.button`\r\n  padding: ${({ layout }) => (layout === \"side\" ? \"5px 9px\" : \"5px 14px\")};\r\n  background-color: transparent;\r\n  border: 1px solid #000;\r\n  border-radius: 10px;\r\n  font-size: 11px;\r\n`;\r\n\r\nconst getColors = (type) => {\r\n  switch (type) {\r\n    case \"help\":\r\n      return {\r\n        bgColor: \"#ccc\",\r\n        hoverBgColor: \"#E0E0E0\"\r\n      };\r\n    case \"setting\":\r\n      return {\r\n        bgColor: \"#bbbbb9\",\r\n        hoverBgColor: \"#ddd\"\r\n      };\r\n    case \"exit\":\r\n      return {\r\n        bgColor: \"#FF6C6C\",\r\n        hoverBgColor: \"#e55f5f\",\r\n        color: \"#fff\",\r\n        fontSize: \"19px\"\r\n      };\r\n  }\r\n};\r\n\r\nconst getIcon = (type) => {\r\n  switch (type) {\r\n    case \"help\":\r\n      return faCircleQuestion;\r\n    case \"setting\":\r\n      return faGear;\r\n    case \"exit\":\r\n      return faX;\r\n  }\r\n};\r\n\r\nexport const Button = ({ type, location }) => {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  const getMessage = (type) => {\r\n    if (type === \"help\") {\r\n      return GUIDE;\r\n    } else if (type === \"exit\") {\r\n      return location === \"playing\" ? \"게임을 그만두시겠습니까?\" : \"방을 나가시겠습니까?\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <StyledSmallButton type={type} onClick={() => setIsModalOpen(true)}>\r\n        <StyledButtonIcon type={type} icon={getIcon(type)} />\r\n      </StyledSmallButton>\r\n      {isModalOpen ? (\r\n        <Modal type={type} isOpen={isModalOpen} setIsOpen={setIsModalOpen} height=\"14rem\">\r\n          {getMessage(type)}\r\n        </Modal>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  type: PropTypes.string,\r\n  location: PropTypes.string\r\n};\r\n\r\n// 준비 버튼\r\n// const ButtonWrapper = styled(FlexBox)`\r\n//   flex-grow: 1;\r\n//   background-color: #eee;\r\n// `;\r\n\r\n// const ReadyButton = styled.button`\r\n//   padding: 14px 26px;\r\n//   background-color: #ffd700;\r\n//   font-family: \"DNFBitBitv2\";\r\n//   font-size: 32px;\r\n//   letter-spacing: 10px;\r\n//   transition-duration: 0.4s;\r\n//   border-radius: 6px;\r\n\r\n//   &:hover {\r\n//     background-color: #8b4513;\r\n//     color: black;\r\n//   }\r\n\r\n//   &:first-letter {\r\n//     margin-left: 10px;\r\n//   }\r\n// `;\r\n","export const GUIDE = `\r\n끝말잇기\r\n\r\n끝말잇기는 이전 한국어 단어의 끝 한 자리로 시작하는 두 글자 이상의 한국어 단어를 이용하여 차례를 넘기는 방식입니다.\r\n\r\n예시) 강아지 → 지피지기 → 기회\r\n\r\n한글 맞춤법 3장 5절 두음 법칙에 따라 음절을 바꾸어 이을 수 있습니다.\r\n\r\n예시) 강강술래 → 내력 → 역학`;\r\n","import { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { FlexBox } from \"@/styles/FlexStyle\";\r\nimport gameLogo from \"@/assets/images/logo-game.png\";\r\nimport Modal from \"./GameModal\";\r\n\r\nconst GameHeader = ({ nickname = \"\" }) => {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  return (\r\n    <FixedHeader>\r\n      {isModalOpen && (\r\n        <Modal\r\n          type=\"error\"\r\n          isOpen={isModalOpen}\r\n          setIsOpen={setIsModalOpen}\r\n          height=\"14rem\"\r\n        >\r\n          홈으로 이동하시겠습니까?\r\n        </Modal>\r\n      )}\r\n      <Link onClick={() => setIsModalOpen(true)}>\r\n        <LogoImg src={gameLogo} />\r\n      </Link>\r\n      <span>{nickname}</span>\r\n    </FixedHeader>\r\n  );\r\n};\r\n\r\nconst FixedHeader = styled(FlexBox).attrs({\r\n  as: \"header\",\r\n  row: \"between\",\r\n  col: \"center\"\r\n})`\r\n  position: fixed;\r\n  top: 0;\r\n  width: inherit;\r\n  height: 7rem;\r\n  background-color: transparent;\r\n  z-index: 10;\r\n`;\r\n\r\n// 로고 이미지\r\nconst LogoImg = styled.img`\r\n  width: 4rem;\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nGameHeader.propTypes = {\r\n  nickname: PropTypes.string\r\n};\r\n\r\nexport default GameHeader;\r\n","import { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { FlexBox } from \"@/styles/FlexStyle\";\r\n\r\nexport const SideContentWrapper = styled(FlexBox)`\r\n  width: 16.5rem;\r\n  height: 100%;\r\n`;\r\n\r\nexport const MainContentWrapper = styled(FlexBox)`\r\n  max-width: 100%;\r\n  flex-grow: 1;\r\n`;\r\n\r\nexport const Box = styled.div`\r\n  width: ${({ type }) => (type === \"home\" ? \"28rem\" : \"40.5rem\")};\r\n  height: ${({ type }) => (type === \"home\" ? \"43.6rem\" : \"49.6rem\")};\r\n  padding: 10px 22px;\r\n  background-color: #fff;\r\n  border-radius: ${({ type }) => (type === \"home\" ? \"25px\" : \"10px\")};\r\n  box-shadow: 0 0 7px 0 rgba(0, 0, 0, 0.25);\r\n  overflow-y: ${({ overflowY }) => overflowY};\r\n`;\r\n\r\nexport const Main = styled.main`\r\n  position: ${({ position }) => position};\r\n  top: ${({ top }) => top};\r\n  bottom: ${({ bottom }) => bottom};\r\n  left: ${({ left }) => left};\r\n  right: ${({ right }) => right};\r\n  max-width: ${({ maxWidth }) => maxWidth};\r\n  width: ${({ width }) => width};\r\n  height: ${({ height }) => height};\r\n  margin: ${({ margin }) => margin};\r\n  padding: ${({ padding }) => padding};\r\n  background-color: ${({ bgColor }) => bgColor};\r\n  border-top: ${({ borderTop }) => borderTop};\r\n  border-right: ${({ borderRight }) => borderRight};\r\n  border-bottom: ${({ borderBottom }) => borderBottom};\r\n  border-left: ${({ borderLeft }) => borderLeft};\r\n  border-radius: ${({ borderRadius }) => borderRadius};\r\n  z-index: ${({ zIndex }) => zIndex};\r\n`;\r\n\r\nexport const Wrapper = styled(FlexBox)`\r\n  position: ${({ position }) => position};\r\n  top: ${({ top }) => top};\r\n  bottom: ${({ bottom }) => bottom};\r\n  left: ${({ left }) => left};\r\n  right: ${({ right }) => right};\r\n  max-width: ${({ maxWidth }) => maxWidth};\r\n  width: ${({ width }) => width};\r\n  height: ${({ height }) => height};\r\n  margin: ${({ margin }) => margin};\r\n  padding: ${({ padding }) => padding};\r\n  background-color: ${({ bgColor }) => bgColor};\r\n  border-top: ${({ borderTop }) => borderTop};\r\n  border-right: ${({ borderRight }) => borderRight};\r\n  border-bottom: ${({ borderBottom }) => borderBottom};\r\n  border-left: ${({ borderLeft }) => borderLeft};\r\n  border-radius: ${({ borderRadius }) => borderRadius};\r\n  z-index: ${({ zIndex }) => zIndex};\r\n`;\r\n\r\nexport const SpacingWrapper = styled(FlexBox)`\r\n  & > * + * {\r\n    margin-top: ${({ spacingY }) => spacingY && spacingY};\r\n    margin-left: ${({ spacingX }) => spacingX && spacingX};\r\n  }\r\n`;\r\n\r\nexport const BodyWrapper = styled(FlexBox)`\r\n  width: 100%;\r\n  height: 100%;\r\n  border: 1px solid #7d7d7d;\r\n`;\r\n\r\nexport const UpperWrapper = styled(FlexBox)`\r\n  height: 100%;\r\n  max-height: 26.65rem;\r\n  padding: 3px 5px;\r\n  background-color: ${({ type }) => (type === \"play\" ? \"#889E7D\" : \"#f3f3f3\")};\r\n`;\r\n\r\nexport const Span = styled.span`\r\n  margin: ${({ margin }) => margin || \"0\"};\r\n  font-family: ${({ font }) => font || \"Gugi\"};\r\n  font-size: ${({ fontSize }) => fontSize || \"21px\"};\r\n  font-weight: ${({ fontWeight }) => fontWeight || \"normal\"};\r\n  color: ${({ color }) => color || \"inherit\"};\r\n`;\r\n\r\nexport const StyledLink = styled(Link)`\r\n  width: ${({ width }) => width};\r\n`;\r\n","import React, { useState, useCallback } from \"react\";\r\nimport { useSetRecoilState } from \"recoil\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport { faTrophy } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FlexBox } from \"@/styles/FlexStyle\";\r\nimport Modal from \"./GameModal\";\r\nimport { roomInfoState } from \"@/recoil/roomState\";\r\nimport { userInfoState } from \"@/recoil/userState\";\r\nimport { joinRoom, loadRoom, onUserJoinRoom } from \"../../../services/socket\";\r\n\r\nconst TAB_TYPES = {\r\n  CREATE: \"create\",\r\n  ENTER: \"enter\",\r\n  LIST: \"list\",\r\n  RANKING: \"ranking\",\r\n  PLAYING: \"playing\",\r\n  READY: \"ready\",\r\n  WAIT: \"wait\"\r\n};\r\n\r\nconst TAB_BG_COLORS = {\r\n  [TAB_TYPES.CREATE]: \"#B0D3F3\",\r\n  [TAB_TYPES.ENTER]: \"#E6EEB4\",\r\n  [TAB_TYPES.LIST]: \"#779DC5\",\r\n  [TAB_TYPES.RANKING]: \"#f3f3f3\",\r\n  [TAB_TYPES.PLAYING]: \"#889E7D\",\r\n  [TAB_TYPES.WAIT]: \"#cdeba1\",\r\n  [TAB_TYPES.READY]: \"#676767\"\r\n};\r\n\r\nconst TAB_TEXT_COLORS = {\r\n  [TAB_TYPES.READY]: \"#fff\"\r\n};\r\n\r\nconst TAB_TEXTS = {\r\n  [TAB_TYPES.CREATE]: { type: \"room\", message: \"\" },\r\n  [TAB_TYPES.ENTER]: {\r\n    type: \"alert\",\r\n    message: \"입장 가능한 방이 없습니다.\",\r\n    height: \"14.5rem\"\r\n  }\r\n};\r\n\r\nconst StyledTab = styled(FlexBox)`\r\n  position: relative;\r\n  top: ${({ bgColor }) =>\r\n    bgColor === \"#779DC5\" || bgColor === \"#f3f3f3\" || bgColor === \"#889E7D\"\r\n      ? \"1px\"\r\n      : \"0\"};\r\n  z-index: 9;\r\n  width: 8.75rem;\r\n  height: 3rem;\r\n  background-color: ${({ bgColor }) => bgColor};\r\n  border: 1px solid\r\n    ${({ bgColor }) =>\r\n      bgColor === \"#779DC5\" ? \"#7D7D7D\" : bgColor === \"#f3f3f3\" ? \"#ccc\" : \"transparent\"};\r\n  color: ${({ color }) => color || \"initial\"};\r\n  border-bottom: 0;\r\n  border-radius: 12px 12px 0 0;\r\n  flex-shrink: 0;\r\n\r\n  & > * + * {\r\n    margin-left: 7px;\r\n  }\r\n\r\n  &:hover {\r\n    cursor: ${({ onClick }) => (onClick ? \"pointer\" : \"default\")};\r\n    transform: ${({ onClick }) => onClick && \"translateY(-2px)\"};\r\n  }\r\n`;\r\n\r\nconst TabIcon = styled(FontAwesomeIcon)`\r\n  font-size: ${({ fontSize }) => fontSize || \"18px\"};\r\n`;\r\n\r\nconst TabSpan = styled.span`\r\n  font-size: ${({ theme }) => theme.fontSize.s};\r\n  font-weight: 700;\r\n`;\r\n\r\n// ========= Main 탭 =========\r\nexport const MainTab = ({ children, bgColor, color, onClick }) => (\r\n  <StyledTab row=\"center\" col=\"center\" bgColor={bgColor} color={color} onClick={onClick}>\r\n    <TabSpan>{children}</TabSpan>\r\n  </StyledTab>\r\n);\r\n\r\nMainTab.propTypes = {\r\n  children: PropTypes.string,\r\n  bgColor: PropTypes.string,\r\n  color: PropTypes.string,\r\n  onClick: PropTypes.func\r\n};\r\n\r\nexport const Tab = ({ children, type, rooms, onClick }) => {\r\n  const setRoomInfo = useSetRecoilState(roomInfoState);\r\n  const setUser = useSetRecoilState(userInfoState);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [, setCookie] = useCookies([\"userId\"]);\r\n  const navigate = useNavigate();\r\n\r\n  const onCreateRoom = useCallback(() => {\r\n    setIsModalOpen(true);\r\n  }, []);\r\n\r\n  const onTryEnterRoom = useCallback(() => {\r\n    const availableRooms = rooms?.filter(\r\n      (room) =>\r\n        room.state !== \"playing\" &&\r\n        room.isSecure === false &&\r\n        room.currentUserCount < room.maxUserCount\r\n    );\r\n\r\n    if (availableRooms.length === 0) {\r\n      setIsModalOpen(true);\r\n    } else {\r\n      const pickedRoom =\r\n        availableRooms[Math.floor(Math.random() * availableRooms.length)];\r\n\r\n      joinRoom(\r\n        { roomId: pickedRoom.id, password: \"\" },\r\n        () => {\r\n          loadRoom((room) => {\r\n            setRoomInfo(room);\r\n            setCookie(\"userId\", room.userList[room.userList.length - 1].userId, {\r\n              path: \"/\"\r\n            });\r\n            setUser((prev) => ({\r\n              userId: room.userList[room.userList.length - 1].userId,\r\n              ...prev\r\n            }));\r\n            navigate(`/game/${room.roomNumber.toString()}`);\r\n          });\r\n        },\r\n        (error) => {\r\n          // setModalType(\"error\");\r\n          // setModalMessage(error);\r\n        }\r\n      );\r\n\r\n      onUserJoinRoom((userId) => {\r\n        // 방에 참가한 사용자의 userId를 배열에 추가\r\n        debugger;\r\n        console.log(userId);\r\n      });\r\n      // setRoomId(pickedRoom.id);\r\n    }\r\n  }, [rooms]);\r\n\r\n  const getOnClick = {\r\n    [TAB_TYPES.CREATE]: onCreateRoom,\r\n    [TAB_TYPES.ENTER]: onTryEnterRoom\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <StyledTab\r\n        as=\"button\"\r\n        row=\"center\"\r\n        col=\"center\"\r\n        type={type}\r\n        bgColor={TAB_BG_COLORS[type]}\r\n        color={TAB_TEXT_COLORS[type]}\r\n        onClick={getOnClick[type] || onClick}\r\n        hasOnClick={!!getOnClick[type] || onClick}\r\n      >\r\n        {type === \"ranking\" && <TabIcon icon={faTrophy} />}\r\n        <TabSpan>{children}</TabSpan>\r\n      </StyledTab>\r\n      {isModalOpen ? (\r\n        <Modal\r\n          type={TAB_TEXTS[type].type}\r\n          isOpen={isModalOpen}\r\n          setIsOpen={setIsModalOpen}\r\n          height={TAB_TEXTS[type]?.height}\r\n        >\r\n          {TAB_TEXTS[type].message}\r\n        </Modal>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nTab.propTypes = {\r\n  children: PropTypes.string,\r\n  type: PropTypes.oneOf(Object.values(TAB_TYPES)),\r\n  rooms: PropTypes.array,\r\n  onClick: PropTypes.func,\r\n  isModalOpen: PropTypes.bool,\r\n  setIsModalOpen: PropTypes.func\r\n};\r\n","import styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { FlexBox } from \"@/styles/FlexStyle\";\r\n\r\nconst Footer = ({ message }) => {\r\n  message = \"KKUJJANG ⓒ All rights reserved.\";\r\n\r\n  return (\r\n    <FooterWrapper row=\"center\" col=\"center\">\r\n      <FixedFooter>{message}</FixedFooter>\r\n    </FooterWrapper>\r\n  );\r\n};\r\n\r\nFooter.propTypes = {\r\n  message: PropTypes.string\r\n};\r\n\r\n// 푸터 래퍼\r\nconst FooterWrapper = styled(FlexBox)``;\r\n\r\n// 푸터\r\nconst FixedFooter = styled(FlexBox).attrs({\r\n  as: \"footer\",\r\n  row: \"center\",\r\n  col: \"center\"\r\n})`\r\n  width: 100%;\r\n  height: 1.5rem;\r\n  position: fixed;\r\n  bottom: 0;\r\n  font-size: 12px;\r\n  color: ${({ theme }) => theme.colors.gray500};\r\n`;\r\n\r\nexport default Footer;\r\n","import { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { FlexBox } from \"@/styles/FlexStyle\";\r\nimport GridBox from \"@/styles/GridStyle\";\r\nimport { StyledMiniButton as Button } from \"../Shared/Button\";\r\nimport TitleBar from \"../Shared/TitleBar\";\r\nimport useAxios from \"@/hooks/useAxios\";\r\n\r\nconst Ranking = () => {\r\n  const [rankData, setRankData] = useState([]);\r\n  const [myRank, setMyRank] = useState(31);\r\n  const [currPage, setCurrPage] = useState(1);\r\n  const [lastPageIdx, setLastPageIdx] = useState(30);\r\n  const { response, loading, error, fetchData } = useAxios({\r\n    method: \"get\",\r\n    url: \"/ranking\"\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (response !== null) {\r\n      const pageSize = 15;\r\n      const startIndex = (currPage - 1) * pageSize;\r\n      const endIndex = startIndex + pageSize;\r\n      const pageData = response.result?.slice(startIndex, endIndex);\r\n      setLastPageIdx(Math.ceil(response.result?.length / pageSize));\r\n      setRankData(pageData);\r\n    }\r\n  }, [response]);\r\n\r\n  const getTopRankColor = (rank) => {\r\n    if (rank === 1) {\r\n      return \"#FFD700\";\r\n    } else if (rank === 2) {\r\n      return \"#C0C0C0\";\r\n    } else if (rank === 3) {\r\n      return \"#DE7A32\";\r\n    }\r\n\r\n    return \"transparent\";\r\n  };\r\n\r\n  return (\r\n    <RankingWrapper>\r\n      <TitleBar type=\"rank\" />\r\n      <TableWrapper>\r\n        <Table>\r\n          <thead>\r\n            <Tr>\r\n              <Th width=\"28px\">#</Th>\r\n              <Th width=\"58px\">레벨</Th>\r\n              <Th>닉네임</Th>\r\n            </Tr>\r\n          </thead>\r\n          <Tbody>\r\n            {rankData?.map(({ rank, level, nickname }, idx) => (\r\n              <Tr key={idx}>\r\n                <Td bgColor={getTopRankColor(rank)}>{rank}</Td>\r\n                <Td>{level}</Td>\r\n                <Td textAlign=\"left\">{nickname}</Td>\r\n              </Tr>\r\n            ))}\r\n          </Tbody>\r\n        </Table>\r\n        <GridBox flow=\"col\" cols=\"1fr 1.5fr 1fr\" margin=\"7px 24px\">\r\n          <FlexBox row=\"center\">\r\n            {currPage > 1 && (\r\n              <Button layout=\"side\" onClick={() => setCurrPage(currPage - 1)}>\r\n                이전\r\n              </Button>\r\n            )}\r\n          </FlexBox>\r\n          <FlexBox row=\"center\">\r\n            <Button layout=\"center\" onClick={() => setCurrPage(Math.ceil(myRank / 15))}>\r\n              내 순위\r\n            </Button>\r\n          </FlexBox>\r\n          <FlexBox row=\"center\">\r\n            {currPage < lastPageIdx && (\r\n              <Button layout=\"side\" onClick={() => setCurrPage(currPage + 1)}>\r\n                다음\r\n              </Button>\r\n            )}\r\n          </FlexBox>\r\n        </GridBox>\r\n      </TableWrapper>\r\n    </RankingWrapper>\r\n  );\r\n};\r\n\r\nconst RankingWrapper = styled.div`\r\n  width: 100%;\r\n  height: 27.25rem;\r\n  padding: 3px 5px;\r\n  background-color: #f3f3f3;\r\n  border: 1px solid #ccc;\r\n  border-bottom: 0;\r\n`;\r\n\r\nconst TableWrapper = styled.div`\r\n  height: 100%;\r\n  padding: 5px 10px;\r\n`;\r\n\r\nconst Table = styled.table`\r\n  width: 100%;\r\n  max-width: 100%;\r\n`;\r\n\r\nconst Tbody = styled.tbody`\r\n  & > * + * {\r\n    margin-top: 10px;\r\n  }\r\n`;\r\n\r\nconst Tr = styled.tr`\r\n  max-height: 24px;\r\n\r\n  & > * + * {\r\n    margin-left: 3px;\r\n  }\r\n`;\r\n\r\nconst Th = styled.th`\r\n  width: ${({ width }) => width || \"auto\"};\r\n  background-color: #ddd;\r\n  border: 3px solid #f3f3f3;\r\n  font-size: 13px;\r\n`;\r\n\r\nconst Td = styled.td`\r\n  background-color: ${({ bgColor }) => bgColor || \"transparent\"};\r\n  border: 3px solid #f3f3f3;\r\n  padding-left: ${({ textAlign }) => textAlign === \"left\" && \"10px\"};\r\n  text-align: ${({ textAlign }) => textAlign || \"center\"};\r\n  font-size: 12px;\r\n  font-weight: 430;\r\n`;\r\n\r\nexport default Ranking;\r\n","import { useState } from \"react\";\r\nimport { useSetRecoilState } from \"recoil\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport { roomInfoState, roomIdState } from \"@/recoil/roomState\";\r\nimport { userInfoState } from \"@/recoil/userState\";\r\nimport FlexBox from \"@/styles/FlexStyle\";\r\nimport Modal from \"../Shared/GameModal\";\r\nimport { faLock, faLockOpen } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { joinRoom, loadRoom } from \"../../../services/socket\";\r\n\r\nconst LobbyRoomItem = ({\r\n  roomInfo: {\r\n    id,\r\n    roomNumber,\r\n    title,\r\n    isSecure,\r\n    maxRound,\r\n    roundTimeLimit,\r\n    currentUserCount,\r\n    maxUserCount,\r\n    state\r\n  }\r\n}) => {\r\n  const setRoomInfo = useSetRecoilState(roomInfoState);\r\n  const setUser = useSetRecoilState(userInfoState);\r\n  const [modalType, setModalType] = useState(\"\");\r\n  const [modalMessage, setModalMessage] = useState(\"\");\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [, setCookie] = useCookies([\"userId\"]);\r\n  const navigate = useNavigate();\r\n\r\n  const onEnterRoom = (roomId) => {\r\n    if (state === \"playing\") {\r\n      setModalType(\"alert\");\r\n      setModalMessage(\"게임이 진행 중인 방입니다.\");\r\n      setIsModalOpen(true);\r\n      return;\r\n    }\r\n\r\n    if (currentUserCount === maxUserCount) {\r\n      setModalType(\"alert\");\r\n      setModalMessage(\"방이 찼습니다.\");\r\n      setIsModalOpen(true);\r\n      return;\r\n    }\r\n\r\n    if (state !== \"playing\" && isSecure === true) {\r\n      setModalType(\"password\");\r\n      setIsModalOpen(true);\r\n      return;\r\n    }\r\n\r\n    joinRoom(\r\n      { roomId, password: \"\" },\r\n      () => {\r\n        loadRoom((room) => {\r\n          setRoomInfo(room);\r\n          setCookie(\"userId\", room.userList[room.userList.length - 1].userId, {\r\n            path: \"/\"\r\n          });\r\n          setUser((prev) => ({\r\n            userId: room.userList[room.userList.length - 1].userId,\r\n            ...prev\r\n          }));\r\n          navigate(`/game/${room.roomNumber.toString()}`);\r\n        });\r\n      },\r\n      (error) => {\r\n        setModalType(\"error\");\r\n        setModalMessage(error);\r\n        setIsModalOpen(true);\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <RoomItem key={id} isPlaying={state === \"playing\"} onClick={() => onEnterRoom(id)}>\r\n        <RoomPlayingShadowText isPlaying={state === \"playing\"}>\r\n          {state === \"playing\" ? \"PLAYING\" : \"WAITING\"}\r\n        </RoomPlayingShadowText>\r\n        <RoomItemInfoWrapper row=\"between\">\r\n          <LeftInfoWrapper row=\"center\" col=\"center\">\r\n            <RoomNumber>{roomNumber}</RoomNumber>\r\n          </LeftInfoWrapper>\r\n          <CenterInfoWrapper dir=\"col\" row=\"center\">\r\n            <RoomName>{title}</RoomName>\r\n            <CenterBottomInfoWrapper>\r\n              <RoomSubText>{`라운드 ${maxRound}`}</RoomSubText>\r\n              <RoomSubText>{`${roundTimeLimit / 1000}초`}</RoomSubText>\r\n            </CenterBottomInfoWrapper>\r\n          </CenterInfoWrapper>\r\n          <RightInfoWrapper dir=\"col\" row=\"evenly\" col=\"center\">\r\n            <PlayerCount>{`${currentUserCount}/${maxUserCount}`}</PlayerCount>\r\n            <FlexBox row=\"center\" col=\"center\">\r\n              <LockIcon icon={isSecure === true ? faLock : faLockOpen} />\r\n            </FlexBox>\r\n          </RightInfoWrapper>\r\n        </RoomItemInfoWrapper>\r\n      </RoomItem>\r\n      {isModalOpen ? (\r\n        <Modal\r\n          type={modalType}\r\n          isOpen={isModalOpen}\r\n          setIsOpen={setIsModalOpen}\r\n          roomId={id}\r\n        >\r\n          {modalMessage}\r\n        </Modal>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nLobbyRoomItem.propTypes = {\r\n  roomInfo: PropTypes.shape({\r\n    id: PropTypes.string,\r\n    roomNumber: PropTypes.number,\r\n    title: PropTypes.string,\r\n    isSecure: PropTypes.bool,\r\n    maxRound: PropTypes.number,\r\n    roundTimeLimit: PropTypes.number,\r\n    currentUserCount: PropTypes.number,\r\n    maxUserCount: PropTypes.number,\r\n    state: PropTypes.oneOf([\"preparing\", \"playing\"]).isRequired\r\n  }).isRequired\r\n};\r\n\r\nconst RoomItem = styled.div`\r\n  width: calc(50% - 1rem);\r\n  height: 7rem;\r\n  background-color: ${({ isPlaying }) => (isPlaying ? \"#737373\" : \"#EBEBEB\")};\r\n  border: 2px solid rgba(0, 0, 0, 0.5);\r\n  border-radius: 20px;\r\n  margin: 8px 4px;\r\n  padding: 15px 18px 15px 10px;\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst RoomPlayingShadowText = styled.span`\r\n  position: absolute;\r\n  margin-top: ${({ isPlaying }) => (isPlaying ? \"8px\" : \"9.5px\")};\r\n  transform: rotate(338deg);\r\n  font-family: \"DNFBitBitv2\";\r\n  font-size: 41px;\r\n  font-weight: 900;\r\n  z-index: 1;\r\n  opacity: ${({ isPlaying }) => (isPlaying ? \"0.15\" : \"0.1\")};\r\n`;\r\n\r\nconst RoomItemInfoWrapper = styled(FlexBox)`\r\n  height: 100%;\r\n`;\r\n\r\nconst LeftInfoWrapper = styled(FlexBox)`\r\n  width: 5rem;\r\n`;\r\n\r\nconst CenterInfoWrapper = styled(FlexBox)`\r\n  flex-grow: 1;\r\n\r\n  & > * + * {\r\n    margin-top: 8px;\r\n  }\r\n`;\r\n\r\nconst CenterBottomInfoWrapper = styled(FlexBox)`\r\n  & > * + * {\r\n    margin-left: 15px;\r\n  }\r\n`;\r\n\r\nconst RightInfoWrapper = styled(FlexBox)`\r\n  width: 4.2rem;\r\n`;\r\n\r\nconst RoomNumber = styled.span`\r\n  font-family: \"AlfaSlabOne\";\r\n  font-size: ${({ theme }) => theme.fontSize.xl};\r\n  font-weight: 800;\r\n  padding-bottom: 4px;\r\n`;\r\n\r\nconst RoomName = styled.span`\r\n  font-family: \"Hanna\";\r\n  font-size: 23px;\r\n  font-weight: 500;\r\n`;\r\n\r\nconst RoomSubText = styled.span`\r\n  font-family: \"Hanna\";\r\n  font-size: 18px;\r\n  font-weight: 400;\r\n`;\r\n\r\nconst PlayerCount = styled.span`\r\n  font-family: \"ZenDots\";\r\n  font-size: 27px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst LockIcon = styled(FontAwesomeIcon)`\r\n  font-size: 28px;\r\n`;\r\n\r\nexport default LobbyRoomItem;\r\n","import { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\nimport FlexBox from \"@/styles/FlexStyle\";\r\nimport TitleBar from \"../Shared/TitleBar\";\r\nimport LobbyRoomItem from \"./LobbyRoomItem\";\r\n\r\nconst LobbyRoomList = ({ rooms }) => {\r\n  const [showWaitingRoom, setShowWaitingRoom] = useState(false);\r\n  const [showOpenRoom, setShowOpenRoom] = useState(false);\r\n\r\n  return (\r\n    <RoomListWrapper dir=\"col\">\r\n      <TitleBar\r\n        type=\"list\"\r\n        row=\"between\"\r\n        showWaitingRoom={showWaitingRoom}\r\n        setShowWaitingRoom={setShowWaitingRoom}\r\n        showOpenRoom={showOpenRoom}\r\n        setShowOpenRoom={setShowOpenRoom}\r\n      />\r\n      <RoomItemWrapper row=\"between\">\r\n        {rooms\r\n          ?.filter((room) => {\r\n            if (showWaitingRoom && room.state === \"playing\") {\r\n              return false;\r\n            }\r\n            if (showOpenRoom && room.isSecure === true) {\r\n              return false;\r\n            }\r\n            return true;\r\n          })\r\n          .map((room) => (\r\n            <LobbyRoomItem key={room.id} roomInfo={room} />\r\n          ))}\r\n      </RoomItemWrapper>\r\n    </RoomListWrapper>\r\n  );\r\n};\r\n\r\nLobbyRoomList.propTypes = {\r\n  rooms: PropTypes.array\r\n};\r\n\r\nconst RoomListWrapper = styled(FlexBox)`\r\n  width: 57.6rem;\r\n  height: 100%;\r\n  padding: 3px 5px;\r\n  background-color: #748f9b80;\r\n  border: 1px solid #7d7d7d;\r\n`;\r\nconst RoomItemWrapper = styled(FlexBox)`\r\n  max-height: 32rem;\r\n  margin: 12px 0;\r\n  padding: 0 24px;\r\n  flex-wrap: wrap;\r\n  overflow: auto;\r\n`;\r\n\r\nexport default LobbyRoomList;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { useRecoilValue, useSetRecoilState } from \"recoil\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { avatarUrlState } from \"../../recoil/userState\";\r\nimport io from \"socket.io-client\";\r\nimport { Cookies } from \"react-cookie\";\r\nimport { SOCKET_URL } from \"@/services/const\";\r\n\r\nimport { roomInfoState } from \"@/recoil/roomState\";\r\nimport GameHeader from \"@/components/Game/Shared/GameHeader\";\r\nimport { ContentWrapper, WideContent, Box } from \"@/styles/CommonStyle\";\r\nimport Ranking from \"@/components/Game/Lobby/Ranking\";\r\nimport Profile from \"@/components/Game/Shared/Profile\";\r\nimport LobbyRoomList from \"@/components/Game/Lobby/LobbyRoomList\";\r\nimport { Tab } from \"@/components/Game/Shared/Tab\";\r\nimport { Button } from \"@/components/Game/Shared/Button\";\r\nimport Footer from \"@/components/Web/Shared/Layout/Footer\";\r\nimport Modal from \"@/components/Game/Shared/GameModal\";\r\nimport {\r\n  SideContentWrapper,\r\n  MainContentWrapper,\r\n  SpacingWrapper,\r\n  Main\r\n} from \"@/components/Game/Shared/Layout\";\r\nimport {\r\n  loadRoomList,\r\n  onLoadNewRoom,\r\n  onDestroyRoom,\r\n  onUpdateCurrentPlayerCount,\r\n  onUpdateRoomConfig,\r\n  onError\r\n} from \"@/services/socket\";\r\nimport { getCurrentUserInfo } from \"@/services/user\";\r\n\r\nconst Lobby = () => {\r\n  const [rooms, setRooms] = useState([]);\r\n  const setRoomInfo = useSetRecoilState(roomInfoState);\r\n  const [modalType, setModalType] = useState(null);\r\n  const [errorMessage, setErrorMessage] = useState(null);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  const location = useLocation();\r\n  const path = location.pathname;\r\n\r\n  let isMounted = false;\r\n\r\n  useEffect(() => {\r\n    if (!isMounted && path === \"/game\") {\r\n      loadRoomList((roomList) => {\r\n        setRooms([...roomList].reverse());\r\n      });\r\n\r\n      onLoadNewRoom((newRoom) => {\r\n        setRooms((prev) => [newRoom, ...prev]);\r\n        setRoomInfo(null);\r\n      });\r\n\r\n      onDestroyRoom(({ roomId }) => {\r\n        setRooms((prev) => prev.filter((room) => room.id !== roomId));\r\n      });\r\n\r\n      onUpdateCurrentPlayerCount((data) => {\r\n        const { roomId, currentPlayerCount } = data;\r\n        setRooms((prev) =>\r\n          prev.map((room) =>\r\n            room.id === roomId ? { ...room, currentPlayerCount } : room\r\n          )\r\n        );\r\n      });\r\n\r\n      onUpdateRoomConfig((newRoom) => {\r\n        setRooms((prev) =>\r\n          prev.map((room) => (room.id === newRoom.id ? { ...room, ...newRoom } : room))\r\n        );\r\n      });\r\n\r\n      onError((error) => {\r\n        setModalType(\"error\");\r\n        setErrorMessage(error);\r\n        setIsModalOpen(true);\r\n        return;\r\n      });\r\n    }\r\n\r\n    isMounted = true;\r\n  }, []);\r\n\r\n  const getUserInfo = useCallback(async () => {\r\n    const userInfo = await getCurrentUserInfo();\r\n    debugger;\r\n    if (userInfo.avatarUrl === null) {\r\n      setModalType(null);\r\n      setIsModalOpen(false);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <ContentWrapper row=\"center\" col=\"center\">\r\n      {isModalOpen && (\r\n        <Modal\r\n          type={modalType}\r\n          isOpen={isModalOpen}\r\n          setIsOpen={setIsModalOpen}\r\n          height=\"14rem\"\r\n        >\r\n          {modalType === \"error\" && errorMessage}\r\n        </Modal>\r\n      )}\r\n      <WideContent dir=\"col\" row=\"center\">\r\n        <GameHeader />\r\n        <Main width=\"100%\">\r\n          <Box>\r\n            <SideContentWrapper dir=\"col\">\r\n              <Tab type=\"ranking\">랭킹</Tab>\r\n              <Ranking />\r\n              <Profile />\r\n            </SideContentWrapper>\r\n            <MainContentWrapper dir=\"col\">\r\n              <SpacingWrapper row=\"between\" col=\"end\">\r\n                <SpacingWrapper spacingX=\"5px\">\r\n                  <Tab type=\"list\">방 목록</Tab>\r\n                  <Tab type=\"create\">방 만들기</Tab>\r\n                  <Tab type=\"enter\" rooms={rooms}>\r\n                    바로 입장\r\n                  </Tab>\r\n                </SpacingWrapper>\r\n                <div>\r\n                  <Button type=\"help\" />\r\n                  <Button type=\"setting\" />\r\n                </div>\r\n              </SpacingWrapper>\r\n              <LobbyRoomList rooms={rooms} roomId={null} />\r\n            </MainContentWrapper>\r\n          </Box>\r\n        </Main>\r\n        <Footer />\r\n      </WideContent>\r\n    </ContentWrapper>\r\n  );\r\n};\r\n\r\nexport default Lobby;\r\n","import styled, { keyframes } from \"styled-components\";\r\nimport { FlexBox } from \"./FlexStyle\";\r\n\r\nexport const fadeIn = keyframes`\r\n  from { opacity: 0;}\r\n  to {opacity: 1;}\r\n`;\r\n\r\nexport const blink = keyframes`\r\n  50% {\r\n      opacity: 0;\r\n  }\r\n`;\r\n\r\n// 숨겨진 요소\r\nexport const Hidden = styled.div`\r\n  display: none;\r\n`;\r\n\r\n// 웹 페이지 그라데이션 영역\r\nexport const Gradation = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 42.25rem;\r\n  background-image: linear-gradient(#dbe1ed, #ffffff00);\r\n  z-index: -1;\r\n`;\r\n\r\n// 콘텐츠 영역 감싸는 태그\r\nexport const ContentWrapper = styled(FlexBox)`\r\n  animation: ${fadeIn} 0.5s ease-in-out;\r\n`;\r\n\r\n// 넓은 콘텐츠 영역 (width: 1200px)\r\nexport const WideContent = styled(FlexBox)`\r\n  width: ${(props) => props.width || \"75rem\"};\r\n  height: 100vh;\r\n`;\r\n\r\n// 좁은 콘텐츠 영역 (width: 652px)\r\nexport const NarrowContent = styled(FlexBox)`\r\n  width: 36.75rem; // 기존 40.75rem\r\n  height: ${(props) => props.height || \"fit-content\"};\r\n`;\r\n\r\n// 페이지의 핵심 콘텐츠\r\nexport const Main = styled.main`\r\n  width: 100%;\r\n  margin-top: ${({ type }) =>\r\n    type === \"big\" ? \"10rem\" : type !== \"admin\" ? \"7.5rem\" : \"6.5rem\"};\r\n`;\r\n\r\nexport const Box = styled(FlexBox)`\r\n  width: 100%;\r\n  max-width: 100%;\r\n  height: 43.25rem;\r\n  padding: 10px;\r\n  background-color: ${({ bgColor, theme }) => bgColor || theme.colors.content};\r\n`;\r\n\r\n// 작은 요소들을 감싸는 요소\r\nexport const SmallWrapper = styled(FlexBox)`\r\n  flex-basis: ${(props) => props.width || auto};\r\n  align-self: ${(props) => props.align || auto};\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nconst GridBox = styled.div`\r\n  display: grid;\r\n  grid-template-columns: ${({ cols, items, size }) =>\r\n    cols\r\n      ? setGridTemplateColumns(cols)\r\n      : items\r\n        ? setGridTemplateRepeatColumns(items, size)\r\n        : \"1fr\"};\r\n  grid-template-rows: ${({ rows }) => setGridTemplateRows(rows)};\r\n  grid-gap: ${({ gap }) => setGridGap(gap)};\r\n  grid-auto-flow: ${({ flow }) => setGridAutoFlow(flow)};\r\n  margin: ${({ margin }) => margin || \"0\"};\r\n  padding: ${({ padding }) => padding || \"0\"};\r\n  justify-content: ${({ row }) => setJustifyContent(row)};\r\n  align-items: ${({ col }) => setAlignItems(col)};\r\n`;\r\n\r\nconst setGridTemplateColumns = (cols) => {\r\n  return cols;\r\n};\r\n\r\nconst setGridTemplateRepeatColumns = (items, size = \"1fr\") => {\r\n  return `repeat(${items}, ${size})`;\r\n};\r\n\r\nconst setGridTemplateRows = (rows) => {\r\n  return rows || \"auto\";\r\n};\r\n\r\nconst setGridGap = (gap) => {\r\n  return gap || \"0\";\r\n};\r\n\r\nconst setGridAutoFlow = (flow) => {\r\n  switch (flow) {\r\n    case \"col\":\r\n      return \"column\";\r\n    default:\r\n      return \"row\";\r\n  }\r\n};\r\n\r\nconst setJustifyContent = (row) => {\r\n  switch (row) {\r\n    case \"center\":\r\n      return \"center\";\r\n    case \"start\":\r\n      return \"flex-start\";\r\n    case \"end\":\r\n      return \"flex-end\";\r\n    case \"between\":\r\n      return \"space-between\";\r\n    case \"around\":\r\n      return \"space-around\";\r\n    case \"evenly\":\r\n      return \"space-evenly\";\r\n    default:\r\n      return \"flex-start\";\r\n  }\r\n};\r\n\r\nconst setAlignItems = (col) => {\r\n  switch (col) {\r\n    case \"center\":\r\n      return \"center\";\r\n    case \"start\":\r\n      return \"flex-start\";\r\n    case \"end\":\r\n      return \"flex-end\";\r\n    case \"baseline\":\r\n      return \"baseline\";\r\n    case \"stretch\":\r\n      return \"stretch\";\r\n    default:\r\n      return \"stretch\";\r\n  }\r\n};\r\n\r\nexport default GridBox;\r\n"],"names":["StyledSmallButton","styled","button","type","getColors","bgColor","hoverBgColor","StyledButtonIcon","FontAwesomeIcon","color","fontSize","StyledMiniButton","layout","getIcon","faCircleQuestion","faGear","faX","Button","location","isModalOpen","setIsModalOpen","useState","_jsxs","_Fragment","children","_jsx","onClick","icon","Modal","isOpen","setIsOpen","height","getMessage","propTypes","PropTypes","GameHeader","nickname","FixedHeader","Link","LogoImg","src","FlexBox","attrs","as","row","col","img","SideContentWrapper","MainContentWrapper","Box","div","overflowY","Main","main","position","top","bottom","left","right","maxWidth","width","margin","padding","borderTop","borderRight","borderBottom","borderLeft","borderRadius","zIndex","Wrapper","SpacingWrapper","spacingY","spacingX","BodyWrapper","UpperWrapper","Span","span","font","fontWeight","StyledLink","TAB_TYPES","CREATE","ENTER","LIST","RANKING","PLAYING","READY","WAIT","TAB_BG_COLORS","TAB_TEXT_COLORS","TAB_TEXTS","message","StyledTab","TabIcon","TabSpan","theme","s","MainTab","Tab","rooms","setRoomInfo","useSetRecoilState","roomInfoState","setUser","userInfoState","setCookie","useCookies","navigate","useNavigate","onCreateRoom","useCallback","onTryEnterRoom","availableRooms","filter","room","state","isSecure","currentUserCount","maxUserCount","length","pickedRoom","Math","floor","random","joinRoom","roomId","id","password","loadRoom","userList","userId","path","prev","roomNumber","toString","error","onUserJoinRoom","console","log","getOnClick","hasOnClick","faTrophy","Object","values","Footer","FooterWrapper","FixedFooter","colors","gray500","RankingWrapper","TableWrapper","Table","table","Tbody","tbody","Tr","tr","Th","th","Td","td","textAlign","Ranking","rankData","setRankData","myRank","setMyRank","currPage","setCurrPage","lastPageIdx","setLastPageIdx","response","loading","fetchData","useAxios","method","url","useEffect","pageSize","startIndex","endIndex","pageData","result","slice","ceil","getTopRankColor","rank","TitleBar","map","level","idx","GridBox","flow","cols","LobbyRoomItem","roomInfo","title","maxRound","roundTimeLimit","modalType","setModalType","modalMessage","setModalMessage","RoomItem","isPlaying","onEnterRoom","RoomPlayingShadowText","RoomItemInfoWrapper","LeftInfoWrapper","RoomNumber","CenterInfoWrapper","dir","RoomName","CenterBottomInfoWrapper","RoomSubText","RightInfoWrapper","PlayerCount","LockIcon","faLock","faLockOpen","isRequired","xl","LobbyRoomList","showWaitingRoom","setShowWaitingRoom","showOpenRoom","setShowOpenRoom","RoomListWrapper","RoomItemWrapper","Lobby","setRooms","errorMessage","setErrorMessage","useLocation","pathname","isMounted","loadRoomList","roomList","reverse","onLoadNewRoom","newRoom","onDestroyRoom","onUpdateCurrentPlayerCount","data","currentPlayerCount","onUpdateRoomConfig","onError","async","getCurrentUserInfo","avatarUrl","ContentWrapper","WideContent","Profile","fadeIn","keyframes","blink","Gradation","props","NarrowContent","content","auto","align","items","size","setGridTemplateColumns","setGridTemplateRepeatColumns","rows","setGridTemplateRows","gap","setGridGap","setGridAutoFlow","setJustifyContent","setAlignItems"],"sourceRoot":""}