{"version":3,"file":"static/js/782.2ef0a443.chunk.js","mappings":"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","sources":["components/Web/Shared/Board/BoardItem.jsx","components/Web/Shared/Board/BoardTitle.jsx","components/Web/Shared/Board/ImageFileUpload.jsx","components/Web/Shared/Board/Pagination.jsx","components/Web/Shared/Modal/WebModalStyle.jsx","components/Web/Shared/Modal/WebModal.jsx","components/Web/Shared/Board/ThreadItem.jsx","components/Web/Shared/Board/Thread.jsx","components/Web/Support/InquiryListContainer.jsx","pages/Web/Support/InquiryList.jsx","styles/CommonStyle.jsx","services/date.js","services/regexp.js"],"sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { FlexBox } from \"@/styles/FlexStyle\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { formatDateToTimestamp } from \"@/services/date\";\r\nimport createdAtIcon from \"@/assets/images/clock.png\";\r\nimport viewsIcon from \"@/assets/images/views.png\";\r\n\r\n// ===== style ======\r\nconst BoardItemWrapper = styled(FlexBox)`\r\n  width: ${(props) => props.width || \"fit-content\"};\r\n  height: ${(props) => props.height || \"fit-content\"};\r\n  margin-top: ${(props) => props.marginTop || null};\r\n  margin-bottom: ${(props) => props.marginBottom || null};\r\n  border-top: ${(props) => props.borderTop || null};\r\n  border-bottom: ${(props) => props.borderBottom || null};\r\n`;\r\n\r\nexport const BoardItemImage = styled.img`\r\n  width: ${(props) => props.width || \"24px\"};\r\n  height: ${(props) => props.height || \"24px\"};\r\n  margin-right: ${(props) => props.marginRight || null};\r\n`;\r\n\r\nconst BoardItemText = styled.p`\r\n  color: ${(props) => props.color || \"#32250F\"};\r\n  font-size: ${(props) => props.fontSize || \"25px\"};\r\n`;\r\n\r\nconst FlexBoardText = styled(BoardItemText)`\r\n  width: ${(props) => props.width || \"fit-content\"};\r\n  margin: ${(props) => props.margin || \"0\"};\r\n  margin-left: ${(props) => props.marginLeft || null};\r\n  margin-right: ${(props) => props.marginRight || null};\r\n  font-weight: ${(props) => props.fontWeight || null};\r\n`;\r\n\r\nconst AnswerText = styled.p`\r\n  color: ${(props) => (props.isTrue ? \"#6080FF\" : \"#4B3F2C\")};\r\n  margin: 0;\r\n`;\r\n\r\nconst BoardTd = styled.td`\r\n  width: ${(props) => props.width || \"200px\"};\r\n  text-align: ${(props) => props.align || null};\r\n`;\r\n\r\n// ===== component ======\r\nconst BoardItem = ({ boardType, data, onClick }) => {\r\n  // 임시\r\n  const getTypeName = (type) => {\r\n    switch (type) {\r\n      case 0:\r\n        return \"버그 제보 / 문제 해결\";\r\n      case 1:\r\n        return \"계정 관련 문제\";\r\n      case 2:\r\n        return \"서비스 이용 관련 문의\";\r\n      case 99:\r\n        return \"기타 문의\";\r\n    }\r\n  };\r\n\r\n  const getNeedsAnswer = (bool) => (\r\n    <AnswerText isTrue={bool}>{bool ? \"YES\" : \"NO\"}</AnswerText>\r\n  );\r\n\r\n  const returnCreatedAt = (data) => data.createdAt || data.created_at;\r\n\r\n  return (\r\n    <>\r\n      {boardType === \"notice\" ? (\r\n        <>\r\n          <BoardItemWrapper\r\n            row=\"between\"\r\n            col=\"center\"\r\n            width=\"100%\"\r\n            height=\"40px\"\r\n            marginBottom=\"10px\"\r\n            onClick={onClick}\r\n          >\r\n            <FlexBoardText fontSize=\"20px\">{data.title}</FlexBoardText>\r\n            <BoardItemWrapper row=\"between\" width=\"13.5rem\">\r\n              <BoardItemWrapper col=\"center\">\r\n                <BoardItemImage\r\n                  width=\"20px\"\r\n                  height=\"20px\"\r\n                  src={createdAtIcon}\r\n                  marginRight=\"10px\"\r\n                />\r\n                <FlexBoardText color=\"#A7A7A7\" fontSize=\"18px\">\r\n                  {formatDateToTimestamp(returnCreatedAt(data))}\r\n                </FlexBoardText>\r\n              </BoardItemWrapper>\r\n              <BoardItemWrapper col=\"center\">\r\n                <BoardItemImage\r\n                  width=\"20px\"\r\n                  height=\"20px\"\r\n                  src={viewsIcon}\r\n                  marginRight=\"10px\"\r\n                />\r\n                <FlexBoardText color=\"#A7A7A7\" fontSize=\"18px\">\r\n                  {data.views}\r\n                </FlexBoardText>\r\n              </BoardItemWrapper>\r\n            </BoardItemWrapper>\r\n          </BoardItemWrapper>\r\n        </>\r\n      ) : (\r\n        <>\r\n          {\r\n            <>\r\n              <BoardItemWrapper\r\n                width=\"100%\"\r\n                row=\"between\"\r\n                col=\"center\"\r\n                borderTop=\"1px solid #C2C2C2\"\r\n                onClick={onClick}\r\n              >\r\n                {boardType === \"header\" && (\r\n                  <>\r\n                    <table>\r\n                      <tbody>\r\n                        <tr>\r\n                          <BoardTd>\r\n                            <FlexBoardText\r\n                              margin=\"7px\"\r\n                              marginLeft=\"15px\"\r\n                              fontWeight=\"700\"\r\n                              fontSize=\"22px\"\r\n                            >\r\n                              문의 유형\r\n                            </FlexBoardText>\r\n                          </BoardTd>\r\n                          <BoardTd width=\"700px\">\r\n                            <FlexBoardText\r\n                              margin=\"7px\"\r\n                              marginLeft=\"15px\"\r\n                              fontWeight=\"700\"\r\n                              fontSize=\"22px\"\r\n                            >\r\n                              문의 제목\r\n                            </FlexBoardText>\r\n                          </BoardTd>\r\n                          <BoardTd align=\"right\" width=\"200px\">\r\n                            <FlexBoardText\r\n                              margin=\"7px\"\r\n                              marginLeft=\"50px\"\r\n                              fontWeight=\"700\"\r\n                              fontSize=\"22px\"\r\n                            >\r\n                              작성일\r\n                            </FlexBoardText>\r\n                          </BoardTd>\r\n                          <BoardTd align=\"right\" width=\"180px\">\r\n                            <FlexBoardText\r\n                              margin=\"7px\"\r\n                              marginRight=\"15px\"\r\n                              fontWeight=\"700\"\r\n                              fontSize=\"22px\"\r\n                              width=\"180px\"\r\n                            >\r\n                              답변 유무\r\n                            </FlexBoardText>\r\n                          </BoardTd>\r\n                        </tr>\r\n                      </tbody>\r\n                    </table>\r\n                  </>\r\n                )}\r\n                {boardType === \"inquiry\" && (\r\n                  <>\r\n                    <table>\r\n                      <tbody>\r\n                        <tr>\r\n                          <BoardTd>\r\n                            <FlexBoardText\r\n                              margin=\"7px\"\r\n                              marginLeft=\"15px\"\r\n                              fontSize=\"20px\"\r\n                              width=\"130px\"\r\n                            >\r\n                              {getTypeName(data.type)}\r\n                            </FlexBoardText>\r\n                          </BoardTd>\r\n                          <BoardTd width=\"700px\">\r\n                            <FlexBoardText margin=\"7px\" fontSize=\"22px\">\r\n                              {data.title}\r\n                            </FlexBoardText>\r\n                          </BoardTd>\r\n                          <BoardTd>\r\n                            <FlexBoardText margin=\"7px\" fontSize=\"20px\" width=\"120px\">\r\n                              {data.createdAt}\r\n                            </FlexBoardText>\r\n                          </BoardTd>\r\n                          <BoardTd align=\"right\" width=\"180px\">\r\n                            <FlexBoardText\r\n                              margin=\"7px\"\r\n                              fontWeight=\"700\"\r\n                              fontSize=\"20px\"\r\n                              width=\"120px\"\r\n                            >\r\n                              {getNeedsAnswer(data.needsAnswer)}\r\n                            </FlexBoardText>\r\n                          </BoardTd>\r\n                        </tr>\r\n                      </tbody>\r\n                    </table>\r\n                  </>\r\n                )}\r\n              </BoardItemWrapper>\r\n            </>\r\n          }\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nBoardItem.propTypes = {\r\n  boardType: PropTypes.string,\r\n  isAnswer: PropTypes.bool,\r\n  data: PropTypes.object,\r\n  onClick: PropTypes.func\r\n};\r\n\r\n// title: PropTypes.string,\r\n// createdAt: PropTypes.string,\r\n// views: PropTypes.string,\r\n// type: PropTypes.number,\r\n// needAnswer: PropTypes.bool\r\n\r\nexport default BoardItem;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n// ===== style ======\r\nconst BoardTitleWrapper = styled.div`\r\n  width: ${(props) => props.width || \"fit-content\"};\r\n  height: ${(props) => props.height || \"fit-content\"};\r\n`;\r\n\r\nconst BoardTitleText = styled.p`\r\n  color: ${(props) => props.color || \"#828282\"};\r\n  font-family: \"Gugi\";\r\n  font-size: ${(props) => props.fontSize || \"30px\"};\r\n  font-weight: ${(props) => props.fontWeight || \"500\"};\r\n  margin: 53px 0px 0 64px;\r\n`;\r\n\r\n// ===== component ======\r\nconst BoardTitle = ({ type }) => {\r\n  const getBoardTitle = () => {\r\n    switch (type) {\r\n      case \"notice\":\r\n        return \"공지사항\";\r\n      case \"inquiry\":\r\n        return \"문의사항\";\r\n      case \"create\":\r\n        return \"문의 등록\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <BoardTitleWrapper>\r\n      <BoardTitleText>{getBoardTitle()}</BoardTitleText>\r\n    </BoardTitleWrapper>\r\n  );\r\n};\r\n\r\nBoardTitle.propTypes = {\r\n  type: PropTypes.string\r\n};\r\n\r\nexport default BoardTitle;\r\n","import { useState, useRef, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faX } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FlexBox } from \"@/styles/FlexStyle\";\r\n\r\n// mode 0: default(with plus icon), mode 1: secondary(with text)\r\nconst ImageFileUpload = ({ appendFilesToFormData, width, height, mode = 0 }) => {\r\n  // 화면에 출력되는 이미지 썸네일\r\n  const [previewImgs, setPreviewImgs] = useState([]);\r\n  // 서버 전달용 파일 리스트\r\n  const [selectedFiles, setSelectedFiles] = useState([]);\r\n  const inputRef = useRef(null);\r\n\r\n  const onSelectFile = (e) => {\r\n    e.preventDefault();\r\n    e.persist();\r\n\r\n    // 유사 배열 객체인 File을 배열로 변환\r\n    const newSelectedFiles = Array.from(e.target.files);\r\n    const fileUrlList = [];\r\n\r\n    for (let i = 0; i < newSelectedFiles.length; i++) {\r\n      // 파일 크기 제한\r\n      if (newSelectedFiles[i].size > 1024 * 1024 * 5) {\r\n        alert(\"파일당 5MB를 초과할 수 없습니다.\");\r\n        return;\r\n      }\r\n\r\n      // 파일명 중복 체크\r\n      if (selectedFiles.some((file) => file.name === newSelectedFiles[i].name)) {\r\n        alert(\"같은 이름의 파일이 존재합니다.\");\r\n        return;\r\n      }\r\n\r\n      const currUrl = URL.createObjectURL(newSelectedFiles[i]);\r\n      fileUrlList.push(currUrl);\r\n    }\r\n\r\n    // 기존 파일 리스트에 새로운 파일 추가\r\n    setSelectedFiles((prevFiles) => {\r\n      appendFilesToFormData([...prevFiles, ...newSelectedFiles]);\r\n      return [...prevFiles, ...newSelectedFiles];\r\n    });\r\n\r\n    // 브라우저 상에 보여질 썸네일 이미지\r\n    const thumbnailImageArray = fileUrlList?.map((url, i) => {\r\n      return { name: newSelectedFiles[i].name, url: url };\r\n    });\r\n\r\n    // 첨부 파일 삭제 시\r\n    setPreviewImgs((prev) => prev.concat(thumbnailImageArray));\r\n    e.target.value = \"\";\r\n  };\r\n\r\n  const onDeleteFile = (fileName) => {\r\n    setSelectedFiles((prevFiles) => prevFiles?.filter((file) => file.name !== fileName));\r\n    setPreviewImgs((prevImage) => prevImage?.filter((image) => image.name !== fileName));\r\n  };\r\n\r\n  // 미리보기 이미지\r\n  const previewImg = previewImgs?.map((image, idx) => (\r\n    <div key={idx}>\r\n      <ThumbnailImage src={image.url} alt={image.name} />\r\n      <DeleteButton mode={mode} onClick={() => onDeleteFile(image.name)}>\r\n        <DeleteIcon icon={faX} />\r\n      </DeleteButton>\r\n    </div>\r\n  ));\r\n\r\n  // 미리보기 파일명\r\n  const previewName = selectedFiles?.map((file, idx) => (\r\n    <PreviewNameBox key={idx} col=\"center\">\r\n      <PreviewNameSpan>{file.name}</PreviewNameSpan>\r\n      <DeleteButton onClick={() => onDeleteFile(file.name)}>\r\n        <DeleteIcon icon={faX} />\r\n      </DeleteButton>\r\n    </PreviewNameBox>\r\n  ));\r\n\r\n  return (\r\n    <ImageFileUploadWrapper mode={mode} col={mode !== 0 && \"center\"}>\r\n      {mode === 0 && previewImgs.length !== 0 && (\r\n        <PreviewImgWrapper>{previewImg}</PreviewImgWrapper>\r\n      )}\r\n      {mode !== 0 && previewImgs.length !== 0 && (\r\n        <PreviewImgWrapper>{previewName}</PreviewImgWrapper>\r\n      )}\r\n      {previewImgs.length < 3 && (\r\n        <FileUploadButton\r\n          width={width}\r\n          height={height}\r\n          mode={mode}\r\n          onClick={() => inputRef.current && inputRef.current.click()}\r\n        >\r\n          {mode === 0 ? (\r\n            <PlusIcon icon={faPlus} />\r\n          ) : (\r\n            <AttachmentText>첨부파일</AttachmentText>\r\n          )}\r\n        </FileUploadButton>\r\n      )}\r\n      <UnvisibleInput\r\n        ref={inputRef}\r\n        name=\"images\"\r\n        onChange={onSelectFile}\r\n        accept=\"image/jpg, image/jpeg, image/png, image/bmp, image/webp\"\r\n      />\r\n    </ImageFileUploadWrapper>\r\n  );\r\n};\r\n\r\nImageFileUpload.propTypes = {\r\n  appendFilesToFormData: PropTypes.func,\r\n  width: PropTypes.string,\r\n  height: PropTypes.string,\r\n  mode: PropTypes.number\r\n};\r\n\r\nconst CommonWrapper = styled(FlexBox)`\r\n  & > * + * {\r\n    margin-left: 5px;\r\n  }\r\n`;\r\n\r\nconst ImageFileUploadWrapper = styled(CommonWrapper)`\r\n  width: ${({ mode }) => mode !== 0 && \"100%\"};\r\n  margin-left: ${({ mode }) => mode !== 0 && \"5px\"};\r\n  overflow-x: ${({ mode }) => mode !== 0 && \"auto\"};\r\n`;\r\n\r\nconst PreviewImgWrapper = styled(CommonWrapper)``;\r\n\r\n// ========= 파일명 미리보기 =========\r\nconst PreviewNameBox = styled(FlexBox)`\r\n  width: fit-content;\r\n  height: 2.25rem;\r\n  padding: 0 1.5rem 0 1rem;\r\n  background-color: #eee;\r\n  border-radius: 30px;\r\n`;\r\n\r\nconst PreviewNameSpan = styled.span`\r\n  width: 100%;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n`;\r\n\r\nconst AttachmentText = styled.span`\r\n  font-size: ${({ theme }) => theme.fontSize.xxxs};\r\n`;\r\n\r\n// ========= 이미지 미리보기 =========\r\nconst ThumbnailImage = styled.img`\r\n  width: 6.25rem;\r\n  height: 5.625rem;\r\n  object-fit: cover;\r\n`;\r\n\r\nconst DeleteButton = styled.button`\r\n  position: relative;\r\n  top: ${({ mode }) => (mode !== 0 ? \"0\" : \"-96px\")};\r\n  right: ${({ mode }) => (mode === 0 ? \"-73%\" : \"-12px\")};\r\n  background-color: #000;\r\n  opacity: 0.7;\r\n  border-radius: ${({ mode }) => mode !== 0 && \"50%\"};\r\n`;\r\n\r\nconst DeleteIcon = styled(FontAwesomeIcon)`\r\n  color: #fff;\r\n`;\r\n\r\n// ========= 파일 업로드 =========\r\nconst FileUploadButton = styled.button`\r\n  width: ${({ width }) => width || \"6.25rem\"};\r\n  height: ${({ height }) => height || \"5.625rem\"};\r\n  background-color: ${({ mode }) => (mode === 0 ? \"#585858\" : \"#EBE8E1\")};\r\n  color: ${({ mode }) => mode !== 0 && \"#3F3F3F\"};\r\n  font-size: ${({ mode, theme }) => mode !== 0 && theme.fontSize.xxxs};\r\n\r\n  min-width: ${({ mode }) => mode !== 0 && \"5.5rem\"};\r\n  margin-left: ${({ mode }) => mode !== 0 && \"auto\"};\r\n`;\r\n\r\nconst PlusIcon = styled(FontAwesomeIcon)`\r\n  font-size: ${({ theme }) => theme.fontSize.xxl};\r\n  color: #fff;\r\n`;\r\n\r\nconst UnvisibleInput = styled.input.attrs(() => ({ type: \"file\" }))`\r\n  display: none;\r\n  -webkit-appearance: none;\r\n  appearance: none;\r\n`;\r\n\r\nexport default ImageFileUpload;\r\n","import PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport {\r\n  faAnglesLeft,\r\n  faAngleLeft,\r\n  faAngleRight,\r\n  faAnglesRight\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport FlexBox from \"@/styles/FlexStyle\";\r\n\r\nconst Pagination = ({ currPage = 1, setCurrPage, lastPageIdx = 1 }) => {\r\n  // 페이지 그룹 크기\r\n  const size = 10;\r\n\r\n  // 현재 페이지가 속한 페이지 그룹 (1 ~ 10)\r\n  const currentPageGroup = Math.floor((currPage - 1) / size);\r\n\r\n  // 총 페이지 그룹\r\n  const totalPageGroup = Math.floor((lastPageIdx - 1) / size);\r\n\r\n  // 페이지 그룹의 시작 페이지 번호\r\n  const startPageIdx = currentPageGroup * size + 1;\r\n\r\n  // 현재 페이지에서 나타나는 페이지 목록\r\n  const pageListLength =\r\n    currentPageGroup === totalPageGroup && lastPageIdx % size !== 0\r\n      ? lastPageIdx % size\r\n      : size;\r\n  const pageList = Array.from({ length: pageListLength }, (_, i) => startPageIdx + i);\r\n\r\n  return (\r\n    <PaginationWrapper row=\"center\" col=\"center\">\r\n      <FirstButton icon={faAnglesLeft} onClick={() => setCurrPage(1)}></FirstButton>\r\n      <PrevListButton\r\n        icon={faAngleLeft}\r\n        onClick={() => setCurrPage(Math.max(1, startPageIdx - size))}\r\n      ></PrevListButton>\r\n      <PageList>\r\n        {pageList?.map((page) => (\r\n          <PageItem\r\n            key={page}\r\n            onClick={() => setCurrPage(page)}\r\n            active={currPage === page}\r\n          >\r\n            {page}\r\n          </PageItem>\r\n        ))}\r\n      </PageList>\r\n      <NextListButton\r\n        icon={faAngleRight}\r\n        onClick={() => setCurrPage(Math.min(lastPageIdx, startPageIdx + size))}\r\n      ></NextListButton>\r\n      <LastButton\r\n        icon={faAnglesRight}\r\n        onClick={() => setCurrPage(lastPageIdx)}\r\n      ></LastButton>\r\n    </PaginationWrapper>\r\n  );\r\n};\r\n\r\nPagination.propTypes = {\r\n  currPage: PropTypes.number, // 현재 페이지 번호\r\n  setCurrPage: PropTypes.func, // 현재 페이지 번호 업데이트 함수\r\n  lastPageIdx: PropTypes.number // 마지막 페이지 번호\r\n};\r\n\r\n// 페이지네이션을 감싸는 태그\r\nconst PaginationWrapper = styled(FlexBox)`\r\n  width: 100%;\r\n  height: 30px;\r\n  margin-top: 10px;\r\n`;\r\n\r\n// 페이지네이션에 쓰이는 공통 버튼 스타일\r\nconst PaginationButton = styled(FontAwesomeIcon)`\r\n  margin: 8px;\r\n  font-size: 1rem;\r\n  color: #687587;\r\n  cursor: pointer;\r\n`;\r\n\r\n// 맨 앞으로 가기 버튼\r\nconst FirstButton = styled(PaginationButton)``;\r\n\r\n// 이전 페이지 리스트로 가기 버튼\r\nconst PrevListButton = styled(PaginationButton)``;\r\n\r\n// 다음 페이지 리스트로 가기 버튼\r\nconst NextListButton = styled(PaginationButton)``;\r\n\r\n// 맨 마지막으로 가기 버튼\r\nconst LastButton = styled(PaginationButton)``;\r\n\r\n// 페이지 번호를 감싸는 태그\r\nconst PageList = styled(FlexBox)``;\r\n\r\n// 페이지 번호\r\nconst PageItem = styled.button`\r\n  background-color: transparent;\r\n  font-family: \"Pretendard Variable\";\r\n  width: 32px;\r\n  height: 32px;\r\n  font-size: 16px;\r\n  margin: 0 2px;\r\n  font-weight: ${({ active }) => (active ? \"700\" : \"500\")};\r\n  color: ${({ active }) => (active ? \"#2C333C\" : \"#B0B5BE\")};\r\n  text-decoration: ${({ active }) => (active ? \"underline\" : \"none\")};\r\n\r\n  &:hover {\r\n    background-color: #ffffff90;\r\n    border-radius: 50%;\r\n  }\r\n`;\r\n\r\nexport default Pagination;\r\n","import styled from \"styled-components\";\r\nimport { FlexBox } from \"@/styles/FlexStyle\";\r\n\r\nexport const ModalBackground = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: #000000;\r\n  opacity: 0.7;\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  z-index: 3;\r\n`;\r\n\r\nexport const ModalWrapper = styled.div`\r\n  width: ${(props) => props.width || \"32rem\"};\r\n  height: ${(props) => props.height || \"fit-content\"};\r\n  border-radius: ${(props) => props.borderRadius || null};\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  z-index: 5;\r\n`;\r\n\r\nexport const ModalHeader = styled(FlexBox)`\r\n  width: 100%;\r\n  height: ${(props) => props.height || \"2rem\"};\r\n  background-color: ${({ theme }) => theme.colors.gray200};\r\n  padding-right: 10px;\r\n`;\r\n\r\nexport const ModalContent = styled(FlexBox)`\r\n  width: 100%;\r\n  height: ${(props) => props.height || \"17rem\"};\r\n  background-color: #fefefe;\r\n`;\r\n\r\nexport const ModalMessage = styled.p`\r\n  width: ${(props) => props.width || \"fit-content\"};\r\n  height: ${(props) => props.height || \"fit-content\"};\r\n  font-size: ${({ theme }) => theme.fontSize.m};\r\n  font-weight: 700;\r\n  margin: 0;\r\n  padding-bottom: 50px;\r\n  padding-right: ${(props) => props.paddingRight || null};\r\n`;\r\n\r\nexport const ButtonContainer = styled(FlexBox)`\r\n  width: ${(props) => props.width || \"30rem\"};\r\n  height: ${(props) => props.height || \"fit-content\"};\r\n`;\r\n\r\nexport const BanWrapper = styled.div`\r\n  width: ${(props) => props.width || \"fit-content\"};\r\n  height: ${(props) => props.height || \"fit-content\"};\r\n`;\r\n\r\nexport const BanInputWrapper = styled(FlexBox)`\r\n  width: ${(props) => props.width || \"fit-content\"};\r\n  height: ${(props) => props.height || \"fit-content\"};\r\n`;\r\n\r\nexport const BanInput = styled.input`\r\n  width: ${(props) => props.width || \"20.688rem\"};\r\n  height: ${(props) => props.height || \"3.313rem\"};\r\n  border: 1px solid #ccc;\r\n  padding: 10px;\r\n  font-size: 16px;\r\n`;\r\n\r\nexport const BanTextAreaWrapper = styled(FlexBox)`\r\n  width: ${(props) => props.width || \"fit-content\"};\r\n  height: ${(props) => props.height || \"fit-content\"};\r\n`;\r\n\r\nexport const BanTextArea = styled.textarea`\r\n  width: ${(props) => props.width || \"20.688rem\"};\r\n  height: ${(props) => props.height || \"10.375rem\"};\r\n  border: 1px solid #ccc;\r\n  padding: 10px;\r\n  font-size: 16px;\r\n`;\r\n\r\nexport const BanButtonWrapper = styled(FlexBox)`\r\n  width: ${(props) => props.width || \"26.853rem\"};\r\n  height: ${(props) => props.height || \"fit-content\"};\r\n  padding-top: 20px;\r\n`;\r\n\r\nexport const BanButton = styled.button`\r\n  width: ${(props) => props.width || \"7rem\"};\r\n  height: ${(props) => props.height || \"3.625rem\"};\r\n  background-color: ${({ theme }) => theme.colors.gray100};\r\n  border: 1px solid ${({ theme }) => theme.colors.gray500};\r\n  color: ${({ theme }) => theme.colors.gray600};\r\n  font-size: ${({ theme }) => theme.fontSize.s};\r\n  font-weight: 700;\r\n\r\n  &:hover {\r\n    background-color: ${({ theme }) => theme.colors.gray400};\r\n  }\r\n`;\r\n\r\nexport const ExitMiniCircle = styled.button`\r\n  width: 1.125rem;\r\n  height: 1.125rem;\r\n  background-color: ${({ theme }) => theme.colors.error};\r\n  border-radius: 50%;\r\n\r\n  &:hover {\r\n    background-color: #cf5757;\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport {\r\n  ModalBackground,\r\n  ModalWrapper,\r\n  ModalHeader,\r\n  ExitMiniCircle,\r\n  ModalContent,\r\n  ModalMessage,\r\n  BanWrapper,\r\n  BanInputWrapper,\r\n  BanInput,\r\n  BanTextAreaWrapper,\r\n  BanTextArea,\r\n  BanButtonWrapper,\r\n  BanButton,\r\n  ButtonContainer\r\n} from \"./WebModalStyle\";\r\nimport Button from \"../Buttons/Button.jsx\";\r\nimport { SPECIAL_CHARACTERS_REGEX } from \"@/services/regexp\";\r\nimport { POST_TITLE_REGEX } from \"../../../../services/regexp.js\";\r\n\r\nconst WebModal = ({\r\n  onClick,\r\n  setIsOpen,\r\n  hasButton,\r\n  isBan,\r\n  isWithdrawal = false,\r\n  handleWithdrawal,\r\n  children\r\n}) => {\r\n  const [bannedDays, setBannedDays] = useState(1);\r\n  const [bannedReason, setBannedReason] = useState(\"\");\r\n\r\n  const onValidateChange = (e) => {\r\n    const t = e.target;\r\n    let v = t.value;\r\n\r\n    if (t.type === \"number\") {\r\n      v = parseInt(t.value);\r\n\r\n      if (isNaN(parseInt(v))) {\r\n        return;\r\n      }\r\n\r\n      if (SPECIAL_CHARACTERS_REGEX.test(v)) {\r\n        return;\r\n      }\r\n\r\n      if (v < parseInt(t.min)) {\r\n        v = parseInt(t.min);\r\n      } else if (v > parseInt(t.max)) {\r\n        v = parseInt(t.max);\r\n      }\r\n\r\n      setBannedDays(v);\r\n    } else if (t.type === \"textarea\") {\r\n      if (v.length > t.maxLength || !POST_TITLE_REGEX.test(v)) {\r\n        return;\r\n      }\r\n\r\n      setBannedReason(v);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ModalBackground onClick={() => setIsOpen(false)}></ModalBackground>\r\n      <ModalWrapper>\r\n        <ModalHeader row=\"end\" col=\"center\">\r\n          <ExitMiniCircle onClick={() => setIsOpen(false)}></ExitMiniCircle>\r\n        </ModalHeader>\r\n        <ModalContent dir=\"col\" row=\"center\" col=\"center\" height={isBan && \"25.438rem\"}>\r\n          {hasButton && (\r\n            <>\r\n              <ModalMessage>{children}</ModalMessage>\r\n              {isWithdrawal ? (\r\n                <ButtonContainer row=\"evenly\">\r\n                  <Button\r\n                    key=\"withdrawal\"\r\n                    type=\"modal\"\r\n                    message=\"확인\"\r\n                    onClick={handleWithdrawal}\r\n                  />\r\n                  <Button\r\n                    key=\"exit\"\r\n                    type=\"modal\"\r\n                    message=\"취소\"\r\n                    onClick={() => setIsOpen(false)}\r\n                  />\r\n                </ButtonContainer>\r\n              ) : (\r\n                <Button key=\"confirm\" type=\"modal\" message=\"확인\" onClick={onClick} />\r\n              )}\r\n            </>\r\n          )}\r\n          {isBan && (\r\n            <BanWrapper col=\"center\">\r\n              <BanInputWrapper>\r\n                <ModalMessage paddingRight=\"15px\">밴 일수</ModalMessage>\r\n                <BanInput\r\n                  type=\"number\"\r\n                  min={1}\r\n                  max={200}\r\n                  step={1}\r\n                  value={bannedDays}\r\n                  onChange={onValidateChange}\r\n                />\r\n              </BanInputWrapper>\r\n              <BanTextAreaWrapper>\r\n                <ModalMessage paddingRight=\"15px\">밴 사유</ModalMessage>\r\n                <BanTextArea\r\n                  maxLength={100}\r\n                  value={bannedReason}\r\n                  onChange={onValidateChange}\r\n                />\r\n              </BanTextAreaWrapper>\r\n              <BanButtonWrapper row=\"center\">\r\n                <BanButton\r\n                  onClick={() => onClick(bannedDays, bannedReason)}\r\n                  width=\"11rem\"\r\n                >\r\n                  사용자 비활성화\r\n                </BanButton>\r\n              </BanButtonWrapper>\r\n            </BanWrapper>\r\n          )}\r\n        </ModalContent>\r\n      </ModalWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nWebModal.propTypes = {\r\n  onClick: PropTypes.func,\r\n  setIsOpen: PropTypes.func,\r\n  isBan: PropTypes.bool,\r\n  hasButton: PropTypes.bool,\r\n  isWithdrawal: PropTypes.bool,\r\n  handleWithdrawal: PropTypes.func,\r\n  children: PropTypes.node\r\n};\r\n\r\nexport default WebModal;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { FlexBox } from \"@/styles/FlexStyle\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n// ===== style =====\r\nconst QnAText = styled.p`\r\n  font-family: \"Pretendard Variable\";\r\n  font-size: 53px;\r\n  font-weight: 800;\r\n  margin: 0;\r\n`;\r\n\r\nconst ThreadItemWrapper = styled(FlexBox)`\r\n  width: \"100%\";\r\n  height: ${(props) => props.height || \"fit-content\"};\r\n  margin: ${(props) => props.margin || \"5px\"};\r\n  margin-top: ${(props) => props.marginTop || null};\r\n  margin-bottom: ${(props) => props.marginBottom || null};\r\n`;\r\n\r\nconst ThreadText = styled.p`\r\n  width: ${(props) => props.width || \"fit-content\"};\r\n  font-size: ${(props) => props.fontSize || null};\r\n  color: ${(props) => props.color || null};\r\n  margin: 0;\r\n  margin-bottom: ${(props) => props.marginBottom || null};\r\n`;\r\n\r\n// 임시 크기\r\nconst ThreadImg = styled.img`\r\n  width: ${(props) => props.width || \"150px\"};\r\n  height: ${(props) => props.height || \"150px\"};\r\n`;\r\n\r\n// ===== component ======\r\nconst ThreadItem = ({ isAnswer, content, createdAt, files }) => {\r\n  const getIsAnswer = (bool) => <QnAText isTrue={bool}>{bool ? \"A.\" : \"Q.\"}</QnAText>;\r\n\r\n  return (\r\n    <>\r\n      <ThreadItemWrapper row=\"between\" col=\"start\" marginTop=\"10px\" marginBottom=\"15px\">\r\n        {/* Q or A */}\r\n        <ThreadItemWrapper>\r\n          <ThreadText>{getIsAnswer(isAnswer)}</ThreadText>\r\n        </ThreadItemWrapper>\r\n\r\n        {/* text 및 img */}\r\n        <ThreadItemWrapper dir=\"col\">\r\n          <ThreadText width=\"930px\" fontSize=\"20px\" marginBottom=\"10px\">\r\n            {content}\r\n          </ThreadText>\r\n          {files && (\r\n            <ThreadItemWrapper>\r\n              {files.map((file, index) => (\r\n                <ThreadImg key={index} src={file} alt=\"첨부파일\" />\r\n              ))}\r\n            </ThreadItemWrapper>\r\n          )}\r\n        </ThreadItemWrapper>\r\n\r\n        {/* 작성일 */}\r\n        <ThreadText fontSize=\"18px\" color=\"#A7A7A7\">\r\n          {createdAt}\r\n        </ThreadText>\r\n      </ThreadItemWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nThreadItem.propTypes = {\r\n  isAnswer: PropTypes.bool,\r\n  content: PropTypes.string,\r\n  createdAt: PropTypes.instanceOf(Date),\r\n  files: PropTypes.arrayOf(PropTypes.string)\r\n};\r\n\r\nexport default ThreadItem;\r\n","import React, { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport styled from \"styled-components\";\r\nimport { FlexBox } from \"@/styles/FlexStyle\";\r\nimport PropTypes from \"prop-types\";\r\nimport useAxios from \"@/hooks/useAxios\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faLocationArrow } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n// ===== components import =====\r\nimport ThreadItem from \"@/components/Web/Shared/Board/ThreadItem\";\r\nimport ImageFileUpload from \"@/components/Web/Shared/Board/ImageFileUpload\";\r\nimport WebModal from \"@/components/Web/Shared/Modal/WebModal\";\r\n\r\n// ===== style =====\r\nconst TreadBox = styled(FlexBox)`\r\n  width: ${(props) => props.width || \"100%\"};\r\n  height: fit-content;\r\n  margin-top: ${(props) => props.marginTop || null};\r\n  margin-bottom: ${(props) => props.marginBottom || null};\r\n  background-color: #ecebe6;\r\n`;\r\n\r\nconst ThreadInput = styled.input`\r\n  width: 91%;\r\n  height: 3rem;\r\n  background-color: transparent;\r\n  border: 0;\r\n  border: 1px solid #ccc;\r\n`;\r\n\r\nconst ThreadButton = styled.button`\r\n  flex: 1;\r\n  height: 3rem;\r\n  background-color: transparent;\r\n  border: 1px solid #ccc;\r\n`;\r\n\r\nconst SubmitIcon = styled(FontAwesomeIcon)`\r\n  font-size: ${({ theme }) => theme.fontSize.xxs};\r\n  transform: rotate(43deg);\r\n`;\r\n\r\nconst AttachmentWrapper = styled(FlexBox)`\r\n  width: ${(props) => props.width || \"100%\"};\r\n  margin-top: ${({ marginTop }) => marginTop || \"6px\"};\r\n  height: ${({ height }) => height || \"3rem\"};\r\n  border: 1px solid #ccc;\r\n  overflow-x: auto;\r\n`;\r\n\r\n// ===== component ======\r\nconst Thread = ({ inquiryId, currPage, title, type }) => {\r\n  // === ref ===\r\n  const inputRef = useRef(null);\r\n\r\n  // === state ===\r\n  const [threadData, setThreadData] = useState([]);\r\n  const [threadId, setThreadId] = useState(\"\");\r\n  const [files, setFiles] = useState([]);\r\n  // (modal 관련)\r\n  const [createModalOpen, setCreateModalOpen] = useState(false); // 문의 등록 실패 알림 modal state\r\n\r\n  // === cookie ===\r\n  const [cookies] = useCookies([\"sessionId\"]);\r\n\r\n  // (api 관련)\r\n  const [apiConfig, setApiConfig] = useState({\r\n    method: \"get\",\r\n    url: `/inquiry/${inquiryId}?page=${currPage}`,\r\n    headers: {\r\n      sessionId: cookies.sessionId\r\n    }\r\n  });\r\n  const { response, loading, error, fetchData } = useAxios(apiConfig);\r\n\r\n  useEffect(() => {\r\n    if (apiConfig !== null) {\r\n      fetchData();\r\n    }\r\n  }, [apiConfig]);\r\n\r\n  useEffect(() => {\r\n    if (response !== null) {\r\n      if (apiConfig?.url.startsWith(`/inquiry/${inquiryId}?page=`)) {\r\n        setThreadData(response.result.list);\r\n        setThreadId(response.result.threadId);\r\n      } else if (apiConfig?.url.startsWith(`/inquiry/${threadId}`)) {\r\n        setApiConfig({\r\n          method: \"get\",\r\n          url: `/inquiry/${inquiryId}?page=${currPage}`,\r\n          headers: {\r\n            sessionId: cookies.sessionId\r\n          }\r\n        });\r\n\r\n        if (response !== null) {\r\n          setThreadData(response.result.list);\r\n        } else {\r\n          setThreadData([]);\r\n        }\r\n      }\r\n    } else if (error) {\r\n      if (apiConfig?.url.startsWith(`/inquiry/${inquiryId}?page=`)) {\r\n        setThreadData([]);\r\n      } else if (apiConfig?.url.startsWith(`/inquiry/${threadId}`)) {\r\n        setCreateModalOpen(true);\r\n      }\r\n    }\r\n  }, [response, error]);\r\n\r\n  const appendFilesToFormData = (_files) => {\r\n    if (_files) {\r\n      setFiles(_files);\r\n    } else {\r\n      setFiles([]);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(files);\r\n  }, [files]);\r\n\r\n  const handleClickSubmitButton = () => {\r\n    const content = inputRef.current.value;\r\n\r\n    if (content.length < 1 || content.length > 2000) {\r\n      setCreateModalOpen(true);\r\n    } else {\r\n      const formData = new FormData();\r\n      formData.append(\"title\", title);\r\n      formData.append(\"content\", content);\r\n      files.forEach((file) => {\r\n        formData.append(\"files\", file);\r\n      });\r\n      formData.append(\"type\", type);\r\n\r\n      // 문의 등록 API 호출\r\n      setApiConfig({\r\n        method: \"post\",\r\n        url: `/inquiry/${threadId}`,\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n          sessionId: cookies.sessionId\r\n        },\r\n        data: formData\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleModalOpen = () => {\r\n    setCreateModalOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* 문의 등록 실패 Modal */}\r\n      {createModalOpen && (\r\n        <WebModal onClick={handleModalOpen} hasButton={true}>\r\n          내용을 입력해 주세요.\r\n        </WebModal>\r\n      )}\r\n\r\n      <TreadBox dir=\"col\">\r\n        {/* 상세 스레드 조회 부분 */}\r\n        {threadData?.map((threadItem, index) => (\r\n          <ThreadItem\r\n            key={index}\r\n            isAnswer={threadItem.isAnswer}\r\n            content={threadItem.content}\r\n            createdAt={threadItem.createdAt}\r\n            files={threadItem.file}\r\n          />\r\n        ))}\r\n\r\n        {/* 문의 입력, 이미지 업로드 */}\r\n        <TreadBox dir=\"col\" col=\"center\" marginBottom=\"10px\">\r\n          {/* 문의 입력 */}\r\n          <TreadBox width=\"98%\">\r\n            <ThreadInput ref={inputRef} />\r\n            <ThreadButton onClick={handleClickSubmitButton}>\r\n              <SubmitIcon icon={faLocationArrow} />\r\n            </ThreadButton>\r\n          </TreadBox>\r\n\r\n          {/* 이미지 업로드 */}\r\n          <AttachmentWrapper\r\n            width=\"98%\"\r\n            dir=\"col\"\r\n            row=\"between\"\r\n            col=\"center\"\r\n            height=\"none\"\r\n          >\r\n            <ImageFileUpload\r\n              width=\"7rem\"\r\n              height=\"2.9rem\"\r\n              mode={1}\r\n              appendFilesToFormData={appendFilesToFormData}\r\n            />\r\n          </AttachmentWrapper>\r\n        </TreadBox>\r\n      </TreadBox>\r\n    </>\r\n  );\r\n};\r\n\r\nThread.propTypes = {\r\n  inquiryId: PropTypes.number,\r\n  currPage: PropTypes.number,\r\n  title: PropTypes.string,\r\n  type: PropTypes.number\r\n};\r\n\r\nexport default Thread;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport styled from \"styled-components\";\r\nimport { FlexBox } from \"@/styles/FlexStyle\";\r\n\r\n// ===== hooks import =====\r\nimport useAxios from \"@/hooks/useAxios\";\r\n\r\n// ===== components import =====\r\nimport BoardTitle from \"@/components/Web/Shared/Board/BoardTitle\";\r\nimport BoardItem from \"@/components/Web/Shared/Board/BoardItem\";\r\nimport Pagination from \"@/components/Web/Shared/Board/Pagination\";\r\nimport Button from \"@/components/Web/Shared/Buttons/Button\";\r\nimport Thread from \"@/components/Web/Shared/Board/Thread\";\r\n\r\n// ===== style =====\r\nconst InquiryWrapper = styled(FlexBox)`\r\n  margin-top: ${(props) => props.marginTop || null};\r\n  margin-bottom: ${(props) => props.marginBottom || null};\r\n`;\r\n\r\nconst InquiryListBox = styled.div`\r\n  width: ${(props) => props.width || \"100%\"};\r\n  height: ${(props) => props.height || \"fit-content\"};\r\n  min-height: ${(props) => props.minHeight || null};\r\n  border-top: ${(props) => props.borderTop || null};\r\n  border-bottom: ${(props) => props.borderBottom || null};\r\n  margin-top: ${(props) => props.marginTop || null};\r\n  margin-bottom: ${(props) => props.marginBottom || null};\r\n  margin-left: ${(props) => props.marginLeft || null};\r\n  margin-right: ${(props) => props.marginRight || null};\r\n`;\r\n\r\n// ===== component =====\r\nconst InquiryListContainer = () => {\r\n  // === cookie ===\r\n  const [cookies] = useCookies([\"sessionId\"]);\r\n\r\n  // === state ===\r\n  const [listData, setListData] = useState([]);\r\n  const [currPage, setCurrPage] = useState(1);\r\n  const [lastPageIdx, setLastPageIdx] = useState(30);\r\n  const [selectedInquiryId, setSelectedInquiryId] = useState(null);\r\n  // (api 관련)\r\n  const [apiConfig, setApiConfig] = useState({\r\n    method: \"get\",\r\n    url: `/inquiry/list?page=${currPage}`,\r\n    headers: { sessionId: cookies.sessionId }\r\n  });\r\n  const { response, error, loading, fetchData } = useAxios(apiConfig);\r\n\r\n  // === navigate ===\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [apiConfig]);\r\n\r\n  useEffect(() => {\r\n    if (response !== null) {\r\n      setLastPageIdx(response.result.lastPage === 0 ? 1 : response.result.lastPage);\r\n      setListData(response.result.list);\r\n    } else {\r\n      setLastPageIdx(1);\r\n      setListData([]);\r\n    }\r\n  }, [response, error]);\r\n\r\n  useEffect(() => {\r\n    setApiConfig({\r\n      ...apiConfig,\r\n      url: `/inquiry/list?page=${currPage}`,\r\n      headers: { sessionId: cookies.sessionId }\r\n    });\r\n  }, [currPage]);\r\n\r\n  const handleMoveCreate = () => {\r\n    navigate(`/inquiry/create`);\r\n  };\r\n\r\n  const handleThreadOpen = (inquiryId) => {\r\n    setSelectedInquiryId((prevId) => (prevId === inquiryId ? null : inquiryId));\r\n  };\r\n\r\n  return (\r\n    <InquiryListBox width=\"75rem\" marginLeft=\"auto\" marginRight=\"auto\">\r\n      <BoardTitle type=\"inquiry\" />\r\n\r\n      {/* 버튼 */}\r\n      <InquiryWrapper row=\"end\" marginBottom=\"20px\">\r\n        <Button type=\"smallDark\" message=\"문의 쓰기\" onClick={handleMoveCreate} />\r\n      </InquiryWrapper>\r\n\r\n      {/* 문의 목록 */}\r\n      <InquiryListBox minHeight=\"480px\" borderTop=\"5px solid #C2C2C2\">\r\n        <BoardItem boardType=\"header\" />\r\n        {listData?.map((listData, index) => (\r\n          <div key={index}>\r\n            <BoardItem\r\n              boardType=\"inquiry\"\r\n              id={listData.id}\r\n              data={listData}\r\n              onClick={() => handleThreadOpen(listData.id)}\r\n            />\r\n            {selectedInquiryId === listData.id && (\r\n              <Thread\r\n                inquiryId={selectedInquiryId}\r\n                currPage={currPage}\r\n                title={listData.title}\r\n                type={listData.type}\r\n              />\r\n            )}\r\n          </div>\r\n        ))}\r\n      </InquiryListBox>\r\n\r\n      {/* 페이지네이션 */}\r\n      <InquiryWrapper marginTop=\"25px\">\r\n        <Pagination\r\n          currPage={currPage}\r\n          setCurrPage={setCurrPage}\r\n          lastPageIdx={lastPageIdx}\r\n        />\r\n      </InquiryWrapper>\r\n    </InquiryListBox>\r\n  );\r\n};\r\n\r\nInquiryListContainer.propTypes = {};\r\n\r\nexport default InquiryListContainer;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\n// ===== style import =====\r\nimport { ContentWrapper, WideContent, Main } from \"@/styles/CommonStyle\";\r\n\r\n// ===== components import =====\r\nimport Header from \"@/components/Web/Shared/Layout/Header\";\r\nimport InquiryListContainer from \"@/components/Web/Support/InquiryListContainer\";\r\n\r\n// ===== style =====\r\nconst InquiryListMain = styled(Main)`\r\n  background-color: ${({ theme }) => theme.colors.content};\r\n  height: 100vh;\r\n`;\r\n\r\n// ===== component =====\r\nconst InquiryList = () => {\r\n  return (\r\n    <ContentWrapper row=\"center\" col=\"center\">\r\n      <Header type=\"detail\" />\r\n      <WideContent dir=\"col\" width=\"100%\">\r\n        <InquiryListMain>\r\n          <InquiryListContainer />\r\n        </InquiryListMain>\r\n      </WideContent>\r\n    </ContentWrapper>\r\n  );\r\n};\r\nexport default InquiryList;\r\n","import styled, { keyframes } from \"styled-components\";\r\nimport { FlexBox } from \"./FlexStyle\";\r\n\r\nexport const fadeIn = keyframes`\r\n  from { opacity: 0;}\r\n  to {opacity: 1;}\r\n`;\r\n\r\nexport const blink = keyframes`\r\n  50% {\r\n      opacity: 0;\r\n  }\r\n`;\r\n\r\n// 숨겨진 요소\r\nexport const Hidden = styled.div`\r\n  display: none;\r\n`;\r\n\r\n// 웹 페이지 그라데이션 영역\r\nexport const Gradation = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 42.25rem;\r\n  background-image: linear-gradient(#dbe1ed, #ffffff00);\r\n  z-index: -1;\r\n`;\r\n\r\n// 콘텐츠 영역 감싸는 태그\r\nexport const ContentWrapper = styled(FlexBox)`\r\n  animation: ${fadeIn} 0.5s ease-in-out;\r\n`;\r\n\r\n// 넓은 콘텐츠 영역 (width: 1200px)\r\nexport const WideContent = styled(FlexBox)`\r\n  width: ${(props) => props.width || \"75rem\"};\r\n  height: 100vh;\r\n`;\r\n\r\n// 좁은 콘텐츠 영역 (width: 652px)\r\nexport const NarrowContent = styled(FlexBox)`\r\n  width: 36.75rem; // 기존 40.75rem\r\n  height: ${(props) => props.height || \"fit-content\"};\r\n`;\r\n\r\n// 페이지의 핵심 콘텐츠\r\nexport const Main = styled.main`\r\n  width: 100%;\r\n  margin-top: ${({ type }) =>\r\n    type === \"big\" ? \"10rem\" : type !== \"admin\" ? \"7.5rem\" : \"6.5rem\"};\r\n`;\r\n\r\nexport const Box = styled(FlexBox)`\r\n  width: 100%;\r\n  max-width: 100%;\r\n  height: 43.25rem;\r\n  padding: 10px;\r\n  background-color: ${({ bgColor, theme }) => bgColor || theme.colors.content};\r\n`;\r\n\r\n// 작은 요소들을 감싸는 요소\r\nexport const SmallWrapper = styled(FlexBox)`\r\n  flex-basis: ${(props) => props.width || auto};\r\n  align-self: ${(props) => props.align || auto};\r\n`;\r\n","export const formatDateToTimestamp = (dateString) => {\r\n  const date = new Date(dateString);\r\n  const yyyy = date.getFullYear();\r\n  const MM = String(date.getMonth() + 1).padStart(2, \"0\");\r\n  const dd = String(date.getDate()).padStart(2, \"0\");\r\n  const hh = String(date.getHours()).padStart(2, \"0\");\r\n  const mm = String(date.getMinutes()).padStart(2, \"0\");\r\n  const ss = String(date.getSeconds()).padStart(2, \"0\");\r\n\r\n  return `${yyyy}-${MM}-${dd} ${hh}:${mm}:${ss}`;\r\n};\r\n","export const NICKNAME_REGEX = /^[a-zA-Z0-9가-힣]{1,15}$/;\r\nexport const POST_TITLE_REGEX = /^[a-zA-Z0-9가-힣 -~]{1,100}/;\r\nexport const POST_SEARCH_WORD_REGEX = /^[a-zA-Z가-힣0-9 -~].+$/;\r\nexport const SPECIAL_CHARACTERS_REGEX = /[-!$%^&*()_+|~=`{}\\[\\]:\";'<>?,.\\/]/;\r\n"],"names":["BoardItemWrapper","styled","FlexBox","props","width","height","marginTop","marginBottom","borderTop","borderBottom","BoardItemImage","img","marginRight","BoardItemText","p","color","fontSize","FlexBoardText","margin","marginLeft","fontWeight","AnswerText","isTrue","BoardTd","td","align","BoardItem","boardType","data","onClick","_jsx","_Fragment","children","_jsxs","row","col","title","src","createdAtIcon","formatDateToTimestamp","createdAt","created_at","returnCreatedAt","viewsIcon","views","type","getTypeName","bool","needsAnswer","propTypes","PropTypes","isAnswer","BoardTitleWrapper","div","BoardTitleText","BoardTitle","getBoardTitle","ImageFileUpload","appendFilesToFormData","mode","previewImgs","setPreviewImgs","useState","selectedFiles","setSelectedFiles","inputRef","useRef","onDeleteFile","fileName","prevFiles","filter","file","name","prevImage","image","previewImg","map","idx","ThumbnailImage","url","alt","DeleteButton","DeleteIcon","icon","faX","previewName","PreviewNameBox","PreviewNameSpan","ImageFileUploadWrapper","length","PreviewImgWrapper","FileUploadButton","current","click","PlusIcon","faPlus","AttachmentText","UnvisibleInput","ref","onChange","e","preventDefault","persist","newSelectedFiles","Array","from","target","files","fileUrlList","i","size","alert","some","currUrl","URL","createObjectURL","push","thumbnailImageArray","prev","concat","value","accept","CommonWrapper","span","theme","xxxs","button","FontAwesomeIcon","xxl","input","attrs","Pagination","currPage","setCurrPage","lastPageIdx","currentPageGroup","Math","floor","totalPageGroup","startPageIdx","pageListLength","pageList","_","PaginationWrapper","FirstButton","faAnglesLeft","PrevListButton","faAngleLeft","max","PageList","page","PageItem","active","NextListButton","faAngleRight","min","LastButton","faAnglesRight","PaginationButton","ModalBackground","ModalWrapper","borderRadius","ModalHeader","colors","gray200","ModalContent","ModalMessage","m","paddingRight","ButtonContainer","BanWrapper","BanInputWrapper","BanInput","BanTextAreaWrapper","BanTextArea","textarea","BanButtonWrapper","BanButton","gray100","gray500","gray600","s","gray400","ExitMiniCircle","error","WebModal","setIsOpen","hasButton","isBan","isWithdrawal","handleWithdrawal","bannedDays","setBannedDays","bannedReason","setBannedReason","onValidateChange","t","v","parseInt","isNaN","SPECIAL_CHARACTERS_REGEX","test","maxLength","POST_TITLE_REGEX","dir","Button","message","step","QnAText","ThreadItemWrapper","ThreadText","ThreadImg","ThreadItem","content","index","Date","TreadBox","ThreadInput","ThreadButton","SubmitIcon","xxs","AttachmentWrapper","Thread","inquiryId","threadData","setThreadData","threadId","setThreadId","setFiles","createModalOpen","setCreateModalOpen","cookies","useCookies","apiConfig","setApiConfig","method","headers","sessionId","response","loading","fetchData","useAxios","useEffect","startsWith","result","list","console","log","handleModalOpen","threadItem","handleClickSubmitButton","formData","FormData","append","forEach","faLocationArrow","_files","InquiryWrapper","InquiryListBox","minHeight","InquiryListContainer","listData","setListData","setLastPageIdx","selectedInquiryId","setSelectedInquiryId","navigate","useNavigate","lastPage","handleMoveCreate","id","handleThreadOpen","prevId","InquiryListMain","Main","InquiryList","ContentWrapper","Header","WideContent","fadeIn","keyframes","blink","Gradation","NarrowContent","main","Box","bgColor","auto","dateString","date","yyyy","getFullYear","MM","String","getMonth","padStart","dd","getDate","hh","getHours","mm","getMinutes","ss","getSeconds","NICKNAME_REGEX","POST_SEARCH_WORD_REGEX"],"sourceRoot":""}