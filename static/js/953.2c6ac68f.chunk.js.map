{"version":3,"file":"static/js/953.2c6ac68f.chunk.js","mappings":"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","sources":["components/Web/Shared/Board/BoardItem.jsx","components/Web/Shared/Board/BoardTitle.jsx","components/Web/Shared/Board/Pagination.jsx","components/Web/Shared/Board/SearchBar.jsx","components/Web/Shared/Layout/HeaderTab.jsx","components/Web/Shared/Layout/Header.jsx","components/Web/Support/NoticeListContainer.jsx","pages/Web/Support/NoticeList.jsx","styles/CommonStyle.jsx","styles/FlexStyle.jsx","hooks/useAxios.js","recoil/userState.js","services/date.js","services/regexp.js"],"sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { FlexBox } from \"@/styles/FlexStyle\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { formatDateToTimestamp } from \"@/services/date\";\r\nimport createdAtIcon from \"@/assets/images/clock.png\";\r\nimport viewsIcon from \"@/assets/images/views.png\";\r\n\r\n// ===== style ======\r\nconst BoardItemWrapper = styled(FlexBox)`\r\n  width: ${(props) => props.width || \"fit-content\"};\r\n  height: ${(props) => props.height || \"fit-content\"};\r\n  margin-top: ${(props) => props.marginTop || null};\r\n  margin-bottom: ${(props) => props.marginBottom || null};\r\n  border-top: ${(props) => props.borderTop || null};\r\n  border-bottom: ${(props) => props.borderBottom || null};\r\n`;\r\n\r\nexport const BoardItemImage = styled.img`\r\n  width: ${(props) => props.width || \"24px\"};\r\n  height: ${(props) => props.height || \"24px\"};\r\n  margin-right: ${(props) => props.marginRight || null};\r\n`;\r\n\r\nconst BoardItemText = styled.p`\r\n  color: ${(props) => props.color || \"#32250F\"};\r\n  font-size: ${(props) => props.fontSize || \"25px\"};\r\n`;\r\n\r\nconst FlexBoardText = styled(BoardItemText)`\r\n  width: ${(props) => props.width || \"fit-content\"};\r\n  margin: ${(props) => props.margin || \"0\"};\r\n  margin-left: ${(props) => props.marginLeft || null};\r\n  margin-right: ${(props) => props.marginRight || null};\r\n  font-weight: ${(props) => props.fontWeight || null};\r\n`;\r\n\r\nconst AnswerText = styled.p`\r\n  color: ${(props) => (props.isTrue ? \"#6080FF\" : \"#4B3F2C\")};\r\n  margin: 0;\r\n`;\r\n\r\nconst BoardTd = styled.td`\r\n  width: ${(props) => props.width || \"200px\"};\r\n  text-align: ${(props) => props.align || null};\r\n`;\r\n\r\n// ===== component ======\r\nconst BoardItem = ({ boardType, data, onClick }) => {\r\n  // 임시\r\n  const getTypeName = (type) => {\r\n    switch (type) {\r\n      case 0:\r\n        return \"버그 제보 / 문제 해결\";\r\n      case 1:\r\n        return \"계정 관련 문제\";\r\n      case 2:\r\n        return \"서비스 이용 관련 문의\";\r\n      case 99:\r\n        return \"기타 문의\";\r\n    }\r\n  };\r\n\r\n  const getNeedsAnswer = (bool) => (\r\n    <AnswerText isTrue={bool}>{bool ? \"YES\" : \"NO\"}</AnswerText>\r\n  );\r\n\r\n  const returnCreatedAt = (data) => data.createdAt || data.created_at;\r\n\r\n  return (\r\n    <>\r\n      {boardType === \"notice\" ? (\r\n        <>\r\n          <BoardItemWrapper\r\n            row=\"between\"\r\n            col=\"center\"\r\n            width=\"100%\"\r\n            height=\"40px\"\r\n            marginBottom=\"10px\"\r\n            onClick={onClick}\r\n          >\r\n            <FlexBoardText fontSize=\"20px\">{data.title}</FlexBoardText>\r\n            <BoardItemWrapper row=\"between\" width=\"13.5rem\">\r\n              <BoardItemWrapper col=\"center\">\r\n                <BoardItemImage\r\n                  width=\"20px\"\r\n                  height=\"20px\"\r\n                  src={createdAtIcon}\r\n                  marginRight=\"10px\"\r\n                />\r\n                <FlexBoardText color=\"#A7A7A7\" fontSize=\"18px\">\r\n                  {formatDateToTimestamp(returnCreatedAt(data))}\r\n                </FlexBoardText>\r\n              </BoardItemWrapper>\r\n              <BoardItemWrapper col=\"center\">\r\n                <BoardItemImage\r\n                  width=\"20px\"\r\n                  height=\"20px\"\r\n                  src={viewsIcon}\r\n                  marginRight=\"10px\"\r\n                />\r\n                <FlexBoardText color=\"#A7A7A7\" fontSize=\"18px\">\r\n                  {data.views}\r\n                </FlexBoardText>\r\n              </BoardItemWrapper>\r\n            </BoardItemWrapper>\r\n          </BoardItemWrapper>\r\n        </>\r\n      ) : (\r\n        <>\r\n          {\r\n            <>\r\n              <BoardItemWrapper\r\n                width=\"100%\"\r\n                row=\"between\"\r\n                col=\"center\"\r\n                borderTop=\"1px solid #C2C2C2\"\r\n                onClick={onClick}\r\n              >\r\n                {boardType === \"header\" && (\r\n                  <>\r\n                    <table>\r\n                      <tbody>\r\n                        <tr>\r\n                          <BoardTd>\r\n                            <FlexBoardText\r\n                              margin=\"7px\"\r\n                              marginLeft=\"15px\"\r\n                              fontWeight=\"700\"\r\n                              fontSize=\"22px\"\r\n                            >\r\n                              문의 유형\r\n                            </FlexBoardText>\r\n                          </BoardTd>\r\n                          <BoardTd width=\"700px\">\r\n                            <FlexBoardText\r\n                              margin=\"7px\"\r\n                              marginLeft=\"15px\"\r\n                              fontWeight=\"700\"\r\n                              fontSize=\"22px\"\r\n                            >\r\n                              문의 제목\r\n                            </FlexBoardText>\r\n                          </BoardTd>\r\n                          <BoardTd align=\"right\" width=\"200px\">\r\n                            <FlexBoardText\r\n                              margin=\"7px\"\r\n                              marginLeft=\"50px\"\r\n                              fontWeight=\"700\"\r\n                              fontSize=\"22px\"\r\n                            >\r\n                              작성일\r\n                            </FlexBoardText>\r\n                          </BoardTd>\r\n                          <BoardTd align=\"right\" width=\"180px\">\r\n                            <FlexBoardText\r\n                              margin=\"7px\"\r\n                              marginRight=\"15px\"\r\n                              fontWeight=\"700\"\r\n                              fontSize=\"22px\"\r\n                              width=\"180px\"\r\n                            >\r\n                              답변 유무\r\n                            </FlexBoardText>\r\n                          </BoardTd>\r\n                        </tr>\r\n                      </tbody>\r\n                    </table>\r\n                  </>\r\n                )}\r\n                {boardType === \"inquiry\" && (\r\n                  <>\r\n                    <table>\r\n                      <tbody>\r\n                        <tr>\r\n                          <BoardTd>\r\n                            <FlexBoardText\r\n                              margin=\"7px\"\r\n                              marginLeft=\"15px\"\r\n                              fontSize=\"20px\"\r\n                              width=\"130px\"\r\n                            >\r\n                              {getTypeName(data.type)}\r\n                            </FlexBoardText>\r\n                          </BoardTd>\r\n                          <BoardTd width=\"700px\">\r\n                            <FlexBoardText margin=\"7px\" fontSize=\"22px\">\r\n                              {data.title}\r\n                            </FlexBoardText>\r\n                          </BoardTd>\r\n                          <BoardTd>\r\n                            <FlexBoardText margin=\"7px\" fontSize=\"20px\" width=\"120px\">\r\n                              {data.createdAt}\r\n                            </FlexBoardText>\r\n                          </BoardTd>\r\n                          <BoardTd align=\"right\" width=\"180px\">\r\n                            <FlexBoardText\r\n                              margin=\"7px\"\r\n                              fontWeight=\"700\"\r\n                              fontSize=\"20px\"\r\n                              width=\"120px\"\r\n                            >\r\n                              {getNeedsAnswer(data.needsAnswer)}\r\n                            </FlexBoardText>\r\n                          </BoardTd>\r\n                        </tr>\r\n                      </tbody>\r\n                    </table>\r\n                  </>\r\n                )}\r\n              </BoardItemWrapper>\r\n            </>\r\n          }\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nBoardItem.propTypes = {\r\n  boardType: PropTypes.string,\r\n  isAnswer: PropTypes.bool,\r\n  data: PropTypes.object,\r\n  onClick: PropTypes.func\r\n};\r\n\r\n// title: PropTypes.string,\r\n// createdAt: PropTypes.string,\r\n// views: PropTypes.string,\r\n// type: PropTypes.number,\r\n// needAnswer: PropTypes.bool\r\n\r\nexport default BoardItem;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n// ===== style ======\r\nconst BoardTitleWrapper = styled.div`\r\n  width: ${(props) => props.width || \"fit-content\"};\r\n  height: ${(props) => props.height || \"fit-content\"};\r\n`;\r\n\r\nconst BoardTitleText = styled.p`\r\n  color: ${(props) => props.color || \"#828282\"};\r\n  font-family: \"Gugi\";\r\n  font-size: ${(props) => props.fontSize || \"30px\"};\r\n  font-weight: ${(props) => props.fontWeight || \"500\"};\r\n  margin: 53px 0px 0 64px;\r\n`;\r\n\r\n// ===== component ======\r\nconst BoardTitle = ({ type }) => {\r\n  const getBoardTitle = () => {\r\n    switch (type) {\r\n      case \"notice\":\r\n        return \"공지사항\";\r\n      case \"inquiry\":\r\n        return \"문의사항\";\r\n      case \"create\":\r\n        return \"문의 등록\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <BoardTitleWrapper>\r\n      <BoardTitleText>{getBoardTitle()}</BoardTitleText>\r\n    </BoardTitleWrapper>\r\n  );\r\n};\r\n\r\nBoardTitle.propTypes = {\r\n  type: PropTypes.string\r\n};\r\n\r\nexport default BoardTitle;\r\n","import PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport {\r\n  faAnglesLeft,\r\n  faAngleLeft,\r\n  faAngleRight,\r\n  faAnglesRight\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport FlexBox from \"@/styles/FlexStyle\";\r\n\r\nconst Pagination = ({ currPage = 1, setCurrPage, lastPageIdx = 1 }) => {\r\n  // 페이지 그룹 크기\r\n  const size = 10;\r\n\r\n  // 현재 페이지가 속한 페이지 그룹 (1 ~ 10)\r\n  const currentPageGroup = Math.floor((currPage - 1) / size);\r\n\r\n  // 총 페이지 그룹\r\n  const totalPageGroup = Math.floor((lastPageIdx - 1) / size);\r\n\r\n  // 페이지 그룹의 시작 페이지 번호\r\n  const startPageIdx = currentPageGroup * size + 1;\r\n\r\n  // 현재 페이지에서 나타나는 페이지 목록\r\n  const pageListLength =\r\n    currentPageGroup === totalPageGroup && lastPageIdx % size !== 0\r\n      ? lastPageIdx % size\r\n      : size;\r\n  const pageList = Array.from({ length: pageListLength }, (_, i) => startPageIdx + i);\r\n\r\n  return (\r\n    <PaginationWrapper row=\"center\" col=\"center\">\r\n      <FirstButton icon={faAnglesLeft} onClick={() => setCurrPage(1)}></FirstButton>\r\n      <PrevListButton\r\n        icon={faAngleLeft}\r\n        onClick={() => setCurrPage(Math.max(1, startPageIdx - size))}\r\n      ></PrevListButton>\r\n      <PageList>\r\n        {pageList?.map((page) => (\r\n          <PageItem\r\n            key={page}\r\n            onClick={() => setCurrPage(page)}\r\n            active={currPage === page}\r\n          >\r\n            {page}\r\n          </PageItem>\r\n        ))}\r\n      </PageList>\r\n      <NextListButton\r\n        icon={faAngleRight}\r\n        onClick={() => setCurrPage(Math.min(lastPageIdx, startPageIdx + size))}\r\n      ></NextListButton>\r\n      <LastButton\r\n        icon={faAnglesRight}\r\n        onClick={() => setCurrPage(lastPageIdx)}\r\n      ></LastButton>\r\n    </PaginationWrapper>\r\n  );\r\n};\r\n\r\nPagination.propTypes = {\r\n  currPage: PropTypes.number, // 현재 페이지 번호\r\n  setCurrPage: PropTypes.func, // 현재 페이지 번호 업데이트 함수\r\n  lastPageIdx: PropTypes.number // 마지막 페이지 번호\r\n};\r\n\r\n// 페이지네이션을 감싸는 태그\r\nconst PaginationWrapper = styled(FlexBox)`\r\n  width: 100%;\r\n  height: 30px;\r\n  margin-top: 10px;\r\n`;\r\n\r\n// 페이지네이션에 쓰이는 공통 버튼 스타일\r\nconst PaginationButton = styled(FontAwesomeIcon)`\r\n  margin: 8px;\r\n  font-size: 1rem;\r\n  color: #687587;\r\n  cursor: pointer;\r\n`;\r\n\r\n// 맨 앞으로 가기 버튼\r\nconst FirstButton = styled(PaginationButton)``;\r\n\r\n// 이전 페이지 리스트로 가기 버튼\r\nconst PrevListButton = styled(PaginationButton)``;\r\n\r\n// 다음 페이지 리스트로 가기 버튼\r\nconst NextListButton = styled(PaginationButton)``;\r\n\r\n// 맨 마지막으로 가기 버튼\r\nconst LastButton = styled(PaginationButton)``;\r\n\r\n// 페이지 번호를 감싸는 태그\r\nconst PageList = styled(FlexBox)``;\r\n\r\n// 페이지 번호\r\nconst PageItem = styled.button`\r\n  background-color: transparent;\r\n  font-family: \"Pretendard Variable\";\r\n  width: 32px;\r\n  height: 32px;\r\n  font-size: 16px;\r\n  margin: 0 2px;\r\n  font-weight: ${({ active }) => (active ? \"700\" : \"500\")};\r\n  color: ${({ active }) => (active ? \"#2C333C\" : \"#B0B5BE\")};\r\n  text-decoration: ${({ active }) => (active ? \"underline\" : \"none\")};\r\n\r\n  &:hover {\r\n    background-color: #ffffff90;\r\n    border-radius: 50%;\r\n  }\r\n`;\r\n\r\nexport default Pagination;\r\n","import { useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport { FlexBox } from \"@/styles/FlexStyle\";\r\nimport { faMagnifyingGlass } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { POST_SEARCH_WORD_REGEX } from \"../../../../services/regexp\";\r\n\r\nconst SearchBar = ({ searchType, setSearchKeyword }) => {\r\n  const keywordRef = useRef();\r\n\r\n  const sendKeyword = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!POST_SEARCH_WORD_REGEX.test(keywordRef.current.value)) return;\r\n\r\n    setSearchKeyword(keywordRef.current.value);\r\n    keywordRef.current.value = e.target.value;\r\n  };\r\n\r\n  return (\r\n    <SearchInputWrapper col=\"center\" field={searchType}>\r\n      <SearchTypeInput type=\"text\" readOnly value={searchType} />\r\n      <SearchKeywordInput\r\n        type=\"text\"\r\n        field={searchType}\r\n        placeholder=\"검색어 입력\"\r\n        onKeyDown={(e) => {\r\n          if (e.key === \"Enter\") sendKeyword(e);\r\n        }}\r\n        ref={keywordRef}\r\n      />\r\n      <SearchButton onClick={(e) => sendKeyword(e)}>\r\n        <SearchIcon icon={faMagnifyingGlass} />\r\n      </SearchButton>\r\n    </SearchInputWrapper>\r\n  );\r\n};\r\n\r\nSearchBar.propTypes = {\r\n  searchType: PropTypes.string,\r\n  setSearchKeyword: PropTypes.func\r\n};\r\n\r\nconst SearchInputWrapper = styled(FlexBox)`\r\n  border: 2px solid ${({ theme }) => theme.colors.gray200};\r\n  border-radius: 10px;\r\n  width: 18.5rem;\r\n  height: ${(props) => props.height || \"3.2rem\"};\r\n`;\r\n\r\nconst TransparentInput = styled.input`\r\n  border: 0;\r\n  background-color: transparent;\r\n  font-size: ${({ theme }) => theme.fontSize.xxxs};\r\n`;\r\n\r\nconst SearchTypeInput = styled(TransparentInput)`\r\n  width: ${({ value }) => (value === \"닉네임\" ? \"5.25rem\" : \"4.2rem\")};\r\n  padding: 0 16px;\r\n  border-right: 2px solid ${({ theme }) => theme.colors.gray200};\r\n\r\n  &:hover {\r\n    cursor: default;\r\n  }\r\n`;\r\n\r\nconst SearchKeywordInput = styled(TransparentInput)`\r\n  flex: 1;\r\n  margin: 0 10px;\r\n  width: ${({ field }) => (field === \"닉네임\" ? \"9.25rem\" : \"70%\")};\r\n\r\n  &::placeholder {\r\n    color: #a7a7a7;\r\n  }\r\n`;\r\n\r\nconst SearchButton = styled.button`\r\n  background-color: transparent;\r\n  width: 22px;\r\n  margin-right: 15px;\r\n  padding: 0;\r\n`;\r\n\r\nconst SearchIcon = styled(FontAwesomeIcon)`\r\n  font-size: 19px;\r\n`;\r\n\r\nexport default SearchBar;\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { FlexBox } from \"@/styles/FlexStyle\";\r\n\r\nconst HeaderTab = ({ type = \"default\" }) => {\r\n  const location = useLocation();\r\n  const [clickedTab, setClickedTab] = useState(false);\r\n  const tabsRef = useRef([React.createRef(), React.createRef(), React.createRef()]);\r\n\r\n  useEffect(() => {\r\n    const path = location.pathname;\r\n    if (path.includes(\"notice\")) {\r\n      setClickedTab(0);\r\n    } else if (path.includes(\"inquiry\")) {\r\n      setClickedTab(1);\r\n    } else if (path.includes(\"member\")) {\r\n      setClickedTab(2);\r\n    }\r\n  }, [location]);\r\n\r\n  const handleClick = (e) => {\r\n    const tabIdx = tabsRef.current.findIndex((tab) => tab.current === e.target);\r\n    setClickedTab(tabIdx);\r\n  };\r\n\r\n  return (\r\n    <TabWrapper\r\n      align=\"flex-end\"\r\n      width=\"20rem\"\r\n      row={type === \"guest\" ? \"end\" : \"between\"}\r\n      onClick={handleClick}\r\n    >\r\n      {type === \"clearTab\" || type === \"detail\" ? (\r\n        <>\r\n          <BottomLink to=\"/notice/list\">\r\n            <SpringTab type={type} ref={tabsRef.current[0]} clicked={clickedTab === 0}>\r\n              공지\r\n            </SpringTab>\r\n          </BottomLink>\r\n          <BottomLink to=\"/inquiry/list\">\r\n            <SpringTab type={type} ref={tabsRef.current[1]} clicked={clickedTab === 1}>\r\n              1:1 문의\r\n            </SpringTab>\r\n          </BottomLink>\r\n          <BottomLink to=\"/member/myInfo\">\r\n            <SpringTab type={type} ref={tabsRef.current[2]} clicked={clickedTab === 2}>\r\n              내 정보\r\n            </SpringTab>\r\n          </BottomLink>\r\n        </>\r\n      ) : (\r\n        <BottomLink to=\"/member/join\">\r\n          <SpringTab type={type} ref={tabsRef.current[2]} clicked={clickedTab === 2}>\r\n            회원가입\r\n          </SpringTab>\r\n        </BottomLink>\r\n      )}\r\n    </TabWrapper>\r\n  );\r\n};\r\n\r\n// 탭을 감싸는 태그\r\nconst TabWrapper = styled(FlexBox)`\r\n  flex-basis: ${(props) => props.width || auto};\r\n  align-self: ${(props) => props.align || auto};\r\n`;\r\n\r\n// 아래로 향하는 링크\r\nconst BottomLink = styled(Link)`\r\n  align-self: flex-end;\r\n`;\r\n\r\n// 탭 버튼\r\nconst SpringTab = styled(FlexBox).attrs({ row: \"center\", col: \"center\" })`\r\n  width: 6.3rem;\r\n  height: ${(props) => (props.clicked ? \"2.25rem\" : \"3rem\")};\r\n  background-color: ${(props) => {\r\n    if (props.type === \"detail\") {\r\n      return props.clicked ? props.theme.colors.content : props.theme.colors.paleBlueGray;\r\n    } else {\r\n      return \"transparent\";\r\n    }\r\n  }};\r\n  border-radius: 15px 15px 0 0;\r\n  padding-top: ${({ type }) => (type === \"clearTab\" ? \"0\" : \"14px\")};\r\n  font-family: \"Noto Sans KR\";\r\n  font-weight: 600;\r\n  font-size: 19px;\r\n  color: #4e4e4e;\r\n  align-self: flex-end;\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n    background-color: ${(props) => {\r\n      if (props.type === \"detail\") {\r\n        return props.clicked ? \"#F2F2F2\" : \"#94a7c1\";\r\n      } else {\r\n        return \"transparent\";\r\n      }\r\n    }};\r\n  }\r\n`;\r\n\r\nHeaderTab.propTypes = {\r\n  type: PropTypes.string\r\n};\r\n\r\nexport default HeaderTab;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useSetRecoilState } from \"recoil\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport useAxios from \"@/hooks/useAxios\";\r\nimport { FlexBox } from \"@/styles/FlexStyle\";\r\nimport HeaderTab from \"./HeaderTab\";\r\nimport logo from \"@/assets/images/logo.png\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlay, faSignOut } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { userInfoState } from \"@/recoil/userState\";\r\n\r\nconst Header = ({ type = \"default\" }) => {\r\n  const setUser = useSetRecoilState(userInfoState);\r\n  const [headerBgColor, setHeaderBgColor] = useState(\"transparent\");\r\n  const [headerShadow, setHeaderShadow] = useState();\r\n  const navigate = useNavigate();\r\n  const [cookies, , removeCookie] = useCookies([\"sessionId\"]);\r\n  const [apiConfig, setApiConfig] = useState(null);\r\n  const { response, loading, error, fetchData } = useAxios(apiConfig, false);\r\n\r\n  useEffect(() => {\r\n    if (apiConfig !== null) {\r\n      fetchData();\r\n    }\r\n  }, [apiConfig]);\r\n\r\n  useEffect(() => {\r\n    if (response !== null) {\r\n      setUser(null);\r\n      removeCookie(\"sessionId\", { path: \"/\" });\r\n      if (cookies?.userRole) {\r\n        removeCookie(\"userRole\", { path: \"/\" });\r\n      }\r\n      navigate(\"/\");\r\n    }\r\n  }, [response]);\r\n\r\n  const checkScrollTop = () => {\r\n    if (window.scrollY > 0) {\r\n      setHeaderBgColor(\"#EAEFF9\");\r\n      setHeaderShadow(\"-14px 15px 30px #EAEFF9\");\r\n    } else {\r\n      setHeaderBgColor(\"transparent\");\r\n      setHeaderShadow(\"none\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", checkScrollTop);\r\n    return () => window.removeEventListener(\"scroll\", checkScrollTop);\r\n  }, []);\r\n\r\n  return (\r\n    <FixedHeader color={headerBgColor} shadow={headerShadow}>\r\n      <HeaderContent type={type}>\r\n        <Link to=\"/\">\r\n          <LogoImg src={logo} type={type} />\r\n        </Link>\r\n        {(type === \"detail\" || type === \"clearTab\" || type === \"guest\") && (\r\n          <HeaderTab type={type}></HeaderTab>\r\n        )}\r\n        {(type === \"admin\" || type === \"admin-detail\") && (\r\n          <ButtonWrapper>\r\n            <Link to=\"/game\">\r\n              <GameButton>\r\n                <FontAwesomeIcon icon={faPlay} color=\"#FAC138\" />\r\n                게임시작\r\n              </GameButton>\r\n            </Link>\r\n            <LogoutButton\r\n              onClick={() =>\r\n                setApiConfig({\r\n                  method: \"get\",\r\n                  url: \"/user/signout\",\r\n                  headers: {\r\n                    sessionId: cookies.sessionId\r\n                  }\r\n                })\r\n              }\r\n            >\r\n              <LogoutIcon icon={faSignOut} />\r\n            </LogoutButton>\r\n          </ButtonWrapper>\r\n        )}\r\n      </HeaderContent>\r\n    </FixedHeader>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  type: PropTypes.string\r\n};\r\n\r\nconst FixedHeader = styled(FlexBox).attrs(() => ({\r\n  as: \"header\",\r\n  row: \"center\"\r\n}))`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  background-color: ${({ color }) => color};\r\n  box-shadow: ${({ shadow }) => shadow};\r\n  z-index: 3;\r\n`;\r\n\r\nconst HeaderContent = styled(FlexBox).attrs(({ type }) => ({\r\n  row: type === \"big\" ? \"center\" : \"between\",\r\n  col: \"center\"\r\n}))`\r\n  width: ${({ type }) =>\r\n    type === \"admin\" ? \"100%\" : type === \"admin-detail\" ? \"84rem\" : \"75rem\"};\r\n  height: ${({ type }) =>\r\n    type === \"big\"\r\n      ? \"10rem\"\r\n      : type === \"guest\"\r\n        ? \"8.5rem\"\r\n        : type === \"admin-detail\"\r\n          ? \"6.5rem\"\r\n          : \"7.5rem\"};\r\n  padding: ${({ type }) => (type === \"admin\" ? \"0 60px\" : \"0 30px\")};\r\n`;\r\n\r\n// 로고 이미지 사이즈 조정\r\nconst setLogoSize = (type) => {\r\n  switch (type) {\r\n    case \"big\":\r\n      return ` width: 5.5rem; `;\r\n    default:\r\n      return ` width: 4rem; `;\r\n  }\r\n};\r\n\r\n// 로고 이미지\r\nconst LogoImg = styled.img`\r\n  ${({ type }) => setLogoSize(type)};\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst ButtonWrapper = styled(FlexBox)``;\r\n\r\nconst GameButton = styled.button`\r\n  width: 11.8rem;\r\n  height: 4.5rem;\r\n  font-family: \"Pretendard Variable\";\r\n  font-size: 25px;\r\n  font-weight: 800;\r\n  background-color: #fce8b7;\r\n  border: 5px solid #ffd46c;\r\n  border-radius: 22px;\r\n  border-top-right-radius: 0;\r\n  border-bottom-right-radius: 0;\r\n  color: #403a34;\r\n\r\n  & > svg {\r\n    margin-right: 12px;\r\n  }\r\n\r\n  &:hover {\r\n    background-color: rgb(255 211 104);\r\n  }\r\n`;\r\n\r\nconst LogoutButton = styled.button`\r\n  width: 5rem;\r\n  height: 4.5rem;\r\n  font-family: \"Pretendard Variable\";\r\n  font-size: 25px;\r\n  font-weight: 800;\r\n  background-color: rgb(219 219 219);\r\n  border: 5px solid rgb(187 187 187);\r\n  border-radius: 22px;\r\n  border-top-left-radius: 0;\r\n  border-bottom-left-radius: 0;\r\n\r\n  &:hover {\r\n    background-color: rgb(207 207 207);\r\n  }\r\n`;\r\n\r\nconst LogoutIcon = styled(FontAwesomeIcon)`\r\n  font-size: 25px;\r\n  color: ${({ theme }) => theme.colors.text.main};\r\n`;\r\n\r\nexport default Header;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { FlexBox } from \"@/styles/FlexStyle\";\r\n\r\n// ===== hooks import =====\r\nimport useAxios from \"@/hooks/useAxios\";\r\n\r\n// ===== service import =====\r\nimport { POST_SEARCH_WORD_REGEX } from \"../../../services/regexp\";\r\n\r\n// ===== components import =====\r\nimport BoardTitle from \"@/components/Web/Shared/Board/BoardTitle\";\r\nimport SearchBar from \"@/components/Web/Shared/Board/SearchBar\";\r\nimport BoardItem from \"@/components/Web/Shared/Board/BoardItem\";\r\nimport Pagination from \"@/components/Web/Shared/Board/Pagination\";\r\n\r\n// ===== style =====\r\nconst NoticeWrapper = styled(FlexBox)`\r\n  margin-right: ${(props) => props.marginRight};\r\n  margin-top: ${(props) => props.marginTop || null};\r\n  margin-bottom: ${(props) => props.marginBottom || null};\r\n`;\r\n\r\nconst NoticeListBox = styled.div`\r\n  width: ${(props) => props.width || \"fit-content\"};\r\n  height: ${(props) => props.height || \"fit-content\"};\r\n  margin-left: ${(props) => props.marginLeft || null};\r\n  margin-right: ${(props) => props.marginRight || null};\r\n  padding: ${(props) => props.padding};\r\n`;\r\n\r\n// ===== component =====\r\nconst NoticeListContainer = () => {\r\n  // === state ===\r\n  const [listData, setListData] = useState([]);\r\n  const [currPage, setCurrPage] = useState(1);\r\n  const [lastPageIdx, setLastPageIdx] = useState(30);\r\n  const [searchKeyword, setSearchKeyword] = useState(\"\");\r\n  // (api 관련)\r\n  const [apiConfig, setApiConfig] = useState({\r\n    method: \"get\",\r\n    url: `/notice/list?page=${currPage}`\r\n  });\r\n  const { response, error, loading, fetchData } = useAxios(apiConfig);\r\n\r\n  // === navigate ===\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (apiConfig !== null) {\r\n      fetchData();\r\n    }\r\n  }, [apiConfig]);\r\n\r\n  useEffect(() => {\r\n    if (response !== null) {\r\n      if (apiConfig.url.includes(\"/search?q=\")) {\r\n        setLastPageIdx(1);\r\n        setListData(response.result);\r\n        console.log(response.result);\r\n      } else {\r\n        setLastPageIdx(response.lastPage === 0 ? 1 : response.lastPage);\r\n        setListData(response.list);\r\n        console.log(response.list);\r\n      }\r\n    } else {\r\n      setLastPageIdx(1);\r\n      setListData([]);\r\n    }\r\n  }, [response, error]);\r\n\r\n  // 페이지 변경, 검색 시 호출\r\n  useEffect(() => {\r\n    if (searchKeyword === \"\" || !POST_SEARCH_WORD_REGEX.test(searchKeyword)) return;\r\n\r\n    setApiConfig({\r\n      ...apiConfig,\r\n      url: `/notice/search?q=${searchKeyword}&page=${currPage}`\r\n    });\r\n  }, [currPage, searchKeyword]);\r\n\r\n  const onDetailOpen = (noticeId) => {\r\n    navigate(`/notice/${noticeId}`);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <NoticeListBox width=\"75rem\" marginLeft=\"auto\" marginRight=\"auto\">\r\n        <BoardTitle type=\"notice\" />\r\n        <NoticeWrapper row=\"end\" marginBottom=\"25px\" marginRight=\"56px\">\r\n          <SearchBar searchType=\"제목\" setSearchKeyword={setSearchKeyword} />\r\n        </NoticeWrapper>\r\n        <NoticeListBox width=\"100%\" height=\"fit-content\" padding=\"10px 72px\">\r\n          {listData?.map((listData, index) => (\r\n            <BoardItem\r\n              boardType=\"notice\"\r\n              key={index}\r\n              id={listData.id}\r\n              data={listData}\r\n              onClick={() => onDetailOpen(listData.id)}\r\n            />\r\n          ))}\r\n        </NoticeListBox>\r\n        <NoticeWrapper marginTop=\"25px\">\r\n          <Pagination\r\n            currPage={currPage}\r\n            setCurrPage={setCurrPage}\r\n            lastPageIdx={lastPageIdx}\r\n          />\r\n        </NoticeWrapper>\r\n      </NoticeListBox>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NoticeListContainer;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\n// ===== style import =====\r\nimport { ContentWrapper, WideContent, Main } from \"@/styles/CommonStyle\";\r\n\r\n// ===== components import =====\r\nimport Header from \"@/components/Web/Shared/Layout/Header\";\r\nimport NoticeListContainer from \"@/components/Web/Support/NoticeListContainer\";\r\n\r\n// ===== style =====\r\nconst NoticeListMain = styled(Main)`\r\n  background-color: ${({ theme }) => theme.colors.content};\r\n  height: 100vh;\r\n`;\r\n\r\n// ===== component =====\r\nconst NoticeList = () => {\r\n  return (\r\n    <ContentWrapper row=\"center\" col=\"center\">\r\n      <Header type=\"detail\" />\r\n      <WideContent dir=\"col\" width=\"100%\">\r\n        <NoticeListMain>\r\n          <NoticeListContainer />\r\n        </NoticeListMain>\r\n      </WideContent>\r\n    </ContentWrapper>\r\n  );\r\n};\r\n\r\nexport default NoticeList;\r\n","import styled, { keyframes } from \"styled-components\";\r\nimport { FlexBox } from \"./FlexStyle\";\r\n\r\nexport const fadeIn = keyframes`\r\n  from { opacity: 0;}\r\n  to {opacity: 1;}\r\n`;\r\n\r\nexport const blink = keyframes`\r\n  50% {\r\n      opacity: 0;\r\n  }\r\n`;\r\n\r\n// 숨겨진 요소\r\nexport const Hidden = styled.div`\r\n  display: none;\r\n`;\r\n\r\n// 웹 페이지 그라데이션 영역\r\nexport const Gradation = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 42.25rem;\r\n  background-image: linear-gradient(#dbe1ed, #ffffff00);\r\n  z-index: -1;\r\n`;\r\n\r\n// 콘텐츠 영역 감싸는 태그\r\nexport const ContentWrapper = styled(FlexBox)`\r\n  animation: ${fadeIn} 0.5s ease-in-out;\r\n`;\r\n\r\n// 넓은 콘텐츠 영역 (width: 1200px)\r\nexport const WideContent = styled(FlexBox)`\r\n  width: ${(props) => props.width || \"75rem\"};\r\n  height: 100vh;\r\n`;\r\n\r\n// 좁은 콘텐츠 영역 (width: 652px)\r\nexport const NarrowContent = styled(FlexBox)`\r\n  width: 36.75rem; // 기존 40.75rem\r\n  height: ${(props) => props.height || \"fit-content\"};\r\n`;\r\n\r\n// 페이지의 핵심 콘텐츠\r\nexport const Main = styled.main`\r\n  width: 100%;\r\n  margin-top: ${({ type }) =>\r\n    type === \"big\" ? \"10rem\" : type !== \"admin\" ? \"7.5rem\" : \"6.5rem\"};\r\n`;\r\n\r\nexport const Box = styled(FlexBox)`\r\n  width: 100%;\r\n  max-width: 100%;\r\n  height: 43.25rem;\r\n  padding: 10px;\r\n  background-color: ${({ bgColor, theme }) => bgColor || theme.colors.content};\r\n`;\r\n\r\n// 작은 요소들을 감싸는 요소\r\nexport const SmallWrapper = styled(FlexBox)`\r\n  flex-basis: ${(props) => props.width || auto};\r\n  align-self: ${(props) => props.align || auto};\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const FlexBox = styled.div`\r\n  display: flex;\r\n  flex-direction: ${({ dir }) => setFlexDirection(dir)};\r\n  justify-content: ${({ row }) => setJustifyContent(row)};\r\n  align-items: ${({ col }) => setAlignItems(col)};\r\n  position: ${({ position }) => position};\r\n  top: ${({ top }) => top};\r\n  bottom: ${({ bottom }) => bottom};\r\n  left: ${({ left }) => left};\r\n  right: ${({ right }) => right};\r\n  width: ${({ width }) => width};\r\n  height: ${({ height }) => height};\r\n  margin: ${({ margin }) => margin};\r\n  padding: ${({ padding }) => padding};\r\n  flex: ${({ flex }) => flex};\r\n  background-color: ${({ bgColor }) => bgColor};\r\n  box-shadow: ${({ shadow }) => shadow};\r\n  border: ${({ border }) => border};\r\n  border-top: ${({ borderTop }) => borderTop};\r\n  border-right: ${({ borderRight }) => borderRight};\r\n  border-bottom: ${({ borderBottom }) => borderBottom};\r\n  border-left: ${({ borderLeft }) => borderLeft};\r\n  border-radius: ${({ borderRadius }) => borderRadius};\r\n  z-index: ${({ zIndex }) => zIndex};\r\n\r\n  ${({ clicky }) =>\r\n    clicky &&\r\n    `\r\n    :hover {\r\n      cursor: pointer;\r\n    }\r\n  `}\r\n`;\r\n\r\n// flex-box의 flex-direction 설정\r\nconst setFlexDirection = (dir) => {\r\n  switch (dir) {\r\n    case \"col\":\r\n      return \"column\";\r\n  }\r\n};\r\n\r\n// flex-box 안의 justify-content 값 설정\r\nconst setJustifyContent = (row) => {\r\n  switch (row) {\r\n    case \"center\":\r\n      return \"center\";\r\n    case \"start\":\r\n      return \"flex-start\";\r\n    case \"end\":\r\n      return \"flex-end\";\r\n    case \"between\":\r\n      return \"space-between\";\r\n    case \"around\":\r\n      return \"space-around\";\r\n    case \"evenly\":\r\n      return \"space-evenly\";\r\n    default:\r\n      return \"flex-start\";\r\n  }\r\n};\r\n\r\n// flex-box 안의 align-items 값 설정\r\nconst setAlignItems = (col) => {\r\n  switch (col) {\r\n    case \"center\":\r\n      return \"center\";\r\n    case \"start\":\r\n      return \"flex-start\";\r\n    case \"end\":\r\n      return \"flex-end\";\r\n    case \"baseline\":\r\n      return \"baseline\";\r\n    case \"stretch\":\r\n      return \"stretch\";\r\n    default:\r\n      return \"stretch\";\r\n  }\r\n};\r\n\r\nexport default FlexBox;\r\n","import { useRef, useEffect, useState, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../services/const\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: BASE_URL\r\n  // withCredentials: true\r\n});\r\n\r\n// config = { method, url, headers, data }\r\nconst useAxios = (config, executeOnMount = true) => {\r\n  const isDataFetched = useRef(false);\r\n  const [response, setResponse] = useState(null);\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const fetchData = useCallback(async () => {\r\n    setLoading(true);\r\n    setError(\"\");\r\n    try {\r\n      const res = await instance.request(config);\r\n      setResponse(res.data);\r\n    } catch (error) {\r\n      setError(error.response?.data.error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [config]);\r\n\r\n  useEffect(() => {\r\n    if (isDataFetched.current) return;\r\n\r\n    if (executeOnMount) {\r\n      fetchData();\r\n      isDataFetched.current = true;\r\n    }\r\n  }, [executeOnMount]);\r\n\r\n  return { response, error, loading, fetchData };\r\n};\r\n\r\nexport default useAxios;\r\n","import { atom, selector, selectorFamily } from \"recoil\";\r\n\r\nexport const userInfoState = atom({\r\n  key: \"userInfoState\",\r\n  default: null // e.g., { username: \"username\", nickname: \"nickname\", role: \"admin\", level: 1, winRate: 0.0, exp: 0, avatarUrl: \"\" }\r\n});\r\n\r\n// userState -> avatarUrl만 추출\r\nexport const avatarUrlState = selector({\r\n  key: \"avatarUrlState\",\r\n  get: ({ get }) => {\r\n    const user = get(userInfoState);\r\n    return user?.avatarUrl;\r\n  }\r\n});\r\n\r\n// userState -> isActive(활성화 여부)만 추출\r\nexport const isActiveAccountState = atom({\r\n  key: \"isActiveAccountState\",\r\n  default: true\r\n});\r\n\r\n// read-only\r\n// export const isActiveAccountState = selector({\r\n//   key: \"isActiveAccountState\",\r\n//   get: ({ get }) => {\r\n//     const user = get(userInfoState);\r\n//     return user.isActive;\r\n//   }\r\n// });\r\n\r\n// 대기실 플레이어들의 상태 목록\r\nexport const waitingPlayerListState = atom({\r\n  key: \"waitingPlayerListState\",\r\n  default: []\r\n});\r\n\r\n// 대기실 플레이어의 상태\r\nexport const waitingPlayerState = atom({\r\n  key: \"waitingPlayerState\",\r\n  default: {\r\n    isReady: false,\r\n    isHost: true\r\n  }\r\n});\r\n\r\n// 인게임 플레이어들의 상태 목록\r\nexport const playingPlayerListState = atom({\r\n  key: \"playingPlayerListState\",\r\n  default: []\r\n});\r\n\r\n// 인게임 플레이어의 상태\r\nexport const playingPlayerState = atom({\r\n  key: \"playingPlayerState\",\r\n  default: {\r\n    myTurn: false,\r\n    score: 0\r\n  }\r\n\r\n  // get:\r\n  //   () =>\r\n  //   ({ get }) => {\r\n  //     const user = get(userInfoState);\r\n  //     return {\r\n  //       ...user,\r\n  //       myTurn: false,\r\n  //       roundScore: [],\r\n  //       totalScore: 0\r\n  //     };\r\n  //   },\r\n  // set:\r\n  //   () =>\r\n  //   ({ set }, newValue) => {\r\n  //     set(playingPlayerState(), newValue);\r\n  //   }\r\n});\r\n\r\n// 인게임 플레이어 -> 인게임 플레이어들 목록 동기화\r\nexport const syncPlayingPlayerToListState = selector({\r\n  key: \"syncPlayingPlayerToListState\",\r\n  get: ({ get }) => {\r\n    const playerList = get(playingPlayerListState);\r\n    const currPlayer = get(playingPlayerState);\r\n    return playerList.map((player) =>\r\n      player.id === currPlayer.id ? currPlayer : player\r\n    );\r\n  },\r\n  set: ({ set }, newValue) => {\r\n    set(playingPlayerListState, newValue);\r\n  }\r\n});\r\n","export const formatDateToTimestamp = (dateString) => {\r\n  const date = new Date(dateString);\r\n  const yyyy = date.getFullYear();\r\n  const MM = String(date.getMonth() + 1).padStart(2, \"0\");\r\n  const dd = String(date.getDate()).padStart(2, \"0\");\r\n  const hh = String(date.getHours()).padStart(2, \"0\");\r\n  const mm = String(date.getMinutes()).padStart(2, \"0\");\r\n  const ss = String(date.getSeconds()).padStart(2, \"0\");\r\n\r\n  return `${yyyy}-${MM}-${dd} ${hh}:${mm}:${ss}`;\r\n};\r\n","export const NICKNAME_REGEX = /^[a-zA-Z0-9가-힣]{1,15}$/;\r\nexport const POST_TITLE_REGEX = /^[a-zA-Z0-9가-힣 -~]{1,100}/;\r\nexport const POST_SEARCH_WORD_REGEX = /^[a-zA-Z가-힣0-9 -~].+$/;\r\nexport const SPECIAL_CHARACTERS_REGEX = /[-!$%^&*()_+|~=`{}\\[\\]:\";'<>?,.\\/]/;\r\n"],"names":["BoardItemWrapper","styled","FlexBox","props","width","height","marginTop","marginBottom","borderTop","borderBottom","BoardItemImage","img","marginRight","BoardItemText","p","color","fontSize","FlexBoardText","margin","marginLeft","fontWeight","AnswerText","isTrue","BoardTd","td","align","BoardItem","boardType","data","onClick","_jsx","_Fragment","children","_jsxs","row","col","title","src","createdAtIcon","formatDateToTimestamp","createdAt","created_at","returnCreatedAt","viewsIcon","views","type","getTypeName","bool","needsAnswer","propTypes","PropTypes","isAnswer","BoardTitleWrapper","div","BoardTitleText","BoardTitle","getBoardTitle","Pagination","currPage","setCurrPage","lastPageIdx","size","currentPageGroup","Math","floor","totalPageGroup","startPageIdx","pageListLength","pageList","Array","from","length","_","i","PaginationWrapper","FirstButton","icon","faAnglesLeft","PrevListButton","faAngleLeft","max","PageList","map","page","PageItem","active","NextListButton","faAngleRight","min","LastButton","faAnglesRight","PaginationButton","FontAwesomeIcon","button","SearchBar","searchType","setSearchKeyword","keywordRef","useRef","sendKeyword","e","preventDefault","POST_SEARCH_WORD_REGEX","test","current","value","target","SearchInputWrapper","field","SearchTypeInput","readOnly","SearchKeywordInput","placeholder","onKeyDown","key","ref","SearchButton","SearchIcon","faMagnifyingGlass","theme","colors","gray200","TransparentInput","input","xxxs","HeaderTab","location","useLocation","clickedTab","setClickedTab","useState","tabsRef","React","useEffect","path","pathname","includes","TabWrapper","tabIdx","findIndex","tab","BottomLink","to","SpringTab","clicked","auto","Link","attrs","content","paleBlueGray","Header","setUser","useSetRecoilState","userInfoState","headerBgColor","setHeaderBgColor","headerShadow","setHeaderShadow","navigate","useNavigate","cookies","removeCookie","useCookies","apiConfig","setApiConfig","response","loading","error","fetchData","useAxios","userRole","checkScrollTop","window","scrollY","addEventListener","removeEventListener","FixedHeader","shadow","HeaderContent","LogoImg","ButtonWrapper","GameButton","faPlay","LogoutButton","method","url","headers","sessionId","LogoutIcon","faSignOut","as","setLogoSize","text","main","NoticeWrapper","NoticeListBox","padding","NoticeListContainer","listData","setListData","setLastPageIdx","searchKeyword","result","console","log","lastPage","list","index","id","onDetailOpen","noticeId","NoticeListMain","Main","NoticeList","ContentWrapper","WideContent","dir","fadeIn","keyframes","blink","Gradation","NarrowContent","Box","bgColor","setFlexDirection","setJustifyContent","setAlignItems","position","top","bottom","left","right","flex","border","borderRight","borderLeft","borderRadius","zIndex","clicky","instance","axios","create","baseURL","BASE_URL","config","executeOnMount","arguments","undefined","isDataFetched","setResponse","setError","setLoading","useCallback","async","res","request","_error$response","atom","default","isActiveAccountState","selector","get","_ref","user","avatarUrl","waitingPlayerListState","playingPlayerListState","isReady","isHost","playingPlayerState","myTurn","score","syncPlayingPlayerToListState","_ref2","playerList","currPlayer","player","set","_ref3","newValue","dateString","date","Date","yyyy","getFullYear","MM","String","getMonth","padStart","dd","getDate","hh","getHours","mm","getMinutes","ss","getSeconds","concat","NICKNAME_REGEX","POST_TITLE_REGEX","SPECIAL_CHARACTERS_REGEX"],"sourceRoot":""}